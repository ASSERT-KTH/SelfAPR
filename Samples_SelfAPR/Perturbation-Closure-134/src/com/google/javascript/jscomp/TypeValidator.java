[P8_Replace_Mix]^private  JSType allValueTypes;^62^^^^^57^67^private final JSType allValueTypes;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^private final List<TypeMismatch> mismatches  = null ;^67^^^^^62^72^private final List<TypeMismatch> mismatches = Lists.newArrayList (  ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P1_Replace_Type]^private static final char FOUND_REQUIRED = "{0}\n" + "found   : {1}\n" + "required: {2}";^70^71^72^73^^70^73^private static final String FOUND_REQUIRED = "{0}\n" + "found   : {1}\n" + "required: {2}";^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P2_Replace_Operator]^private static final String FOUND_REQUIRED = "{0}\n" + "found  >=  : {1}\n" + "required: {2}";^70^71^72^73^^70^73^private static final String FOUND_REQUIRED = "{0}\n" + "found   : {1}\n" + "required: {2}";^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P2_Replace_Operator]^private static final String FOUND_REQUIRED = "{0}\n" + "found  >>  : {1}\n" + "required: {2}";^70^71^72^73^^70^73^private static final String FOUND_REQUIRED = "{0}\n" + "found   : {1}\n" + "required: {2}";^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^private static final String FOUND_REQUIRED = "0}\n" + "found   : {1}\n" + "required: {2}";^70^71^72^73^^70^73^private static final String FOUND_REQUIRED = "{0}\n" + "found   : {1}\n" + "required: {2}";^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^private static final String FOUND_REQUIRED = "{0}\n" + "found  ound   : {1}\n" + "required: {2}";^70^71^72^73^^70^73^private static final String FOUND_REQUIRED = "{0}\n" + "found   : {1}\n" + "required: {2}";^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^private static final String FOUND_REQUIRED = "{0}\n" + "found   : {1}\n" + "uiequired: {2}";^70^71^72^73^^70^73^private static final String FOUND_REQUIRED = "{0}\n" + "found   : {1}\n" + "required: {2}";^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType INVALID_CAST = DiagnosticType.warning ( "JSC_INVALID", "invalid cast - must be a subtype or supertype\n" + "from: {0}\n" +^75^76^77^78^^75^79^static final DiagnosticType INVALID_CAST = DiagnosticType.warning ( "JSC_INVALID_CAST", "invalid cast - must be a subtype or supertype\n" + "from: {0}\n" +^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType INVALID_CAST = DiagnosticType.warning ( "JSC_INVALID_CAST", "st - must be a" + "from: {0}\n" +^75^76^77^78^^75^79^static final DiagnosticType INVALID_CAST = DiagnosticType.warning ( "JSC_INVALID_CAST", "invalid cast - must be a subtype or supertype\n" + "from: {0}\n" +^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType INVALID_CAST = DiagnosticType.warning ( "JSC_INVALID_CAST", "invalid cast - must be a subtype or supertype\n" + "m: rom: {0}\n" +^75^76^77^78^^75^79^static final DiagnosticType INVALID_CAST = DiagnosticType.warning ( "JSC_INVALID_CAST", "invalid cast - must be a subtype or supertype\n" + "from: {0}\n" +^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType INVALID_CAST = DiagnosticType.warning ( "JSC_INVALID_CAST", "invalid cast - must be a subtype or supertype\n" + "from: {0}\n" +^75^76^77^78^^75^79^static final DiagnosticType INVALID_CAST = DiagnosticType.warning ( "JSC_INVALID_CAST", "invalid cast - must be a subtype or supertype\n" + "from: {0}\n" +^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType TYPE_MISMATCH_WARNING = DiagnosticType.warning ( "C", "{0}" ) ;^81^82^83^84^^81^84^static final DiagnosticType TYPE_MISMATCH_WARNING = DiagnosticType.warning ( "JSC_TYPE_MISMATCH", "{0}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType TYPE_MISMATCH_WARNING = DiagnosticType.warning ( "JSC_TYPE_MISMATCH", "" ) ;^81^82^83^84^^81^84^static final DiagnosticType TYPE_MISMATCH_WARNING = DiagnosticType.warning ( "JSC_TYPE_MISMATCH", "{0}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^static final DiagnosticType TYPE_MISMATCH_WARNING  = null ;^81^82^83^84^^81^84^static final DiagnosticType TYPE_MISMATCH_WARNING = DiagnosticType.warning ( "JSC_TYPE_MISMATCH", "{0}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType MISSING_EXTENDS_TAG_WARNING = DiagnosticType.warning ( "SSING_EXTE", "Missing @extends tag on type {0}" ) ;^86^87^88^89^^86^89^static final DiagnosticType MISSING_EXTENDS_TAG_WARNING = DiagnosticType.warning ( "JSC_MISSING_EXTENDS_TAG", "Missing @extends tag on type {0}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType MISSING_EXTENDS_TAG_WARNING = DiagnosticType.warning ( "JSC_MISSING_EXTENDS_TAG", "sing @extends tag onissing @extends tag on type {0}" ) ;^86^87^88^89^^86^89^static final DiagnosticType MISSING_EXTENDS_TAG_WARNING = DiagnosticType.warning ( "JSC_MISSING_EXTENDS_TAG", "Missing @extends tag on type {0}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^static final DiagnosticType MISSING_EXTENDS_TAG_WARNING ;^86^87^88^89^^86^89^static final DiagnosticType MISSING_EXTENDS_TAG_WARNING = DiagnosticType.warning ( "JSC_MISSING_EXTENDS_TAG", "Missing @extends tag on type {0}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P2_Replace_Operator]^static final DiagnosticType DUP_VAR_DECLARATION = DiagnosticType.warning ( "JSC_DUP_VAR_DECLARATION", "variable {0} redefined with type {1}, "   instanceof   "original definition at {2}:{3} with type {4}" ) ;^91^92^93^94^^91^94^static final DiagnosticType DUP_VAR_DECLARATION = DiagnosticType.warning ( "JSC_DUP_VAR_DECLARATION", "variable {0} redefined with type {1}, " + "original definition at {2}:{3} with type {4}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType DUP_VAR_DECLARATION = DiagnosticType.warning ( "JSC_DUP_VAR_DECLARATIONJSC_", "variable {0} redefined with type {1}, " + "original definition at {2}:{3} with type {4}" ) ;^91^92^93^94^^91^94^static final DiagnosticType DUP_VAR_DECLARATION = DiagnosticType.warning ( "JSC_DUP_VAR_DECLARATION", "variable {0} redefined with type {1}, " + "original definition at {2}:{3} with type {4}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType DUP_VAR_DECLARATION = DiagnosticType.warning ( "JSC_DUP_VAR_DECLARATION", "0" + "original definition at {2}:{3} with type {4}" ) ;^91^92^93^94^^91^94^static final DiagnosticType DUP_VAR_DECLARATION = DiagnosticType.warning ( "JSC_DUP_VAR_DECLARATION", "variable {0} redefined with type {1}, " + "original definition at {2}:{3} with type {4}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType DUP_VAR_DECLARATION = DiagnosticType.warning ( "JSC_DUP_VAR_DECLARATION", "variable {0} redefined with type {1}, " + "original definition at {2}:{3} with type {4}l definition a" ) ;^91^92^93^94^^91^94^static final DiagnosticType DUP_VAR_DECLARATION = DiagnosticType.warning ( "JSC_DUP_VAR_DECLARATION", "variable {0} redefined with type {1}, " + "original definition at {2}:{3} with type {4}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^static final DiagnosticType DUP_VAR_DECLARATION  = null ;^91^92^93^94^^91^94^static final DiagnosticType DUP_VAR_DECLARATION = DiagnosticType.warning ( "JSC_DUP_VAR_DECLARATION", "variable {0} redefined with type {1}, " + "original definition at {2}:{3} with type {4}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType HIDDEN_PROPERTY_MISMATCH = DiagnosticType.warning ( "_HIDSC_HIDDEN_PROPERTY_MISMATCH", "mismatch of the {0} property type and the type " + "of the property it overrides from superclass {1}\n" +^96^97^98^99^^96^101^static final DiagnosticType HIDDEN_PROPERTY_MISMATCH = DiagnosticType.warning ( "JSC_HIDDEN_PROPERTY_MISMATCH", "mismatch of the {0} property type and the type " + "of the property it overrides from superclass {1}\n" +^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType HIDDEN_PROPERTY_MISMATCH = DiagnosticType.warning ( "JSC_HIDDEN_PROPERTY_MISMATCH", "tch of the {0} propertyismatch of the {0} property type and the type " + "of the property it overrides from superclass {1}\n" +^96^97^98^99^^96^101^static final DiagnosticType HIDDEN_PROPERTY_MISMATCH = DiagnosticType.warning ( "JSC_HIDDEN_PROPERTY_MISMATCH", "mismatch of the {0} property type and the type " + "of the property it overrides from superclass {1}\n" +^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType HIDDEN_PROPERTY_MISMATCH = DiagnosticType.warning ( "JSC_HIDDEN_PROPERTY_MISMATCH", "mismatch of the {0} property type and the type " + " t" +^96^97^98^99^^96^101^static final DiagnosticType HIDDEN_PROPERTY_MISMATCH = DiagnosticType.warning ( "JSC_HIDDEN_PROPERTY_MISMATCH", "mismatch of the {0} property type and the type " + "of the property it overrides from superclass {1}\n" +^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType HIDDEN_PROPERTY_MISMATCH = DiagnosticType.warning ( "JSC_HIDDEN_PROPERTY_MISMATCH", "mismatch of the {0} property type and the type " + "of the property it overrides from superclass {1}\n" +^96^97^98^99^^96^101^static final DiagnosticType HIDDEN_PROPERTY_MISMATCH = DiagnosticType.warning ( "JSC_HIDDEN_PROPERTY_MISMATCH", "mismatch of the {0} property type and the type " + "of the property it overrides from superclass {1}\n" +^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType INTERFACE_METHOD_NOT_IMPLEMENTED = DiagnosticType.warning ( "JSC_INTERFACE_METHOD_NOT_IMPLEMENTEDJSC_INTERFACE_METHOD_NOT_", "property {0} on interface {1} is not implemented by type {2}" ) ;^103^104^105^106^^103^106^static final DiagnosticType INTERFACE_METHOD_NOT_IMPLEMENTED = DiagnosticType.warning ( "JSC_INTERFACE_METHOD_NOT_IMPLEMENTED", "property {0} on interface {1} is not implemented by type {2}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType INTERFACE_METHOD_NOT_IMPLEMENTED = DiagnosticType.warning ( "JSC_INTERFACE_METHOD_NOT_IMPLEMENTED", "ace roperty {0} on interface {1} is not implemented by type {2}" ) ;^103^104^105^106^^103^106^static final DiagnosticType INTERFACE_METHOD_NOT_IMPLEMENTED = DiagnosticType.warning ( "JSC_INTERFACE_METHOD_NOT_IMPLEMENTED", "property {0} on interface {1} is not implemented by type {2}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType INTERFACE_METHOD_NOT_IMPLEMENTED = DiagnosticType.warning ( "JSC_INTERFACE_METHOD_NOT_IMPLEMENTED", "property {0} on interface {1} is not implemented by type {2}" ) ;^103^104^105^106^^103^106^static final DiagnosticType INTERFACE_METHOD_NOT_IMPLEMENTED = DiagnosticType.warning ( "JSC_INTERFACE_METHOD_NOT_IMPLEMENTED", "property {0} on interface {1} is not implemented by type {2}" ) ;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P5_Replace_Variable]^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup (  TYPE_MISMATCH_WARNING, MISSING_EXTENDS_TAG_WARNING,^108^109^110^111^^108^114^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( INVALID_CAST, TYPE_MISMATCH_WARNING, MISSING_EXTENDS_TAG_WARNING,^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P5_Replace_Variable]^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( INVALID_CAST,  MISSING_EXTENDS_TAG_WARNING,^108^109^110^111^^108^114^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( INVALID_CAST, TYPE_MISMATCH_WARNING, MISSING_EXTENDS_TAG_WARNING,^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P5_Replace_Variable]^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( INVALID_CAST, TYPE_MISMATCH_WARNING,^108^109^110^111^^108^114^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( INVALID_CAST, TYPE_MISMATCH_WARNING, MISSING_EXTENDS_TAG_WARNING,^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P5_Replace_Variable]^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( TYPE_MISMATCH_WARNING, INVALID_CAST, MISSING_EXTENDS_TAG_WARNING,^108^109^110^111^^108^114^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( INVALID_CAST, TYPE_MISMATCH_WARNING, MISSING_EXTENDS_TAG_WARNING,^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P5_Replace_Variable]^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( MISSING_EXTENDS_TAG_WARNING, TYPE_MISMATCH_WARNING, INVALID_CAST,^108^109^110^111^^108^114^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( INVALID_CAST, TYPE_MISMATCH_WARNING, MISSING_EXTENDS_TAG_WARNING,^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( INVALID_CAST, TYPE_MISMATCH_WARNING, MISSING_EXTENDS_TAG_WARNING,^108^109^110^111^^108^114^static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup ( INVALID_CAST, TYPE_MISMATCH_WARNING, MISSING_EXTENDS_TAG_WARNING,^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P1_Replace_Type]^private static final  short  serialVersionUID = 1;^680^^^^^675^685^private static final long serialVersionUID = 1;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P3_Replace_Literal]^private static final long serialVersionUID = -4;^680^^^^^675^685^private static final long serialVersionUID = 1;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^private  final long serialVersionUID = 0;^680^^^^^675^685^private static final long serialVersionUID = 1;^[CLASS] TypeValidator TypeMismatch   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^117^^^^^116^121^this.compiler = compiler;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  allValueTypes  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P8_Replace_Mix]^this.typeRegistry =  null.getTypeRegistry (  ) ;^118^^^^^116^121^this.typeRegistry = compiler.getTypeRegistry (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  allValueTypes  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P14_Delete_Statement]^^118^^^^^116^121^this.typeRegistry = compiler.getTypeRegistry (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  allValueTypes  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P7_Replace_Invocation]^this.allValueTypes = typeRegistry.getNativeType ( STRING_TYPE, NUMBER_TYPE, BOOLEAN_TYPE, NULL_TYPE, VOID_TYPE ) ;^119^120^^^^116^121^this.allValueTypes = typeRegistry.createUnionType ( STRING_TYPE, NUMBER_TYPE, BOOLEAN_TYPE, NULL_TYPE, VOID_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  allValueTypes  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P8_Replace_Mix]^this.allValueTypes  =  this.allValueTypes ;^119^120^^^^116^121^this.allValueTypes = typeRegistry.createUnionType ( STRING_TYPE, NUMBER_TYPE, BOOLEAN_TYPE, NULL_TYPE, VOID_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  allValueTypes  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P14_Delete_Statement]^^119^120^^^^116^121^this.allValueTypes = typeRegistry.createUnionType ( STRING_TYPE, NUMBER_TYPE, BOOLEAN_TYPE, NULL_TYPE, VOID_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  allValueTypes  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P5_Replace_Variable]^super ( allValueTypes, b ) ;^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P5_Replace_Variable]^super ( a, allValueTypes ) ;^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P5_Replace_Variable]^super (  b ) ;^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P5_Replace_Variable]^super ( a ) ;^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P5_Replace_Variable]^super ( b, a ) ;^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P14_Delete_Statement]^^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.equals (  )  )  {^145^^^^^144^150^if  ( !type.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !type.matchesNumberContext (  )  )  {^145^^^^^144^150^if  ( !type.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P15_Unwrap_Block]^mismatch(t, n, msg, type, com.google.javascript.rhino.jstype.JSTypeNative.OBJECT_TYPE); return false;^145^146^147^148^^144^150^if  ( !type.matchesObjectContext (  )  )  { mismatch ( t, n, msg, type, OBJECT_TYPE ) ; return false; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P16_Remove_Block]^^145^146^147^148^^144^150^if  ( !type.matchesObjectContext (  )  )  { mismatch ( t, n, msg, type, OBJECT_TYPE ) ; return false; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( type.isVoidType (  )  )  {     mismatch ( t, n, msg, type, expectedType ) ;     return false; }^145^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( jsType == null )  {     return getNativeType ( UNKNOWN_TYPE ) ; }else {     return jsType; }^145^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.matchesNumberContext (  )  )  )  &&  ( ! ( type.matchesStringContext (  )  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_STRING ) ; }^145^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^145^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^145^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^145^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^return true;^147^^^^^144^150^return false;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, FOUND_REQUIRED, type, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, b, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, type, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, type, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  type, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( type, n, msg, t, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, msg, n, type, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg, n, t, type, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, type, msg, n, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectIndexMatch ( t, n, msg, type, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^146^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^146^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^146^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^146^^^^^144^150^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t, msg, type, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, type, msg, OBJECT_TYPE ) ;^146^^^^^144^150^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^return false;^149^^^^^144^150^return true;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectObject [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.equals (  )  )  {^157^^^^^156^160^if  ( !type.isObject (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type .toObjectType (  )   )  {^157^^^^^156^160^if  ( !type.isObject (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !type.matchesObjectContext (  )  )  {^157^^^^^156^160^if  ( !type.isObject (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^if  ( type.isVoidType (  )  )  {^157^^^^^156^160^if  ( !type.isObject (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^if  ( objType.isUnknownType (  )  )  {^157^^^^^156^160^if  ( !type.isObject (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P15_Unwrap_Block]^mismatch(t, n, msg, type, com.google.javascript.rhino.jstype.JSTypeNative.OBJECT_TYPE);^157^158^159^^^156^160^if  ( !type.isObject (  )  )  { mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P16_Remove_Block]^^157^158^159^^^156^160^if  ( !type.isObject (  )  )  { mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( jsType == null )  {     return getNativeType ( UNKNOWN_TYPE ) ; }else {     return jsType; }^157^^^^^156^160^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.matchesNumberContext (  )  )  )  &&  ( ! ( type.matchesStringContext (  )  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_STRING ) ; }^157^^^^^156^160^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^157^^^^^156^160^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^157^^^^^156^160^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^157^^^^^156^160^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, FOUND_REQUIRED, type, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, b, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, type, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, type, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  type, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( type, n, msg, t, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t, msg, type, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, msg, n, type, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, type, msg, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectIndexMatch ( t, n, msg, type, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^158^^^^^156^160^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^158^^^^^156^160^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^158^^^^^156^160^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^158^^^^^156^160^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg, n, t, type, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, type, msg, n, OBJECT_TYPE ) ;^158^^^^^156^160^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectActualObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType type = getJSType ( n ) ;JSType anyObjectType = getNativeType ( NO_OBJECT_TYPE ) ;^167^^^^^166^171^JSType anyObjectType = getNativeType ( NO_OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^167^^^^^166^171^JSType anyObjectType = getNativeType ( NO_OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return getNativeType ( UNKNOWN_TYPE ) ;JSType anyObjectType = getNativeType ( NO_OBJECT_TYPE ) ;^167^^^^^166^171^JSType anyObjectType = getNativeType ( NO_OBJECT_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !anyObjectType.isSubtype ( b )  )  {^168^^^^^166^171^if  ( !anyObjectType.isSubtype ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P15_Unwrap_Block]^mismatch(t, n, msg, type, anyObjectType);^168^169^170^^^166^171^if  ( !anyObjectType.isSubtype ( type )  )  { mismatch ( t, n, msg, type, anyObjectType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P16_Remove_Block]^^168^169^170^^^166^171^if  ( !anyObjectType.isSubtype ( type )  )  { mismatch ( t, n, msg, type, anyObjectType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.matchesNumberContext (  )  )  )  &&  ( ! ( type.isSubtype ( allValueTypes )  )  )  )  {     mismatch ( t, n, msg, type, allValueTypes ) ; }^168^^^^^166^171^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, FOUND_REQUIRED, type, anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, b, anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, type, b ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, type, anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, type, anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  type, anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, type ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( anyObjectType, n, msg, type, t ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, anyObjectType, msg, type, n ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, type, msg, anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, anyObjectType, type ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, anyObjectType, type, msg ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !anyObjectType .isEnumType (  )   )  {^168^^^^^166^171^if  ( !anyObjectType.isSubtype ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, anyObjectType, anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t, msg, type, anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, msg, n, type, anyObjectType ) ;^169^^^^^166^171^mismatch ( t, n, msg, type, anyObjectType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAnyObject [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.equals (  )  )  {^179^^^^^178^182^if  ( !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !type.matchesObjectContext (  )  )  {^179^^^^^178^182^if  ( !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !type.matchesNumberContext (  )  )  {^179^^^^^178^182^if  ( !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P15_Unwrap_Block]^mismatch(t, n, msg, type, com.google.javascript.rhino.jstype.JSTypeNative.STRING_TYPE);^179^180^181^^^178^182^if  ( !type.matchesStringContext (  )  )  { mismatch ( t, n, msg, type, STRING_TYPE ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P16_Remove_Block]^^179^180^181^^^178^182^if  ( !type.matchesStringContext (  )  )  { mismatch ( t, n, msg, type, STRING_TYPE ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.matchesNumberContext (  )  )  )  &&  ( ! ( type.matchesStringContext (  )  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_STRING ) ; }^179^^^^^178^182^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^179^^^^^178^182^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^179^^^^^178^182^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^179^^^^^178^182^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, FOUND_REQUIRED, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, b, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( type, n, msg, t, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, type, msg, n, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg, n, t, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectIndexMatch ( t, n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;mismatch ( t, n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, anyObjectType ) ;mismatch ( t, n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, NUMBER_STRING ) ;mismatch ( t, n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;mismatch ( t, n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, expectedType ) ;mismatch ( t, n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;mismatch ( t, n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, allValueTypes ) ;mismatch ( t, n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, rightType, leftType ) ;mismatch ( t, n, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^180^^^^^178^182^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^180^^^^^178^182^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^180^^^^^178^182^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^180^^^^^178^182^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, anyObjectType, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t, msg, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, type, msg, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectIndexMatch ( t, n, FOUND_REQUIRED, type, STRING_TYPE ) ;^180^^^^^178^182^mismatch ( t, n, msg, type, STRING_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectString [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.equals (  )  )  {^190^^^^^189^193^if  ( !type.matchesNumberContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !type.matchesObjectContext (  )  )  {^190^^^^^189^193^if  ( !type.matchesNumberContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P15_Unwrap_Block]^mismatch(t, n, msg, type, com.google.javascript.rhino.jstype.JSTypeNative.NUMBER_TYPE);^190^191^192^^^189^193^if  ( !type.matchesNumberContext (  )  )  { mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P16_Remove_Block]^^190^191^192^^^189^193^if  ( !type.matchesNumberContext (  )  )  { mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.matchesNumberContext (  )  )  )  &&  ( ! ( type.matchesStringContext (  )  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_STRING ) ; }^190^^^^^189^193^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^190^^^^^189^193^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^190^^^^^189^193^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^190^^^^^189^193^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, FOUND_REQUIRED, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, anyObjectType, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( type, n, msg, t, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, msg, n, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectIndexMatch ( t, n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectIndexMatch ( t, n, FOUND_REQUIRED, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, anyObjectType ) ;mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, NUMBER_STRING ) ;mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, expectedType ) ;mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, STRING_TYPE ) ;mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, allValueTypes ) ;mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, rightType, leftType ) ;mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^191^^^^^189^193^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^191^^^^^189^193^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^191^^^^^189^193^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^191^^^^^189^193^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, b, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg, n, t, type, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, type, msg, n, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, type, msg, NUMBER_TYPE ) ;^191^^^^^189^193^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P2_Replace_Operator]^if  ( !type.matchesNumberContext (  )  || !type.isSubtype ( allValueTypes )  )  {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !type.matchesNumberContext (  )  && !type.isSubb ( allValueTypes )  )  {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( b )  )  {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  ( !type.matchesNumberContext (  )  ) {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  (  !type.isSubtype ( allValueTypes )  )  {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.equals (  )  && !type.isSubtype ( allValueTypes )  )  {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.matchesNumberContext (  )  && !type.equals ( allValueTypes )  )  {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.matchesNumberContext (  )  && !type .isEnumType (  )   )  {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P15_Unwrap_Block]^mismatch(t, n, msg, type, allValueTypes);^201^202^203^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  { mismatch ( t, n, msg, type, allValueTypes ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P16_Remove_Block]^^201^202^203^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  { mismatch ( t, n, msg, type, allValueTypes ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.matchesNumberContext (  )  )  )  &&  ( ! ( type.matchesStringContext (  )  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_STRING ) ; }^201^^^^^200^204^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( anyObjectType.isSubtype ( type )  )  )  {     mismatch ( t, n, msg, type, anyObjectType ) ; }^201^^^^^200^204^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, FOUND_REQUIRED, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, b, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, type, b ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, type ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, allValueTypes, msg, type, n ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg, n, t, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, allValueTypes, type ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectIndexMatch ( t, n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectIndexMatch ( t, n, msg, b, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;mismatch ( t, n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, anyObjectType ) ;mismatch ( t, n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, NUMBER_STRING ) ;mismatch ( t, n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;mismatch ( t, n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, expectedType ) ;mismatch ( t, n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;mismatch ( t, n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, STRING_TYPE ) ;mismatch ( t, n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, rightType, leftType ) ;mismatch ( t, n, msg, type, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type .matchesObjectContext (  )   && !type.isSubtype ( allValueTypes )  )  {^201^^^^^200^204^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, type, type ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( type, n, msg, t, allValueTypes ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectIndexMatch ( t, n, msg, type, b ) ;^202^^^^^200^204^mismatch ( t, n, msg, type, allValueTypes ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectBitwiseable [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P2_Replace_Operator]^if  ( !type.matchesNumberContext (  )  || !type.matchesStringContext (  )  )  {^213^^^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  ( !type.matchesNumberContext (  )  ) {^213^^^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  (  !type.matchesStringContext (  )  )  {^213^^^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.equals (  )  && !type.matchesStringContext (  )  )  {^213^^^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type .matchesObjectContext (  )   && !type.matchesStringContext (  )  )  {^213^^^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.matchesNumberContext (  )  && !type.equals (  )  )  {^213^^^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !type.equals (  )  ) {^213^^^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !type.matchesNumberContext (  )  && !type.isSubtype ( allValueTypes )  )  {^213^^^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P15_Unwrap_Block]^mismatch(t, n, msg, type, com.google.javascript.rhino.jstype.JSTypeNative.NUMBER_STRING);^213^214^215^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  { mismatch ( t, n, msg, type, NUMBER_STRING ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P16_Remove_Block]^^213^214^215^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  { mismatch ( t, n, msg, type, NUMBER_STRING ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.matchesNumberContext (  )  )  )  &&  ( ! ( type.isSubtype ( allValueTypes )  )  )  )  {     mismatch ( t, n, msg, type, allValueTypes ) ; }^213^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^213^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^213^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^213^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^213^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, FOUND_REQUIRED, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg, n, t, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, msg, n, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, type, msg, n, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectIndexMatch ( t, n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, msg, anyObjectType, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;mismatch ( t, n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, anyObjectType ) ;mismatch ( t, n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;mismatch ( t, n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, expectedType ) ;mismatch ( t, n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;mismatch ( t, n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, STRING_TYPE ) ;mismatch ( t, n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, allValueTypes ) ;mismatch ( t, n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, rightType, leftType ) ;mismatch ( t, n, msg, type, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.matchesNumberContext (  )  )  )  &&  ( ! ( type.matchesStringContext (  )  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_STRING ) ; }^214^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^214^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^214^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^214^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^214^^^^^211^216^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type.matchesNumberContext (  )  && !type .matchesObjectContext (  )   )  {^213^^^^^211^216^if  ( !type.matchesNumberContext (  )  && !type.matchesStringContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, b, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( type, n, msg, t, NUMBER_STRING ) ;^214^^^^^211^216^mismatch ( t, n, msg, type, NUMBER_STRING ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectStringOrNumber [RETURN_TYPE] void   NodeTraversal t Node n JSType type String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( b.isVoidType (  )  )  {^227^^^^^225^232^if  ( type.isVoidType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( t.isVoidType (  )  )  {^227^^^^^225^232^if  ( type.isVoidType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( type.equals (  )  )  {^227^^^^^225^232^if  ( type.isVoidType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^if  ( expectedType.isVoidType (  )  )  {^227^^^^^225^232^if  ( type.isVoidType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P15_Unwrap_Block]^mismatch(t, n, msg, type, expectedType); return false;^227^228^229^230^^225^232^if  ( type.isVoidType (  )  )  { mismatch ( t, n, msg, type, expectedType ) ; return false; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P16_Remove_Block]^^227^228^229^230^^225^232^if  ( type.isVoidType (  )  )  { mismatch ( t, n, msg, type, expectedType ) ; return false; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^227^^^^^225^232^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^return true;^229^^^^^225^232^return false;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, FOUND_REQUIRED, type, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, expectedType, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, type, b ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, type, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, type, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  type, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, type ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg, n, t, type, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, type, msg, n, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, expectedType, type ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, expectedType, type, msg ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, msg, type, type ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^228^229^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ; return false;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, b, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( type, n, msg, t, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t, msg, type, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, type, msg, expectedType ) ;^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^228^^^^^225^232^mismatch ( t, n, msg, type, expectedType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^return false;^231^^^^^225^232^return true;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectNotVoid [RETURN_TYPE] boolean   NodeTraversal t Node n JSType type String msg JSType expectedType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  expectedType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P2_Replace_Operator]^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  || ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P2_Replace_Operator]^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null && !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P2_Replace_Operator]^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  != null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( type )  )  )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !switchType.canTestForShallowEqualityWith ( type )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !switchType.canTestForShallowEqualityWith ( switchType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( caseType )  )  )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null ) {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  (  !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (caseType.autoboxesTo() == null || isSubtype(switchType))) )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  ( caseType.autoboxesTo (  )  == null )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.equals (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType .isObject (  )   == null || !caseType^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n.getFirstChild (  ) , "case express", caseType, switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", type, switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, type ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch",  switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( caseType, n.getFirstChild (  ) , "case expression doesn't match switch", t, switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, switchType.getFirstChild (  ) , "case expression doesn't match switch", caseType, n ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", switchType, caseType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^mismatch ( t, n.setJSType (  ) , "case expression doesn't match switch", caseType, switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n.setJSType (  ) , "case expression doesn't match switch", switchType, switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !switchType.canTestForShallowEqualityWith ( expectedType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^244^245^246^^^238^251^if  ( !switchType.canTestForShallowEqualityWith ( caseType )  && ( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^( caseType.equals (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^245^246^^^^238^251^( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^( caseType .isObject (  )   == null || !caseType^245^246^^^^238^251^( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^( switchType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^245^246^^^^238^251^( caseType.autoboxesTo (  )  == null || !caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^!caseType.autoboxesTo (  ) .isSubtype ( type )  )  )  {^246^^^^^238^251^!caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^!caseType.autoboxesTo (  )  .isEnumType (  )   )  )  {^246^^^^^238^251^!caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^!caseType.equals (  ) .isSubtype ( switchType )  )  )  {^246^^^^^238^251^!caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^!caseType.equals (  ) .isSubtype ( expectedType )  )  )  {^246^^^^^238^251^!caseType.autoboxesTo (  ) .isSubtype ( switchType )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch doesn't matc", caseType, switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, caseType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^247^248^249^^^238^251^mismatch ( t, n.getFirstChild (  ) , "case expression doesn't match switch", caseType, switchType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSwitchMatchesCase [RETURN_TYPE] void   NodeTraversal t Node n JSType switchType JSType caseType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( switchType.isUnknownType (  )  )  {^265^^^^^263^279^if  ( objType.isUnknownType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objType.toObjectType (  )  != null )  {^265^^^^^263^279^if  ( objType.isUnknownType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objType.toObjectType (  ) .getIndexType (  )  != null )  {^265^^^^^263^279^if  ( objType.isUnknownType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( objType.isSubtype (  )  )  {^265^^^^^263^279^if  ( objType.isUnknownType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^if  ( type.isSubtype (  )  )  {^265^^^^^263^279^if  ( objType.isUnknownType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P2_Replace_Operator]^} else if  ( objType.toObjectType (  )  != null || objType.toObjectType (  ) .getIndexType (  )  != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P2_Replace_Operator]^} else if  ( objType.toObjectType (  )  == null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P2_Replace_Operator]^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  == null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( switchType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( n.toObjectType (  )  != objTypeull && objType.toObjectType (  ) .getIndexType (  )  != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^} else if  ( objType.toObjectType (  )  != null ) {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^} else if  (  objType.toObjectType (  ) .getIndexType (  )  != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^} else {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType.equals (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .contains (  )  != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  )  .getType (  )   != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType .isObject (  )   != null && objType^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^} else if  ( objType.toObjectType (  )  != false ) {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( expectedType.isArrayType (  )  )  {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^} else {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType.equals (  )  )  {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType .isSubtype ( expectedType )   )  {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( switchType.matchesObjectContext (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P6_Replace_Expression]^} else {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType.equals (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType .matchesStringContext (  )   )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P9_Replace_Statement]^} else if  ( objType.isArrayType (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P15_Unwrap_Block]^expectString(t, n, indexType, "property access");^273^274^275^276^277^263^279^} else if  ( objType.matchesObjectContext (  )  )  { expectString ( t, n, indexType, "property access" ) ; } else { mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P16_Remove_Block]^^273^274^275^276^277^263^279^} else if  ( objType.matchesObjectContext (  )  )  { expectString ( t, n, indexType, "property access" ) ; } else { mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P13_Insert_Block]^if  ( objType.isArrayType (  )  )  {     expectNumber ( t, n, indexType, "array access" ) ; }else     if  ( objType.matchesObjectContext (  )  )  {         expectString ( t, n, indexType, "property access" ) ;     }else {         mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;     }^273^^^^^263^279^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "only arrays or objects can be accnly arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "only arrays or objects can be accessed", indexType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "only arrays or objects can be accessed",  typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "only arrays or objects can be accessed", objType.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, typeRegistry, "only arrays or objects can be accessed", objType, n.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "only arrays or objects can be accessed", typeRegistry, objType.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectIndexMatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.getNativeType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, "only arrays or objects can be accessed", type, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P11_Insert_Donor_Statement]^objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^objType, typeRegistry.getNativeType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^277^^^^^263^279^objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^277^^^^^263^279^objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "property accessp" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectString (  n, indexType, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectString ( t,  indexType, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectString ( t, n,  "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectString ( indexType, n, t, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectString ( n, t, indexType, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectString ( t, indexType, n, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectObject ( t, n, indexType, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectObject ( t, n, objType, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( indexType.matchesObjectContext (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "acceroperty access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectString ( t, n, type, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "jects ", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( objType, n, "only arrays or objects can be accessed", t, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, "only arrays or objects can be accessed", expectedType, typeRegistry.getNativeType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectNumber ( t, n, indexType, "arra" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectNumber ( t, n, switchType, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectNumber (  n, indexType, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectNumber ( t,  indexType, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectNumber ( t, n,  "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectNumber ( n, t, indexType, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectNumber ( indexType, n, t, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectAnyObject ( t, n, indexType, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectNumber ( t, n, expectedType, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( type.matchesObjectContext (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^} else if  ( switchType.equals (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "nnly arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "only arrays or objects can be accessed", switchType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( typeRegistry, n, "only arrays or objects can be accessed", objType, t.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "property accessc" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectNumber ( t, n, indexType, "array acc" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectNumber ( t, n, objType, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "prope" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectString ( t, n, objType, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "only arrays or objects can be accessedonly a", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, objType, "only arrays or objects can be accessed", n, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, "only arrays or objects can be accessed", expectedType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "st" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, n, type, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, n, indexType, expectedType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo (  n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t,  indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, n,  objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, n, indexType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( n, t, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( indexType, n, t, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, objType, indexType, n.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectNotVoid ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .contains (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  )  .getType (  )  , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectCanAssignTo ( t, n, indexType, objType.equals (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectCanAssignTo ( t, n, objType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectCanAssignTo ( t, n, indexType, objType .isObject (  )  .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectCanAssignTo ( t, n, indexType, expectedType.toObjectType (  ) .contains (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, n, indexType, switchType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType .isSubtype ( caseType )   )  {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^} else if  ( indexType.equals (  )  )  {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( expectedType.matchesObjectContext (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^}  if  ( type.matchesObjectContext (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "jects cannly arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^objType, typeRegistry .getNativeType ( null )   ) ;^277^^^^^263^279^objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "property accesst" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectObject ( t, n, type, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "pert" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectString ( t, n, expectedType, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "only arrays or objects can be accessed be acc", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectNumber ( t, n, indexType, "arrrray access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectNumber ( t, indexType, n, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "only arrays or objects can bnly arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "property accroperty access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectObject ( t, n, switchType, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( type.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^} else if  ( switchType.equals (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^267^268^^^^263^279^} else if  ( objType.toObjectType (  )  != null && objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^objType.toObjectType (  ) .contains (  )  != null )  {^268^^^^^263^279^objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^objType.equals (  ) .getIndexType (  )  != null )  {^268^^^^^263^279^objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^268^269^270^^^263^279^objType.toObjectType (  ) .getIndexType (  )  != null )  { expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^objType .isObject (  )  .getIndexType (  )  != null )  {^268^^^^^263^279^objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "sestricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, n, indexType, type.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( objType, n, indexType, t.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, indexType, n, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, n, objType, indexType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectCanAssignTo ( t, n, indexType, expectedType .isObject (  )  .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( switchType.isArrayType (  )  )  {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectNumber ( t, n, indexType, "ay acrray access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectAnyObject ( t, n, objType, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "property " ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, " arrays or objecnly arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectStringOrNumber ( t, n, indexType, "r" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectStringOrNumber (  n, indexType, "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectStringOrNumber ( t,  indexType, "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectStringOrNumber ( t, n,  "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectStringOrNumber ( indexType, n, t, "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectStringOrNumber ( n, t, indexType, "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectStringOrNumber ( t, indexType, n, "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^expectString ( t, n, indexType, "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectStringOrNumber ( t, n, objType, "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P14_Delete_Statement]^^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( type.isArrayType (  )  )  {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^}  if  ( expectedType.matchesObjectContext (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "only arrays or obj", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "r" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "property accessrope" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "nly", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectIndexMatch ( t, n, "only arrays or objects can be accessed", type, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectNumber ( t, n, indexType, "rr" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectNumber ( t, n, type, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "only arrays or objects can be accesseds c", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "y a" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectObject ( t, n, expectedType, "property access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectNumber ( t, n, indexType, "array accessrra" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectAnyObject ( t, n, type, "array access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "p" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "only arrays or objects can be accessedo", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectIndexMatch ( t, n, "only arrays or objects can be accessed", indexType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "r" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectCanAssignTo ( t, n, expectedType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectNotVoid ( t, n, indexType, type.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( objType .isSubtype ( switchType )   )  {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^}  if  ( switchType.isArrayType (  )  )  {^271^^^^^263^279^} else if  ( objType.isArrayType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^} else if  ( type.equals (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "ays or objects can be anly arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "property accessy a" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "r objects can be accessenly arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectIndexMatch ( t, n, "only arrays or objects can be accessed", switchType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^}  if  ( type.equals (  )  )  {^273^^^^^263^279^} else if  ( objType.matchesObjectContext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "property accesserty acces" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^if  ( type.isUnknownType (  )  )  {^265^^^^^263^279^if  ( objType.isUnknownType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( objType .isNoType (  )   )  {^265^^^^^263^279^if  ( objType.isUnknownType (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectStringOrNumber ( t, n, indexType, "property accessro" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P5_Replace_Variable]^expectStringOrNumber ( t, n, expectedType, "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectStringOrNumber ( t, n, type, "property access" ) ;^266^^^^^263^279^expectStringOrNumber ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P7_Replace_Invocation]^objType.toObjectType (  )  .getType (  )   != null )  {^268^^^^^263^279^objType.toObjectType (  ) .getIndexType (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index typee" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P8_Replace_Mix]^expectCanAssignTo ( t, n, indexType, type.equals (  ) .getIndexType (  ) , "restricted index type" ) ;^269^270^^^^263^279^expectCanAssignTo ( t, n, indexType, objType.toObjectType (  ) .getIndexType (  ) , "restricted index type" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectNumber ( t, n, indexType, "array accesrray access" ) ;^272^^^^^263^279^expectNumber ( t, n, indexType, "array access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^expectString ( t, n, indexType, "proproperty access" ) ;^274^^^^^263^279^expectString ( t, n, indexType, "property access" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "s can be nly arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^276^277^^^^263^279^mismatch ( t, n, "only arrays or objects can be accessed", objType, typeRegistry.createUnionType ( ARRAY_TYPE, OBJECT_TYPE )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectIndexMatch [RETURN_TYPE] void   NodeTraversal t Node n JSType objType JSType indexType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  objType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  long  serialVersionUID  
[P2_Replace_Operator]^if  ( !leftType.isNoType (  )  || !rightType.canAssignTo ( leftType )  )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( objType )  )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( !leftType.isNoType (  )  ) {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P6_Replace_Expression]^if  (  !rightType.canAssignTo ( leftType )  )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P6_Replace_Expression]^if  (  ( "assignment to property " + propName )  + " of " + getReadableJSTypeName ( owner, true ) )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( "assignment to property " + propName + " of " )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( "assignment to property " + propName )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !leftType.equals (  )  && !rightType.canAssignTo ( leftType )  )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !leftType .isVoidType (  )   && !rightType.canAssignTo ( leftType )  )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( indexType )  )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P13_Insert_Block]^if  ( bothIntrinsics ( rightType, leftType )  )  {     registerMismatch ( rightType, leftType ) ; }else {     mismatch ( t, n,  (  (  ( "assignment to property " + propName )  + " of " )  +  ( getReadableJSTypeName ( owner, true )  )  ) , rightType, leftType ) ; }^296^^^^^293^310^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( rightType.canAssignTo ( leftType )  )  )  {     if  ( bothIntrinsics ( rightType, leftType )  )  {         registerMismatch ( rightType, leftType ) ;     }else {         mismatch ( t, n, msg, rightType, leftType ) ;     }     return false; }^296^^^^^293^310^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( type, leftType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( rightType, indexType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics (  leftType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( rightType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( leftType, rightType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( "assignment to property " + propName + " of " )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( "assignment to property " + propName )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( registerMismatch ( rightType, leftType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( bothIntrinsics ( leftType, leftType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P13_Insert_Block]^if  ( bothIntrinsics ( rightType, leftType )  )  {     registerMismatch ( rightType, leftType ) ; }else {     mismatch ( t, n, msg, rightType, leftType ) ; }^297^^^^^293^310^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( leftType.isNoType (  )  )  )  &&  ( ! ( rightType.canAssignTo ( leftType )  )  )  )  {     if  ( bothIntrinsics ( rightType, leftType )  )  {         registerMismatch ( rightType, leftType ) ;     }else {         mismatch ( t, n,  (  (  ( "assignment to property " + propName )  + " of " )  +  ( getReadableJSTypeName ( owner, true )  )  ) , rightType, leftType ) ;     }     return false; }^297^^^^^293^310^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P2_Replace_Operator]^mismatch ( t, n, "assignment to property "  ==  propName  ==  " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P2_Replace_Operator]^mismatch ( t, n, "assignment to property "  ==  propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "assignme" + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "assignment to property " + propName + " oof " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, false ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + msg + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( n, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , leftType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, type ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName (  true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) ,  leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( rightType, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , t, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, owner, "assignment to property " + propName + " of " + getReadableJSTypeName ( n, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, propName, "assignment to property " + n + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( rightType, true ) , owner, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, rightType, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , n, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , leftType, rightType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^mismatch ( t, n, "assignment to property " + propName + " of " + bothIntrinsics ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, "assignment to property " + propName + " of " + bothIntrinsics ( owner, true ) , rightType, objType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^getReadableJSTypeName ( owner, false ) , rightType, leftType ) ;^304^305^^^^293^310^getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^getReadableJSTypeName ( n, true ) , rightType, leftType ) ;^304^305^^^^293^310^getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^bothIntrinsics ( owner, true ) , rightType, leftType ) ;^304^305^^^^293^310^getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P14_Delete_Statement]^^304^305^^^^293^310^getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^304^305^^^^293^310^getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( rightType, leftType ) ;getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^304^305^^^^293^310^getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, rightType, leftType ) ;getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^304^305^^^^293^310^getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( indexType, leftType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( rightType, indexType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch (  leftType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( rightType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( leftType, rightType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( rightType, leftType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^registerMismatch ( objType, leftType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P14_Delete_Statement]^^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P12_Insert_Condition]^if  ( bothIntrinsics ( rightType, leftType )  )  { registerMismatch ( rightType, leftType ) ; }^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^return true;^307^^^^^293^310^return false;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( bothIntrinsics ( rightType, switchType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( type, leftType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( rightType, type ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P2_Replace_Operator]^mismatch ( t, n, "assignment to property "  |  propName  |  " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P2_Replace_Operator]^mismatch ( t, n, "assignment to property "  <  propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "ssignment tssignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "assignment to property " + propName + " of" + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, objType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, indexType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( objType, leftType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P2_Replace_Operator]^mismatch ( t, n, "assignment to property "  <=  propName  <=  " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P2_Replace_Operator]^mismatch ( t, n, "assignment to property "  &  propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "nmenssignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , objType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, "assignment to property " + msg + " of " + bothIntrinsics ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^registerMismatch ( switchType, leftType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !leftType.equals (  )  && !rightType.canAssignTo ( indexType )  )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !leftType.isNoType (  )  && !rightType .matchesStringContext (  )   )  {^296^^^^^293^310^if  ( !leftType.isNoType (  )  && !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( rightType, objType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( registerMismatch ( switchType, leftType )  )  {^297^^^^^293^310^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^registerIfMismatch ( rightType, switchType ) ;^300^^^^^293^310^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P2_Replace_Operator]^mismatch ( t, n, "assignment to property "  >  propName  >  " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "assignment to property ignment t" + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^mismatch ( t, n, "assignment to property " + propName + "fof " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, owner, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , indexType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( leftType, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, t ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + rightType + " of " + getReadableJSTypeName ( owner, true ) , propName, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, "assignment to property " + leftType + " of " + getReadableJSTypeName ( owner, true ) , rightType, propName ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, "assignment to property " + propName + " of " + bothIntrinsics ( n, true ) , rightType, leftType ) ;^302^303^304^305^^293^310^mismatch ( t, n, "assignment to property " + propName + " of " + getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^return false;^309^^^^^293^310^return true;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignToPropertyOf [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType Node owner String propName [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  owner  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !rightType.canAssignTo ( indexType )  )  {^325^^^^^323^336^if  ( !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !rightType .matchesStringContext (  )   )  {^325^^^^^323^336^if  ( !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !overridingType.canAssignTo ( hiddenType )  )  {^325^^^^^323^336^if  ( !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !argType.canAssignTo ( paramType )  )  {^325^^^^^323^336^if  ( !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( indexType, leftType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( rightType, objType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics (  leftType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( rightType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( registerMismatch ( rightType, leftType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P13_Insert_Block]^if  ( bothIntrinsics ( rightType, leftType )  )  {     registerMismatch ( rightType, leftType ) ; }else {     mismatch ( t, n,  (  (  ( "assignment to property " + propName )  + " of " )  +  ( getReadableJSTypeName ( owner, true )  )  ) , rightType, leftType ) ; }^326^^^^^323^336^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( rightType.canAssignTo ( leftType )  )  )  {     if  ( bothIntrinsics ( rightType, leftType )  )  {         registerMismatch ( rightType, leftType ) ;     }else {         mismatch ( t, n, msg, rightType, leftType ) ;     }     return false; }^326^^^^^323^336^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, propName, rightType, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, rightType, indexType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, rightType, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, rightType, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  rightType, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, rightType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( n, t, msg, rightType, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, msg, n, rightType, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, rightType, msg, n, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( leftType, n, msg, rightType, t ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, msg, rightType, type ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P14_Delete_Statement]^^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P12_Insert_Condition]^if  ( bothIntrinsics ( rightType, leftType )  )  { mismatch ( t, n, msg, rightType, leftType ) ; }^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( indexType, leftType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( rightType, switchType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch (  leftType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( rightType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( leftType, rightType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( rightType, leftType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^registerIfMismatch ( rightType, indexType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P14_Delete_Statement]^^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P12_Insert_Condition]^if  ( bothIntrinsics ( rightType, leftType )  )  { registerMismatch ( rightType, leftType ) ; }^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^return true;^333^^^^^323^336^return false;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( objType, leftType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( rightType, switchType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( bothIntrinsics ( leftType, rightType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( bothIntrinsics ( type, leftType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( type, leftType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( rightType, indexType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^registerIfMismatch ( type, leftType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, switchType, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, rightType, rightType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, leftType, msg, rightType, n ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, leftType, rightType, msg ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, rightType, msg, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, leftType, rightType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( registerMismatch ( type, leftType )  )  {^326^^^^^323^336^if  ( bothIntrinsics ( rightType, leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, indexType, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg, n, t, rightType, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, msg, type, leftType ) ;^331^^^^^323^336^mismatch ( t, n, msg, rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( rightType, type ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !rightType.canAssignTo ( objType )  )  {^325^^^^^323^336^if  ( !rightType.canAssignTo ( leftType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( objType, leftType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( rightType, objType ) ;^329^^^^^323^336^registerMismatch ( rightType, leftType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P3_Replace_Literal]^return false;^335^^^^^323^336^return true;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanAssignTo [RETURN_TYPE] boolean   NodeTraversal t Node n JSType rightType JSType leftType String msg [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P2_Replace_Operator]^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  || ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P2_Replace_Operator]^return  ( leftType.isConstructor (  )  && leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^return  ( switchType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( objType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^return  ( rightType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( leftType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^return  ( leftType.equals (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^return  ( leftType .isObject (  )   || leftType.isEnumType (  )  )  && ( rightType^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^return  ( leftType.isConstructor (  )  || leftType.equals (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^return  ( leftType.isConstructor (  )  || leftType .isSubtype ( type )   )  && ( rightType.isConstructor (  )  || rightType^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^return  ( leftType.isConstructor (  )  || leftType .isSubtype ( anyObjectType )   )  && ( rightType.isConstructor (  )  || rightType^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^return  ( switchType.isConstructor (  )  || leftType.equals (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^return  ( rightType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^return  ( indexType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P14_Delete_Statement]^^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^return  ( objType.isConstructor (  )  || leftType.equals (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^339^340^^^^338^341^return  ( leftType.isConstructor (  )  || leftType.isEnumType (  )  )  && ( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^( type.isConstructor (  )  || rightType.isEnumType (  )  ) ;^340^^^^^338^341^( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^( rightType.equals (  )  || rightType.isEnumType (  )  ) ;^340^^^^^338^341^( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^( rightType .isObject (  )   || rightType.isEnumType (  )  ) ;^340^^^^^338^341^( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^( indexType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^340^^^^^338^341^( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P14_Delete_Statement]^^340^^^^^338^341^( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^( leftType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^340^^^^^338^341^( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P7_Replace_Invocation]^( rightType.isConstructor (  )  || rightType.equals (  )  ) ;^340^^^^^338^341^( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P8_Replace_Mix]^( leftType.isConstructor (  )  || rightType.equals (  )  ) ;^340^^^^^338^341^( rightType.isConstructor (  )  || rightType.isEnumType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] bothIntrinsics [RETURN_TYPE] boolean   JSType rightType JSType leftType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  b  caseType  expectedType  indexType  leftType  objType  rightType  switchType  type  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !argType.canAssignTo ( switchType )  )  {^356^^^^^354^363^if  ( !argType.canAssignTo ( paramType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P7_Replace_Invocation]^if  ( !argType .matchesStringContext (  )   )  {^356^^^^^354^363^if  ( !argType.canAssignTo ( paramType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P8_Replace_Mix]^if  ( !argType.canAssignTo ( leftType )  )  {^356^^^^^354^363^if  ( !argType.canAssignTo ( paramType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P9_Replace_Statement]^if  ( !rightType.canAssignTo ( leftType )  )  {^356^^^^^354^363^if  ( !argType.canAssignTo ( paramType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P9_Replace_Statement]^if  ( !overridingType.canAssignTo ( hiddenType )  )  {^356^^^^^354^363^if  ( !argType.canAssignTo ( paramType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P2_Replace_Operator]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  >=  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^mismatch ( t, n, String.format ( "f %s does not" + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "f", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , true )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( n.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^mismatch (  n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^mismatch ( t,  String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter",  getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^mismatch ( ordinal, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", t, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^mismatch ( t, callNode, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( n.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", callNode, getReadableJSTypeName ( ordinal.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^mismatch ( callNode, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( t.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P7_Replace_Invocation]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, bothIntrinsics ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P7_Replace_Invocation]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.setJSType (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P13_Insert_Block]^if  ( ! ( argType.canAssignTo ( paramType )  )  )  {     mismatch ( t, n, format (  ( "actual parameter %d of %s does not match " + "formal parameter" ) , ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ; }^357^^^^^354^363^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P2_Replace_Operator]^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  >=  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^String.format ( "actual parameter %d of %s does not match parameter %d of %s does not mat" + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^String.format ( "actual parameter %d of %s does not match " + "fo", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , true )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( n.getFirstChild (  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^String.format ( "actual parameter %d of %s does not match " + "formal parameter",  getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^String.format ( "actual parameter %d of %s does not match " + "formal parameter", callNode, getReadableJSTypeName ( ordinal.getFirstChild (  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P7_Replace_Invocation]^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, bothIntrinsics ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P7_Replace_Invocation]^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.setJSType (  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P8_Replace_Mix]^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( n .getLastChild (  )  , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P14_Delete_Statement]^^358^359^360^361^362^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^getReadableJSTypeName ( callNode.getFirstChild (  ) , true )  ) , argType, paramType ) ;^360^361^^^^354^363^getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^getReadableJSTypeName ( n.getFirstChild (  ) , false )  ) , argType, paramType ) ;^360^361^^^^354^363^getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P7_Replace_Invocation]^bothIntrinsics ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^360^361^^^^354^363^getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P7_Replace_Invocation]^getReadableJSTypeName ( callNode.setJSType (  ) , false )  ) , argType, paramType ) ;^360^361^^^^354^363^getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P8_Replace_Mix]^getReadableJSTypeName ( n .getLastChild (  )  , false )  ) , argType, paramType ) ;^360^361^^^^354^363^getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P14_Delete_Statement]^^360^361^^^^354^363^getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P11_Insert_Donor_Statement]^getReadableJSTypeName ( owner, true ) , rightType, leftType ) ;getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^360^361^^^^354^363^getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P7_Replace_Invocation]^getReadableJSTypeName ( callNode .getLastChild (  )  , false )  ) , argType, paramType ) ;^360^361^^^^354^363^getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P8_Replace_Mix]^if  ( !argType.canAssignTo ( type )  )  {^356^^^^^354^363^if  ( !argType.canAssignTo ( paramType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P2_Replace_Operator]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  <<  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match of" + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "malormal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^mismatch ( t, callNode, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^357^358^359^360^^354^363^mismatch ( t, n, String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P2_Replace_Operator]^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  <  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^String.format ( "actual parameter %d of %s does not match  %s does not" + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P3_Replace_Literal]^String.format ( "actual parameter %d of %s does not match " + "rmal ormal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P7_Replace_Invocation]^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode .getLastChild (  )  , false )  ) , argType, paramType ) ;^358^359^360^361^^354^363^String.format ( "actual parameter %d of %s does not match " + "formal parameter", ordinal, getReadableJSTypeName ( callNode.getFirstChild (  ) , false )  ) , argType, paramType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectArgumentMatchesParameter [RETURN_TYPE] void   NodeTraversal t Node n JSType argType JSType paramType Node callNode int ordinal [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  indexType  leftType  objType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  callNode  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  long  serialVersionUID  int  ordinal  
[P5_Replace_Variable]^if  ( !overridingType.canAssignTo ( leftType )  )  {^380^^^^^378^387^if  ( !overridingType.canAssignTo ( hiddenType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !overridingType .matchesStringContext (  )   )  {^380^^^^^378^387^if  ( !overridingType.canAssignTo ( hiddenType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !overridingType.canAssignTo ( rightType )  )  {^380^^^^^378^387^if  ( !overridingType.canAssignTo ( hiddenType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !rightType.canAssignTo ( leftType )  )  {^380^^^^^378^387^if  ( !overridingType.canAssignTo ( hiddenType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( !argType.canAssignTo ( paramType )  )  {^380^^^^^378^387^if  ( !overridingType.canAssignTo ( hiddenType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( allowDupe ||  (  ( var.getParentNode (  ) .getType (  )  )  ==  ( EXPR_RESULT )  )  )  )  ||  ( ! ( newType.equals ( varType )  )  )  )  {     compiler.report ( make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , valueOf ( getLineno (  )  ) , varType.toString (  )  )  ) ; }^380^^^^^378^387^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.canAssignTo ( castType )  )  )  &&  ( ! ( castType.canAssignTo ( type )  )  )  )  {     compiler.report ( make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;     registerMismatch ( type, castType ) ; }^380^^^^^378^387^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( objType, hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( overridingType, type ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch (  hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( overridingType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( hiddenType, overridingType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( overridingType, hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^registerMismatch ( type, hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( superObject, declaredSuper ) ;registerMismatch ( overridingType, hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( rightType, leftType ) ;registerMismatch ( overridingType, hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( instance, implemented ) ;registerMismatch ( overridingType, hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( found, required ) ;registerMismatch ( overridingType, hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( type, castType ) ;registerMismatch ( overridingType, hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, indexType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , paramType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , objType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make (  n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t,  HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH,  ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) .toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) .toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n,  propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( hiddenType, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , t.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, ownerType, HIDDEN_PROPERTY_MISMATCH, propertyName, n.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( propertyName, n, HIDDEN_PROPERTY_MISMATCH, t, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, hiddenType.toString (  ) , ownerType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , overridingType.toString (  ) , hiddenType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, overridingType.toString (  ) , hiddenType.toString (  ) , ownerType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, hiddenType, propertyName, ownerType.toString (  ) , HIDDEN_PROPERTY_MISMATCH.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.equals (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^compiler.report ( JSError.make ( t, n, TYPE_MISMATCH_WARNING, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, leftType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , leftType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , leftType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, TYPE_MISMATCH_WARNING, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make (  n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t,  HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH,  ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) .toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) .toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n,  propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( hiddenType, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , t.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, propertyName, HIDDEN_PROPERTY_MISMATCH, n, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, overridingType, ownerType.toString (  ) , hiddenType.toString (  ) , propertyName.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, overridingType.toString (  ) , hiddenType.toString (  ) , ownerType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , overridingType.toString (  ) , hiddenType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, propertyName, HIDDEN_PROPERTY_MISMATCH, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.equals (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType .matchesStringContext (  )  , hiddenType^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, objType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^propertyName, leftType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^384^385^^^^378^387^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^propertyName, ownerType.equals (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^384^385^^^^378^387^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^propertyName, ownerType .matchesStringContext (  )  , hiddenType^384^385^^^^378^387^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^propertyName, indexType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^384^385^^^^378^387^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^384^385^^^^378^387^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^384^385^^^^378^387^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^384^385^^^^378^387^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^384^385^^^^378^387^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^hiddenType.equals (  ) , overridingType.toString (  )  )  ) ;^385^^^^^378^387^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^hiddenType .matchesStringContext (  )  , overridingType^385^^^^^378^387^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^385^^^^^378^387^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType.toString (  ) , type.toString (  )  )  ) ;hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^385^^^^^378^387^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^385^^^^^378^387^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^385^^^^^378^387^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !overridingType.canAssignTo ( type )  )  {^380^^^^^378^387^if  ( !overridingType.canAssignTo ( hiddenType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( leftType, hiddenType ) ;^381^^^^^378^387^registerMismatch ( overridingType, hiddenType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, overridingType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , overridingType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ownerType, n, HIDDEN_PROPERTY_MISMATCH, propertyName, t.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^compiler .getTypeRegistry (  )  , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType .matchesStringContext (  )  , hiddenType^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , leftType.toString (  ) , overridingType.toString (  )  )  ) ;^382^383^384^385^^378^387^compiler.report ( JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, rightType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , ownerType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , paramType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( propertyName, n, HIDDEN_PROPERTY_MISMATCH, t, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, overridingType, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , n.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, ownerType, propertyName.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, hiddenType.toString (  ) , ownerType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, hiddenType, propertyName, ownerType.toString (  ) , HIDDEN_PROPERTY_MISMATCH.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^JSError .make ( t , n , HIDDEN_PROPERTY_MISMATCH , msg )  , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.equals (  ) , leftType.toString (  ) , overridingType.toString (  )  )  ) ;^383^384^385^^^378^387^JSError.make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^hiddenType.toString (  ) , indexType.toString (  )  )  ) ;^385^^^^^378^387^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanOverride [RETURN_TYPE] void   NodeTraversal t Node n JSType overridingType JSType hiddenType String propertyName JSType ownerType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^FunctionType subCtor = superObject.getConstructor (  ) ;^399^^^^^397^419^FunctionType subCtor = subObject.getConstructor (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^FunctionType subCtor = subObject.hasProperty (  ) ;^399^^^^^397^419^FunctionType subCtor = subObject.getConstructor (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^FunctionType subCtor = subObject .toString (  )  ;^399^^^^^397^419^FunctionType subCtor = subObject.getConstructor (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P14_Delete_Statement]^^399^^^^^397^419^FunctionType subCtor = subObject.getConstructor (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^ObjectType declaredSuper = superObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^400^401^^^^397^419^ObjectType declaredSuper = subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^ObjectType declaredSuper = subObject.setJSType (  ) .getImplicitPrototype (  ) ;^400^401^^^^397^419^ObjectType declaredSuper = subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^ObjectType declaredSuper = subObject .isFunctionPrototypeType (  )^400^401^^^^397^419^ObjectType declaredSuper = subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^ObjectType declaredSuper = subObject.hasProperty (  ) .getImplicitPrototype (  ) ;^400^401^^^^397^419^ObjectType declaredSuper = subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^subObject.setJSType (  ) .getImplicitPrototype (  ) ;^401^^^^^397^419^subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^subObject .isFunctionPrototypeType (  )^401^^^^^397^419^subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^subObject.hasProperty (  ) .getImplicitPrototype (  ) ;^401^^^^^397^419^subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P14_Delete_Statement]^^401^^^^^397^419^subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P11_Insert_Donor_Statement]^objectType = objectType.getImplicitPrototype (  ) ;subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^401^^^^^397^419^subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^if  ( !declaredSuper.equals ( declaredSuper )  )  {^402^^^^^397^419^if  ( !declaredSuper.equals ( superObject )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^if  ( !declaredSuper.hasProperty ( superObject )  )  {^402^^^^^397^419^if  ( !declaredSuper.equals ( superObject )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P8_Replace_Mix]^if  ( !declaredSuper.equals ( subObject )  )  {^402^^^^^397^419^if  ( !declaredSuper.equals ( superObject )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P9_Replace_Statement]^if  ( declaredSuper.equals ( getNativeType ( OBJECT_TYPE )  )  )  {^402^^^^^397^419^if  ( !declaredSuper.equals ( superObject )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P13_Insert_Block]^if  ( declaredSuper.equals ( getNativeType ( OBJECT_TYPE )  )  )  {     compiler.report ( make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;     registerMismatch ( superObject, declaredSuper ) ; }else {     mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ; }^402^^^^^397^419^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^if  ( superObject.equals ( getNativeType ( OBJECT_TYPE )  )  )  {^403^^^^^397^419^if  ( declaredSuper.equals ( getNativeType ( OBJECT_TYPE )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^if  ( declaredSuper.hasProperty ( getNativeType ( OBJECT_TYPE )  )  )  {^403^^^^^397^419^if  ( declaredSuper.equals ( getNativeType ( OBJECT_TYPE )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P9_Replace_Statement]^if  ( !declaredSuper.equals ( superObject )  )  {^403^^^^^397^419^if  ( declaredSuper.equals ( getNativeType ( OBJECT_TYPE )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P13_Insert_Block]^if  ( ! ( declaredSuper.equals ( superObject )  )  )  {     if  ( declaredSuper.equals ( getNativeType ( OBJECT_TYPE )  )  )  {         compiler.report ( make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;         registerMismatch ( superObject, declaredSuper ) ;     }else {         mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;     }     if  ( ! ( subCtor.hasCachedValues (  )  )  )  {         subCtor.setPrototypeBasedOn ( superObject ) ;     } }^403^^^^^397^419^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P3_Replace_Literal]^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass typedeclaration of superclas", superObject, declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", subObject, declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, subObject ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObjec declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) ,  "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type",  declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( n.getSourceName (  ) , t, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", declaredSuper, superObject ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P14_Delete_Statement]^^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, superObject.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, TYPE_MISMATCH_WARNING, subObject.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make (  n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t,  MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n,  subObject.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( n, t, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, subObject, MISSING_EXTENDS_TAG_WARNING, n.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, MISSING_EXTENDS_TAG_WARNING, n, subObject.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^compiler.report ( JSError .make ( t , n , INTERFACE_METHOD_NOT_IMPLEMENTED , msg )   ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.hasProperty (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject .matchesStringContext (  )   )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P8_Replace_Mix]^compiler.report ( JSError .make ( t , n , MISSING_EXTENDS_TAG_WARNING , msg )   ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P14_Delete_Statement]^^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, superObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make (  n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( t,  MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( t, n,  subObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( n, t, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( t, subObject, MISSING_EXTENDS_TAG_WARNING, n.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( t, n, subObject, MISSING_EXTENDS_TAG_WARNING.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( t, MISSING_EXTENDS_TAG_WARNING, n, subObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.hasProperty (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject .matchesStringContext (  )   )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P14_Delete_Statement]^^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P11_Insert_Donor_Statement]^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^subObject.hasProperty (  )  )  ) ;^406^^^^^397^419^subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P14_Delete_Statement]^^406^407^^^^397^419^subObject.toString (  )  )  ) ; registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P11_Insert_Donor_Statement]^return objectType.toString (  )  + "." + propName;subObject.toString (  )  )  ) ;^406^^^^^397^419^subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P11_Insert_Donor_Statement]^varType.toString (  )  )  ) ;subObject.toString (  )  )  ) ;^406^^^^^397^419^subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^registerMismatch ( subObject, declaredSuper ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^registerMismatch ( superObject, subObject ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^registerMismatch (  declaredSuper ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^registerMismatch ( superObject ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^registerMismatch ( declaredSuper, superObject ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^registerIfMismatch ( superObject, declaredSuper ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P14_Delete_Statement]^^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P11_Insert_Donor_Statement]^registerMismatch ( rightType, leftType ) ;registerMismatch ( superObject, declaredSuper ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P11_Insert_Donor_Statement]^registerMismatch ( instance, implemented ) ;registerMismatch ( superObject, declaredSuper ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P11_Insert_Donor_Statement]^registerMismatch ( overridingType, hiddenType ) ;registerMismatch ( superObject, declaredSuper ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P11_Insert_Donor_Statement]^registerMismatch ( found, required ) ;registerMismatch ( superObject, declaredSuper ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P11_Insert_Donor_Statement]^registerMismatch ( type, castType ) ;registerMismatch ( superObject, declaredSuper ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^if  ( !subCtor.setPrototypeBasedOn (  )  )  {^415^^^^^397^419^if  ( !subCtor.hasCachedValues (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P15_Unwrap_Block]^subCtor.setPrototypeBasedOn(superObject);^415^416^417^^^397^419^if  ( !subCtor.hasCachedValues (  )  )  { subCtor.setPrototypeBasedOn ( superObject ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P16_Remove_Block]^^415^416^417^^^397^419^if  ( !subCtor.hasCachedValues (  )  )  { subCtor.setPrototypeBasedOn ( superObject ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^subCtor.setPrototypeBasedOn ( subObject ) ;^416^^^^^397^419^subCtor.setPrototypeBasedOn ( superObject ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P14_Delete_Statement]^^416^^^^^397^419^subCtor.setPrototypeBasedOn ( superObject ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^if  ( declaredSuper .getConstructor (  )   )  {^403^^^^^397^419^if  ( declaredSuper.equals ( getNativeType ( OBJECT_TYPE )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P13_Insert_Block]^if  ( jsType == null )  {     return getNativeType ( UNKNOWN_TYPE ) ; }else {     return jsType; }^403^^^^^397^419^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^403^^^^^397^419^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^403^^^^^397^419^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^403^^^^^397^419^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( subObject, n, MISSING_EXTENDS_TAG_WARNING, t.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, subObject, MISSING_EXTENDS_TAG_WARNING.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^compiler .getTypeRegistry (  )   ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( t, n, TYPE_MISMATCH_WARNING, subObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^subObject .matchesStringContext (  )   )  ) ;^406^^^^^397^419^subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P8_Replace_Mix]^registerIfMismatch ( subObject, declaredSuper ) ;^407^^^^^397^419^registerMismatch ( superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P3_Replace_Literal]^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass typemismatch ", superObject, declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, superObject ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , declaredSuper, "mismatch in declaration of superclass type", superObject, n ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , superObject, "mismatch in declaration of superclass type", n, declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P8_Replace_Mix]^if  ( subObject.hasProperty ( getNativeType ( OBJECT_TYPE )  )  )  {^403^^^^^397^419^if  ( declaredSuper.equals ( getNativeType ( OBJECT_TYPE )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P3_Replace_Literal]^mismatch ( t.getSourceName (  ) , n, "smatch in declarati", superObject, declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^mismatch ( superObject.getSourceName (  ) , n, "mismatch in declaration of superclass type", t, declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P8_Replace_Mix]^compiler.report ( JSError.make ( t, n, INVALID_CAST, subObject.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( t, n, INVALID_CAST, subObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( MISSING_EXTENDS_TAG_WARNING, n, t, subObject.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^JSError.make ( subObject, n, MISSING_EXTENDS_TAG_WARNING, t.toString (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^compiler.report ( JSError.make ( MISSING_EXTENDS_TAG_WARNING, n, t, subObject.toString (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P8_Replace_Mix]^compiler.report ( JSError.make ( t, n, INVALID_CAST, subObject.hasProperty (  )  )  ) ;^404^405^406^^^397^419^compiler.report ( JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P8_Replace_Mix]^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, superObject.hasProperty (  )  )  ) ;^405^406^^^^397^419^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P3_Replace_Literal]^mismatch ( t.getSourceName (  ) , n, "tch in declaraismatch in declaration of superclass type", superObject, declaredSuper ) ;^409^410^411^^^397^419^mismatch ( t.getSourceName (  ) , n, "mismatch in declaration of superclass type", superObject, declaredSuper ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P7_Replace_Invocation]^if  ( !subCtor .getAllImplementedInterfaces (  )   )  {^415^^^^^397^419^if  ( !subCtor.hasCachedValues (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectSuperType [RETURN_TYPE] void   NodeTraversal t Node n ObjectType superObject ObjectType subObject [VARIABLES] JSType  a  allValueTypes  anyObjectType  argType  b  caseType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  FunctionType  subCtor  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  ObjectType  declaredSuper  subObject  superObject  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  List  mismatches  
[P5_Replace_Variable]^castType = leftType.restrictByNotNullOrUndefined (  ) ;^431^^^^^430^440^castType = castType.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^castType = castType.isSubtype (  ) ;^431^^^^^430^440^castType = castType.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^castType =  overridingType.restrictByNotNullOrUndefined (  ) ;^431^^^^^430^440^castType = castType.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^found = found.restrictByNotNullOrUndefined (  ) ;castType = castType.restrictByNotNullOrUndefined (  ) ;^431^^^^^430^440^castType = castType.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^type = type.restrictByNotNullOrUndefined (  ) ;castType = castType.restrictByNotNullOrUndefined (  ) ;^431^^^^^430^440^castType = castType.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^required = required.restrictByNotNullOrUndefined (  ) ;castType = castType.restrictByNotNullOrUndefined (  ) ;^431^^^^^430^440^castType = castType.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^castType = ownerType.restrictByNotNullOrUndefined (  ) ;^431^^^^^430^440^castType = castType.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^castType = castType .isConstructor (  )  ;^431^^^^^430^440^castType = castType.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^431^432^^^^430^440^castType = castType.restrictByNotNullOrUndefined (  ) ; type = type.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^type = indexType.restrictByNotNullOrUndefined (  ) ;^432^^^^^430^440^type = type.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^type = type.isSubtype (  ) ;^432^^^^^430^440^type = type.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^type =  switchType.restrictByNotNullOrUndefined (  ) ;^432^^^^^430^440^type = type.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^found = found.restrictByNotNullOrUndefined (  ) ;type = type.restrictByNotNullOrUndefined (  ) ;^432^^^^^430^440^type = type.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType = castType.restrictByNotNullOrUndefined (  ) ;type = type.restrictByNotNullOrUndefined (  ) ;^432^^^^^430^440^type = type.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^required = required.restrictByNotNullOrUndefined (  ) ;type = type.restrictByNotNullOrUndefined (  ) ;^432^^^^^430^440^type = type.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^432^^^^^430^440^type = type.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( !type.canAssignTo ( castType )  || !castType.canAssignTo ( type )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( leftType )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !type.canAssignTo ( rightType )  && !castType.canAssignTo ( type )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !type.canAssignTo ( type )  && !castType.canAssignTo ( castType )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( !type.canAssignTo ( castType )  ) {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P6_Replace_Expression]^if  (  !castType.canAssignTo ( type )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P15_Unwrap_Block]^compiler.report(com.google.javascript.jscomp.JSError.make(t, n, com.google.javascript.jscomp.TypeValidator.INVALID_CAST, castType.toString(), type.toString())); registerMismatch(type, castType);^434^435^436^437^438^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  { compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ; registerMismatch ( type, castType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P16_Remove_Block]^^434^435^436^437^438^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  { compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ; registerMismatch ( type, castType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( overridingType.canAssignTo ( hiddenType )  )  )  {     registerMismatch ( overridingType, hiddenType ) ;     compiler.report ( make ( t, n, HIDDEN_PROPERTY_MISMATCH, propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ; }^434^^^^^430^440^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, INVALID_CAST, objType.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , leftType.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, TYPE_MISMATCH_WARNING, castType.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make (  n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t,  INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, INVALID_CAST.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) .toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n,  castType.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( INVALID_CAST, n, t, castType.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, castType, INVALID_CAST, n.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( castType, n, INVALID_CAST, t.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, INVALID_CAST, type.toString (  ) , castType.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.equals (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType .matchesStringContext (  )  , type^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^compiler.report ( JSError.make ( t, n, INVALID_CAST, leftType.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( ! ( type.canAssignTo ( castType )  )  )  &&  ( ! ( castType.canAssignTo ( type )  )  )  )  {     compiler.report ( make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;     registerMismatch ( type, castType ) ; }^435^^^^^430^440^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, INVALID_CAST, paramType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , switchType.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, TYPE_MISMATCH_WARNING, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make (  n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t,  INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, INVALID_CAST.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) .toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n,  castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( type, n, INVALID_CAST, castType.toString (  ) , t.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( n, t, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, INVALID_CAST, type.toString (  ) , castType.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, INVALID_CAST, n, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^JSError .make ( t , n , INTERFACE_METHOD_NOT_IMPLEMENTED )   )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( t, n, INVALID_CAST, castType.equals (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType.toString (  ) , type.toString (  )  )  ) ;JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSError.make ( t, n, MISSING_EXTENDS_TAG_WARNING, subObject.toString (  )  )  ) ;JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^castType.equals (  ) , type.toString (  )  )  ) ;^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;castType.toString (  ) , type.toString (  )  )  ) ;^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;castType.toString (  ) , type.toString (  )  )  ) ;^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;castType.toString (  ) , type.toString (  )  )  ) ;^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;castType.toString (  ) , type.toString (  )  )  ) ;^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^varType.toString (  )  )  ) ;castType.toString (  ) , type.toString (  )  )  ) ;^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^castType.toString (  ) , leftType.toString (  )  )  ) ;^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^castType .matchesStringContext (  )  , type^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^castType.toString (  ) , indexType.toString (  )  )  ) ;^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( leftType, castType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( type, leftType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch (  castType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( type ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( castType, type ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( type, castType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( superObject, declaredSuper ) ;registerMismatch ( type, castType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( rightType, leftType ) ;registerMismatch ( type, castType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( instance, implemented ) ;registerMismatch ( type, castType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( overridingType, hiddenType ) ;registerMismatch ( type, castType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( found, required ) ;registerMismatch ( type, castType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( switchType )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !type.canAssignTo ( paramType )  && !castType.canAssignTo ( type )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !type.canAssignTo ( switchType )  && !castType.canAssignTo ( type )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !type.canAssignTo ( objType )  && !castType.canAssignTo ( type )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( ownerType )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !type .matchesStringContext (  )   && !castType^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( objType )  )  {^434^^^^^430^440^if  ( !type.canAssignTo ( castType )  && !castType.canAssignTo ( type )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , objType.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( n, t, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, type, INVALID_CAST, castType.toString (  ) , n.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, INVALID_CAST, n, castType.toString (  ) , type.toString (  )  )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^compiler .getTypeRegistry (  )   )  ) ;^435^436^437^^^430^440^compiler.report ( JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , leftType.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( castType, n, INVALID_CAST, t.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( INVALID_CAST, n, t, castType.toString (  ) , type.toString (  )  )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^JSError .make ( t , n , INVALID_CAST )   )  ) ;^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( t, n, INVALID_CAST, castType .matchesStringContext (  )  , type^436^437^^^^430^440^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P14_Delete_Statement]^^437^438^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ; registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^castType.toString (  ) , objType.toString (  )  )  ) ;^437^^^^^430^440^castType.toString (  ) , type.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P8_Replace_Mix]^registerMismatch ( type, objType ) ;^438^^^^^430^440^registerMismatch ( type, castType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectCanCast [RETURN_TYPE] void   NodeTraversal t Node n JSType type JSType castType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  objType  overridingType  ownerType  paramType  rightType  switchType  type  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  long  serialVersionUID  
[P3_Replace_Literal]^boolean allowDupe = true;^455^^^^^440^470^boolean allowDupe = false;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( n.getType (  )  <= Token.GETPROP )  {^456^^^^^441^471^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( info == null )  {^456^^^^^441^471^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( info != null && contains("duplicate") )  {^456^^^^^441^471^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( info != null )  {^456^^^^^441^471^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( n.setJSType (  )  == Token.GETPROP )  {^456^^^^^441^471^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( n .getJSType (  )   == Token.GETPROP )  {^456^^^^^441^471^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( parent.getType (  )  == Token.GETPROP )  {^456^^^^^441^471^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P9_Replace_Statement]^if  ( parent.getType (  )  == Token.VAR )  {^456^^^^^441^471^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P15_Unwrap_Block]^com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo(); if (info == null) {    info = parent.getJSDocInfo();}; allowDupe = (info != null) && (info.getSuppressions().contains("duplicate"));^456^457^458^459^460^441^471^if  ( n.getType (  )  == Token.GETPROP )  { JSDocInfo info = n.getJSDocInfo (  ) ; if  ( info == null )  { info = parent.getJSDocInfo (  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P16_Remove_Block]^^456^457^458^459^460^441^471^if  ( n.getType (  )  == Token.GETPROP )  { JSDocInfo info = n.getJSDocInfo (  ) ; if  ( info == null )  { info = parent.getJSDocInfo (  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( info != null )  {^458^^^^^443^473^if  ( info == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( info == this )  {^458^^^^^443^473^if  ( info == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P9_Replace_Statement]^if  ( jsType == null )  {^458^^^^^443^473^if  ( info == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P9_Replace_Statement]^if  ( var.input == null )  {^458^^^^^443^473^if  ( info == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P15_Unwrap_Block]^info = parent.getJSDocInfo();^458^459^460^^^443^473^if  ( info == null )  { info = parent.getJSDocInfo (  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P16_Remove_Block]^^458^459^460^^^443^473^if  ( info == null )  { info = parent.getJSDocInfo (  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^info = n.getJSDocInfo (  ) ;^459^^^^^444^474^info = parent.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^info = parent.setJSType (  ) ;^459^^^^^444^474^info = parent.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P13_Insert_Block]^if  ( info == null )  {     info = parent.getJSDocInfo (  ) ; }^459^^^^^444^474^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^info = parent .getJSType (  )  ;^459^^^^^444^474^info = parent.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^459^^^^^444^474^info = parent.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSDocInfo info = n.getJSDocInfo (  ) ;info = parent.getJSDocInfo (  ) ;^459^^^^^444^474^info = parent.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^allowDupe = info != null || info.getSuppressions (  ) .contains ( "duplicate" ) ;^461^462^^^^446^476^allowDupe = info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^allowDupe = info == null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^461^462^^^^446^476^allowDupe = info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P3_Replace_Literal]^allowDupe = info != null && info.getSuppressions (  ) .contains ( "du" ) ;^461^462^^^^446^476^allowDupe = info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^allowDupe = info != null && info.getSuppressions (  )  .getString (  )  ;^461^462^^^^446^476^allowDupe = info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^allowDupe = info != this && info.getSuppressions (  ) .contains ( "duplicate" ) ;^461^462^^^^446^476^allowDupe = info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSDocInfo info = n.setJSType (  ) ;^457^^^^^442^472^JSDocInfo info = n.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSDocInfo info = n .getJSType (  )  ;^457^^^^^442^472^JSDocInfo info = n.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^JSDocInfo info = parent.getJSDocInfo (  ) ;^457^^^^^442^472^JSDocInfo info = n.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^457^^^^^442^472^JSDocInfo info = n.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^info = parent.getJSDocInfo (  ) ;JSDocInfo info = n.getJSDocInfo (  ) ;^457^^^^^442^472^JSDocInfo info = n.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^info = n.setJSType (  ) ;^459^^^^^444^474^info = parent.getJSDocInfo (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P3_Replace_Literal]^info != null && info.getSuppressions (  ) .contains ( "uplica" ) ;^462^^^^^447^477^info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^462^^^^^447^477^info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P3_Replace_Literal]^allowDupe = info != null && info.getSuppressions (  ) .contains ( "duplicatei" ) ;^461^462^^^^446^476^allowDupe = info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^allowDupe = info != false && info.getSuppressions (  ) .contains ( "duplicate" ) ;^461^462^^^^446^476^allowDupe = info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P3_Replace_Literal]^info != null && info.getSuppressions (  ) .contains ( "dupl" ) ;^462^^^^^447^477^info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^info != null && info.getSuppressions (  )  .getString (  )  ;^462^^^^^447^477^info != null && info.getSuppressions (  ) .contains ( "duplicate" ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSType varType = var .getJSType (  )  ;^465^^^^^450^480^JSType varType = var.getType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^ObjectType instance = type.getInstanceType (  ) ;JSType varType = var.getType (  ) ;^465^^^^^450^480^JSType varType = var.getType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType jsType = n.getJSType (  ) ;JSType varType = var.getType (  ) ;^465^^^^^450^480^JSType varType = var.getType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType type = getJSType ( n ) ;JSType varType = var.getType (  ) ;^465^^^^^450^480^JSType varType = var.getType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^465^^^^^450^480^JSType varType = var.getType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^n.setJSType ( varType ) ;JSType varType = var.getType (  ) ;^465^^^^^450^480^JSType varType = var.getType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( varType != null || varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( varType == null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( varType != null && varType == typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType == null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType == typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( varType != null ) {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  (  varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( ((varType != null) && (varType != UNKNOWN_TYPE)) && newType != null) )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (varType != null && varType != UNKNOWN_TYPE)) )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( varType != typeRegistry.getNativeType ( UNKNOWN_TYPE ) )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( newType != null )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( newType != typeRegistry.getNativeType ( UNKNOWN_TYPE ) )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( var.input == null )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( parent.getType() == VAR )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( n.getFirstChild() != null )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FUNCTION )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( !(allowDupe || getType() == EXPR_RESULT)) || !(newType.equals(varType)) )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (allowDupe || getType() == EXPR_RESULT) )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( var.getParentNode (  ) .getType (  )  == EXPR_RESULT )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( varType != null && varType != typeRegistry.createUnionType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( varType != true ) {^470^471^472^473^^455^485^if  ( varType != null && varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( var.input != null )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( parent.getType() == VAR )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( n.getFirstChild() != null )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FUNCTION )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( !(allowDupe || getType() == EXPR_RESULT)) || !(newType.equals(varType)) )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (allowDupe || getType() == EXPR_RESULT) )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( var.getParentNode (  ) .getType (  )  == EXPR_RESULT )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( var.input == false )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P9_Replace_Statement]^if  ( jsType == null )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P9_Replace_Statement]^if  ( info == null )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P15_Unwrap_Block]^n.setJSType(varType); if ((parent.getType()) == (com.google.javascript.rhino.Token.VAR)) {    if ((n.getFirstChild()) != null) {        n.getFirstChild().setJSType(varType);    }}else {    com.google.common.base.Preconditions.checkState(((parent.getType()) == (com.google.javascript.rhino.Token.FUNCTION)));    parent.setJSType(varType);};^479^480^481^482^483^464^494^if  ( var.input == null )  { n.setJSType ( varType ) ; if  ( parent.getType (  )  == Token.VAR )  { if  ( n.getFirstChild (  )  != null )  { n.getFirstChild (  ) .setJSType ( varType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P16_Remove_Block]^^479^480^481^482^483^464^494^if  ( var.input == null )  { n.setJSType ( varType ) ; if  ( parent.getType (  )  == Token.VAR )  { if  ( n.getFirstChild (  )  != null )  { n.getFirstChild (  ) .setJSType ( varType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( ! ( allowDupe && var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^479^504^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  != Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^479^504^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( ! ( allowDupe ) {^495^496^497^^^479^504^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  (  var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^479^504^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (allowDupe || getType() == EXPR_RESULT) )  {^495^496^497^^^479^504^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( var.getParentNode (  ) .getType (  )  == EXPR_RESULT )  {^495^496^497^^^479^504^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( ! ( allowDupe || var.getParentNode (  ) .isSubtype (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^479^504^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( ! ( allowDupe || var .getInputName (  )  .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^479^504^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make (  n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName,  DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION,  newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATIONiableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n,  variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType .matchesStringContext (  )  , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var .getParentNode (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make (  n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName,  DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION,  newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATIONiableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) .toString (  )  )  ) ;^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n,  variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType .matchesStringContext (  )  , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var .getParentNode (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^479^504^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^variableName, objType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^479^504^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^variableName, newType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^479^504^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^500^501^502^^^479^504^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^variableName, newType.toString (  ) , var .getParentNode (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^479^504^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P1_Replace_Type]^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.tochar (  )  )  ) ;^501^502^^^^479^504^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^String.valueOf ( var.nameNode.getLineno (  )  ) Type.toString (  )  )  ) ;^501^502^^^^479^504^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^501^502^^^^479^504^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType.toString (  ) , type.toString (  )  )  ) ;String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^501^502^^^^479^504^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^501^502^^^^479^504^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^varType.equals (  )  )  ) ;^502^^^^^479^504^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^502^^^^^479^504^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^subObject.toString (  )  )  ) ;varType.toString (  )  )  ) ;^502^^^^^479^504^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return type.toString (  ) ;varType.toString (  )  )  ) ;^502^^^^^479^504^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType.toString (  ) , type.toString (  )  )  ) ;varType.toString (  )  )  ) ;^502^^^^^479^504^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^var.getParentNode (  ) .isSubtype (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^496^497^^^^479^504^var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^var.getParentNode (  )  .getJSType (  )   == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^496^497^^^^479^504^var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^var .getInputName (  )  .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^496^497^^^^479^504^var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^!newType.equals ( switchType )  )  {^497^^^^^479^504^!newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^!newType.equals ( objType )  )  {^497^^^^^479^504^!newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError .make ( 1 , n , HIDDEN_PROPERTY_MISMATCH , sourceName )  , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^variableName, leftType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^479^504^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^variableName, varType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^479^504^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( parent.getType (  )  != Token.VAR )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( n.getFirstChild() != null )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FUNCTION )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( parent.setJSType (  )  == Token.VAR )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( n.setJSType (  )  == Token.VAR )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.GETPROP )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P15_Unwrap_Block]^if ((n.getFirstChild()) != null) {    n.getFirstChild().setJSType(varType);};^481^482^483^484^^466^496^if  ( parent.getType (  )  == Token.VAR )  { if  ( n.getFirstChild (  )  != null )  { n.getFirstChild (  ) .setJSType ( varType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P16_Remove_Block]^^481^482^483^484^^466^496^if  ( parent.getType (  )  == Token.VAR )  { if  ( n.getFirstChild (  )  != null )  { n.getFirstChild (  ) .setJSType ( varType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^Preconditions.checkState ( parent.getType (  )  >= Token.FUNCTION ) ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions.checkNotNull ( parent.getType (  )  == Token.FUNCTION ) ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions .checkNotNull ( parent )  ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions.checkState ( parent.setJSType (  )  == Token.FUNCTION ) ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^Preconditions .checkNotNull ( n )  ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P12_Insert_Condition]^if  ( parent.getType (  )  == Token.VAR )  { Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ; }^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions.checkState ( parent .getJSType (  )   == Token.FUNCTION ) ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^Preconditions.checkState ( n .getJSType (  )   == Token.FUNCTION ) ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^486^487^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ; parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^parent.setJSType ( overridingType ) ;^487^^^^^481^488^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^parent .getJSType (  )  ;^487^^^^^481^488^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^487^^^^^481^488^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^n.setJSType ( varType ) ;parent.setJSType ( varType ) ;^487^^^^^481^488^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^n.getFirstChild (  ) .setJSType ( varType ) ;parent.setJSType ( varType ) ;^487^^^^^481^488^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( n.getFirstChild (  )  == null )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^if  ( parent.getFirstChild (  )  != null )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( n.setJSType (  )  != null )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( n .getLastChild (  )   != null )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( n.setJSType (  )  != this )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P15_Unwrap_Block]^n.getFirstChild().setJSType(varType);^482^483^484^^^467^497^if  ( n.getFirstChild (  )  != null )  { n.getFirstChild (  ) .setJSType ( varType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P16_Remove_Block]^^482^483^484^^^467^497^if  ( n.getFirstChild (  )  != null )  { n.getFirstChild (  ) .setJSType ( varType ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^n.getFirstChild (  ) .setJSType ( newType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^n.setJSType (  ) .setJSType ( varType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^n.getFirstChild (  ) .setJSType ( objType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^n.getFirstChild (  ) .setJSType ( ownerType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^n.getFirstChild (  ) .setJSType ( leftType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( n.getFirstChild (  )  != this )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^n.getFirstChild (  )  .getJSType (  )  ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^n .getLastChild (  )  .setJSType ( varType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^n.setJSType ( newType ) ;^480^^^^^465^495^n.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^n .getJSType (  )  ;^480^^^^^465^495^n.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^480^^^^^465^495^n.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^n.getFirstChild (  ) .setJSType ( varType ) ;n.setJSType ( varType ) ;^480^^^^^465^495^n.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType varType = var.getType (  ) ;n.setJSType ( varType ) ;^480^^^^^465^495^n.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^parent.setJSType ( varType ) ;n.setJSType ( varType ) ;^480^^^^^465^495^n.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.VAR )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( parent.setJSType (  )  != null )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^n.setJSType (  ) .setJSType ( leftType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^Preconditions.checkState ( parent.getType (  )  != Token.FUNCTION ) ;^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions.checkNotNull ( parent.getType (  )  == Token.FUNCTION ) ;^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions.checkState ( parent.setJSType (  )  == Token.FUNCTION ) ;^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions.checkState ( parent .getJSType (  )   == Token.FUNCTION ) ;^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P12_Insert_Condition]^if  ( parent.getType (  )  == Token.VAR )  { Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ; }^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^Preconditions.checkState ( n.setJSType (  )  == Token.FUNCTION ) ;^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^parent.setJSType ( newType ) ;^487^^^^^472^502^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^parent .getJSType (  )  ;^487^^^^^472^502^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^487^^^^^472^502^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^n.setJSType ( varType ) ;parent.setJSType ( varType ) ;^487^^^^^472^502^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^n.getFirstChild (  ) .setJSType ( varType ) ;parent.setJSType ( varType ) ;^487^^^^^472^502^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( parent.getType (  )  > Token.VAR )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( parent.getType (  )  <= Token.VAR )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( parent .getJSType (  )   == Token.VAR )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^Preconditions.checkState ( parent.getType (  )  != Token.FUNCTION ) ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^Preconditions.checkState ( n.setJSType (  )  == Token.FUNCTION ) ;^486^^^^^481^488^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^parent.setJSType ( ownerType ) ;^487^^^^^481^488^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( n .getLastChild (  )   != this )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( parent.getFirstChild (  )  != this )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^n.getFirstChild (  ) .setJSType ( overridingType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( ! ( allowDupe && var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^480^510^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  >= Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^480^510^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( ! ( allowDupe ) {^495^496^497^^^480^510^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  (  var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^480^510^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (allowDupe || getType() == EXPR_RESULT) )  {^495^496^497^^^480^510^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P6_Replace_Expression]^if  ( var.getParentNode (  ) .getType (  )  == EXPR_RESULT )  {^495^496^497^^^480^510^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( ! ( allowDupe || var.getParentNode (  ) .isSubtype (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^480^510^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make (  n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName,  DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION,  newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATIONiableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n,  variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler .getTypeRegistry (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var .getParentNode (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType .matchesStringContext (  )  , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^495^503^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make (  n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName,  DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION,  newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATIONiableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) .toString (  )  )  ) ;^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n,  variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^variableName, varType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^495^503^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^variableName, newType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^495^503^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^variableName, newType .matchesStringContext (  )  , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType^500^501^502^^^495^503^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^variableName, leftType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^495^503^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^500^501^502^^^495^503^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^variableName, newType.toString (  ) , var .getParentNode (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^495^503^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P1_Replace_Type]^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.tochar (  )  )  ) ;^501^502^^^^495^503^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^String.valueOf ( var.nameNode.getLineno (  )  ) Type.toString (  )  )  ) ;^501^502^^^^495^503^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^501^502^^^^495^503^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType.toString (  ) , type.toString (  )  )  ) ;String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^501^502^^^^495^503^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^501^502^^^^495^503^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^varType.equals (  )  )  ) ;^502^^^^^495^503^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^varType .matchesStringContext (  )   )  ) ;^502^^^^^495^503^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^502^^^^^495^503^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^subObject.toString (  )  )  ) ;varType.toString (  )  )  ) ;^502^^^^^495^503^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return type.toString (  ) ;varType.toString (  )  )  ) ;^502^^^^^495^503^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType.toString (  ) , type.toString (  )  )  ) ;varType.toString (  )  )  ) ;^502^^^^^495^503^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^n.setJSType ( objType ) ;^480^^^^^465^495^n.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^n.setJSType ( leftType ) ;^480^^^^^465^495^n.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^Preconditions.checkState ( parent.getType (  )  <= Token.FUNCTION ) ;^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions .checkNotNull ( n )  ;^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^486^487^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ; parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^parent.setJSType ( rightType ) ;^487^^^^^472^502^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^parent.setJSType ( leftType ) ;^487^^^^^472^502^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^var.getParentNode (  ) .isSubtype (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^496^497^^^^481^511^var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^var.getParentNode (  )  .getJSType (  )   == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^496^497^^^^481^511^var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^var .getInputName (  )  .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^496^497^^^^481^511^var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^!newType.equals ( ownerType )  )  {^497^^^^^482^512^!newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^!newType.equals ( paramType )  )  {^497^^^^^482^512^!newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make (  n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName,  DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION,  newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATIONiableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n,  variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType .matchesStringContext (  )  , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^compiler .getTypeRegistry (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make (  n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName,  DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION,  newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATIONiableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) .toString (  )  )  ) ;^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n,  variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType .matchesStringContext (  )  , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var .getParentNode (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^484^514^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^variableName, leftType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^485^515^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^variableName, newType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^485^515^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^variableName, newType .matchesStringContext (  )  , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType^500^501^502^^^485^515^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^variableName, overridingType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^485^515^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^500^501^502^^^485^515^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^variableName, newType.toString (  ) , var .getParentNode (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^485^515^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P1_Replace_Type]^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.tochar (  )  )  ) ;^501^502^^^^486^516^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^String.valueOf ( var.nameNode.getLineno (  )  ) Type.toString (  )  )  ) ;^501^502^^^^486^516^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^501^502^^^^486^516^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType.toString (  ) , type.toString (  )  )  ) ;String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^501^502^^^^486^516^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^501^502^^^^486^516^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^varType.equals (  )  )  ) ;^502^^^^^487^517^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^varType .matchesStringContext (  )   )  ) ;^502^^^^^487^517^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P14_Delete_Statement]^^502^^^^^487^517^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^subObject.toString (  )  )  ) ;varType.toString (  )  )  ) ;^502^^^^^487^517^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return type.toString (  ) ;varType.toString (  )  )  ) ;^502^^^^^487^517^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType.toString (  ) , type.toString (  )  )  ) ;varType.toString (  )  )  ) ;^502^^^^^487^517^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( var.input == this )  {^479^^^^^464^494^if  ( var.input == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( ! ( allowDupe || var.getParentNode (  )  .getJSType (  )   == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^479^504^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^varType .matchesStringContext (  )   )  ) ;^502^^^^^479^504^varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler .getTypeRegistry (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^479^504^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^variableName, overridingType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^479^504^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^parent.setJSType ( objType ) ;^487^^^^^481^488^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^n.getFirstChild (  ) .setJSType ( switchType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^n.setJSType (  ) .setJSType ( newType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( n.getFirstChild (  )  != false )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^n.setJSType ( type ) ;^480^^^^^465^495^n.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions .checkNotNull ( parent )  ;^486^^^^^471^501^Preconditions.checkState ( parent.getType (  )  == Token.FUNCTION ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( parent.getType (  )  >= Token.VAR )  {^481^^^^^466^496^if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^parent.setJSType ( leftType ) ;^487^^^^^481^488^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( n.setJSType (  )  != false )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^n .getLastChild (  )  .setJSType ( leftType ) ;^483^^^^^468^498^n.getFirstChild (  ) .setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^if  ( n .getLastChild (  )   != true )  {^482^^^^^467^497^if  ( n.getFirstChild (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P2_Replace_Operator]^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  != Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^495^496^497^^^480^510^if  ( ! ( allowDupe || var.getParentNode (  ) .getType (  )  == Token.EXPR_RESULT )  || !newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var .getParentNode (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType .matchesStringContext (  )  , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType^499^500^501^502^^495^503^JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^variableName, paramType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^495^503^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^variableName, leftType.equals (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^495^503^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^varType != typeRegistry.createUnionType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^471^472^473^^^456^486^varType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  && newType != null && newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P13_Insert_Block]^if  ( jsType == null )  {     return getNativeType ( UNKNOWN_TYPE ) ; }else {     return jsType; }^471^^^^^456^486^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesStringContext (  )  )  )  {     mismatch ( t, n, msg, type, STRING_TYPE ) ; }^471^^^^^456^486^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^471^^^^^456^486^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesNumberContext (  )  )  )  {     mismatch ( t, n, msg, type, NUMBER_TYPE ) ; }^471^^^^^456^486^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^newType != typeRegistry.createUnionType ( UNKNOWN_TYPE )  )  {^473^^^^^458^488^newType != typeRegistry.getNativeType ( UNKNOWN_TYPE )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^parent.setJSType ( overridingType ) ;^487^^^^^472^502^parent.setJSType ( varType ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^!newType .equals ( null )   )  {^497^^^^^482^512^!newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P8_Replace_Mix]^!newType.equals ( leftType )  )  {^497^^^^^482^512^!newType.equals ( varType )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var .getParentNode (  )  , String.valueOf ( var.nameNode.getLineno (  )  ) ,^498^499^500^501^^483^513^compiler.report ( JSError.make ( sourceName, n, DUP_VAR_DECLARATION, variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) ,^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P5_Replace_Variable]^variableName, objType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^500^501^502^^^485^515^variableName, newType.toString (  ) , var.getInputName (  ) , String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectUndeclaredVariable [RETURN_TYPE] void   String sourceName Node n Node parent Var var String variableName JSType newType [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  allowDupe  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Var  var  Node  n  parent  List  mismatches  String  FOUND_REQUIRED  msg  propName  propertyName  sourceName  variableName  JSDocInfo  info  long  serialVersionUID  
[P7_Replace_Invocation]^ObjectType instance = type.setPrototypeBasedOn (  ) ;^513^^^^^512^532^ObjectType instance = type.getInstanceType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^ObjectType instance = type .getReturnType (  )  ;^513^^^^^512^532^ObjectType instance = type.getInstanceType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Node source = type.getSource (  ) ;ObjectType instance = type.getInstanceType (  ) ;^513^^^^^512^532^ObjectType instance = type.getInstanceType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType jsType = n.getJSType (  ) ;ObjectType instance = type.getInstanceType (  ) ;^513^^^^^512^532^ObjectType instance = type.getInstanceType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType varType = var.getType (  ) ;ObjectType instance = type.getInstanceType (  ) ;^513^^^^^512^532^ObjectType instance = type.getInstanceType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^ObjectType dereferenced = type.dereference (  ) ;ObjectType instance = type.getInstanceType (  ) ;^513^^^^^512^532^ObjectType instance = type.getInstanceType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType type = getJSType ( n ) ;ObjectType instance = type.getInstanceType (  ) ;^513^^^^^512^532^ObjectType instance = type.getInstanceType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^513^^^^^512^532^ObjectType instance = type.getInstanceType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^objectType = objectType.getImplicitPrototype (  ) ;ObjectType instance = type.getInstanceType (  ) ;^513^^^^^512^532^ObjectType instance = type.getInstanceType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( implemented.getImplicitPrototype (  )  == null )  {^515^^^^^512^532^if  ( implemented.getImplicitPrototype (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( instance.getImplicitPrototype (  )  != null )  {^515^^^^^512^532^if  ( implemented.getImplicitPrototype (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( sourceName == null )  {^515^^^^^512^532^if  ( implemented.getImplicitPrototype (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( implemented.hasProperty (  )  != null )  {^515^^^^^512^532^if  ( implemented.getImplicitPrototype (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( implemented.getImplicitPrototype (  )  != true )  {^515^^^^^512^532^if  ( implemented.getImplicitPrototype (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( instance.hasProperty ( prop )  )  )  {     Node source = type.getSource (  ) ;     checkNotNull ( source ) ;     String sourceName =  (  ( String )   ( source.getProp ( Node.SOURCENAME_PROP )  )  ) ;     sourceName =  ( sourceName == null )  ? "" : sourceName;     compiler.report ( make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;     registerMismatch ( instance, implemented ) ; }^515^^^^^512^532^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !instance.hasProperty ( variableName )  )  {^518^^^^^512^532^if  ( !instance.hasProperty ( prop )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !instance .hasOwnProperty ( propertyName )   )  {^518^^^^^512^532^if  ( !instance.hasProperty ( prop )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !instance.hasProperty ( propertyName )  )  {^518^^^^^512^532^if  ( !instance.hasProperty ( prop )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^sourceName = sourceName != null ? "" : sourceName;^522^^^^^512^532^sourceName = sourceName == null ? "" : sourceName;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^sourceName = propertyName == null ? "" : sourceName;^522^^^^^512^532^sourceName = sourceName == null ? "" : sourceName;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^sourceName = sourceName ( sourceName;^522^^^^^512^532^sourceName = sourceName == null ? "" : sourceName;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^sourceName = sourceName == false ? "" : sourceName;^522^^^^^512^532^sourceName = sourceName == null ? "" : sourceName;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Node source = type.setPrototypeBasedOn (  ) ;^519^^^^^512^532^Node source = type.getSource (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Node source = type .getReturnType (  )  ;^519^^^^^512^532^Node source = type.getSource (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^ObjectType instance = type.getInstanceType (  ) ;Node source = type.getSource (  ) ;^519^^^^^512^532^Node source = type.getSource (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P1_Replace_Type]^char sourceName =  ( char )  source.getProp ( Node.SOURCENAME_PROP ) ;^521^^^^^512^532^String sourceName =  ( String )  source.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^String sourceName =  ( String )  source.setJSType ( Node.SOURCENAME_PROP ) ;^521^^^^^512^532^String sourceName =  ( String )  source.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^String sourceName =  ( String )  source .getJSType (  )  ;^521^^^^^512^532^String sourceName =  ( String )  source.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^519^520^^^^512^532^Node source = type.getSource (  ) ; Preconditions.checkNotNull ( source ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^520^^^^^512^532^Preconditions.checkNotNull ( source ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^521^522^^^^512^532^String sourceName =  ( String )  source.getProp ( Node.SOURCENAME_PROP ) ; sourceName = sourceName == null ? "" : sourceName;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( variableName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, variableName, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , implemented.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, TYPE_MISMATCH_WARNING, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make (  source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName,  INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED,  implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) .toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source,  prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( prop, source, INTERFACE_METHOD_NOT_IMPLEMENTED, sourceName, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( INTERFACE_METHOD_NOT_IMPLEMENTEDName, source, source, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, instance.toString (  ) , implemented.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( instance, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , sourceName.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, instance, prop, implemented.toString (  ) , INTERFACE_METHOD_NOT_IMPLEMENTED.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^compiler .getTypeRegistry (  )   )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.hasProperty (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented .matchesStringContext (  )  , instance^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^compiler.report ( JSError.make ( variableName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.hasProperty (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, instance.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceNameName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, implemented, prop.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( INTERFACE_METHOD_NOT_IMPLEMENTED, source, sourceName, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^compiler.report ( JSError.make ( sourceName, source, TYPE_MISMATCH_WARNING, prop, implemented.hasProperty (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^prop, implemented.hasProperty (  ) , instance.toString (  )  )  ) ;^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^prop, instance.toString (  ) , instance.toString (  )  )  ) ;^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType.toString (  ) , type.toString (  )  )  ) ;prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^propertyName, ownerType.toString (  ) , hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSError.make ( t, n, INVALID_CAST, castType.toString (  ) , type.toString (  )  )  ) ;prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^hiddenType.toString (  ) , overridingType.toString (  )  )  ) ;prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String.valueOf ( var.nameNode.getLineno (  )  ) , varType.toString (  )  )  ) ;prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^prop, implemented.toString (  ) , implemented.toString (  )  )  ) ;^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^526^527^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ; registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch (  implemented ) ;^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( instance ) ;^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( implemented, instance ) ;^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( instance, implemented ) ;^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( superObject, declaredSuper ) ;registerMismatch ( instance, implemented ) ;^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( rightType, leftType ) ;registerMismatch ( instance, implemented ) ;^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( overridingType, hiddenType ) ;registerMismatch ( instance, implemented ) ;^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( found, required ) ;registerMismatch ( instance, implemented ) ;^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( type, castType ) ;registerMismatch ( instance, implemented ) ;^527^^^^^512^532^registerMismatch ( instance, implemented ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^sourceName = variableName == null ? "" : sourceName;^522^^^^^512^532^sourceName = sourceName == null ? "" : sourceName;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^sourceName = sourceName == this ? "" : sourceName;^522^^^^^512^532^sourceName = sourceName == null ? "" : sourceName;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P1_Replace_Type]^for  ( char prop : implemented.getImplicitPrototype (  ) .getOwnPropertyNames (  )  )  {^516^517^^^^512^532^for  ( String prop : implemented.getImplicitPrototype (  ) .getOwnPropertyNames (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^implemented.getImplicitPrototype (  ) .setJSType (  )  )  {^517^^^^^512^532^implemented.getImplicitPrototype (  ) .getOwnPropertyNames (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^implemented.hasProperty (  ) .getOwnPropertyNames (  )  )  {^517^^^^^512^532^implemented.getImplicitPrototype (  ) .getOwnPropertyNames (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^implemented .isFunctionPrototypeType (  )  .getOwnPropertyNames (  )  )  {^517^^^^^512^532^implemented.getImplicitPrototype (  ) .getOwnPropertyNames (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^517^518^519^^^512^532^implemented.getImplicitPrototype (  ) .getOwnPropertyNames (  )  )  { if  ( !instance.hasProperty ( prop )  )  { Node source = type.getSource (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !instance .hasOwnProperty ( msg )   )  {^518^^^^^512^532^if  ( !instance.hasProperty ( prop )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !instance.hasProperty ( sourceName )  )  {^518^^^^^512^532^if  ( !instance.hasProperty ( prop )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Preconditions .checkState (  )  ;^520^^^^^512^532^Preconditions.checkNotNull ( source ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( implementedName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, source.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, propertyName, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( propName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, source, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, instance, implemented.toString (  ) , prop.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^prop, implemented .matchesStringContext (  )  , instance^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^520^521^^^^512^532^Preconditions.checkNotNull ( source ) ; String sourceName =  ( String )  source.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^521^^^^^512^532^String sourceName =  ( String )  source.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( propName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, MISSING_EXTENDS_TAG_WARNING, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( source, sourceName, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, source, implemented, prop, INTERFACE_METHOD_NOT_IMPLEMENTED.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^for  ( ObjectType implemented : type.setPrototypeBasedOn (  )  )  {^514^^^^^512^532^for  ( ObjectType implemented : type.getAllImplementedInterfaces (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( implemented .isFunctionPrototypeType (  )   != null )  {^515^^^^^512^532^if  ( implemented.getImplicitPrototype (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( instance .isFunctionPrototypeType (  )   != null )  {^515^^^^^512^532^if  ( implemented.getImplicitPrototype (  )  != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^implemented.getImplicitPrototype (  )  .getIndexType (  )   )  {^517^^^^^512^532^implemented.getImplicitPrototype (  ) .getOwnPropertyNames (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !instance .hasOwnProperty ( sourceName )   )  {^518^^^^^512^532^if  ( !instance.hasProperty ( prop )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^519^^^^^512^532^Node source = type.getSource (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( implemented, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, sourceName.toString (  ) , instance.toString (  )  )  ) ;^524^525^526^^^512^532^compiler.report ( JSError.make ( sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^prop, instance.hasProperty (  ) , instance.toString (  )  )  ) ;^526^^^^^512^532^prop, implemented.toString (  ) , instance.toString (  )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] expectAllInterfacePropertiesImplemented [RETURN_TYPE] void   FunctionType type [VARIABLES] ObjectType  implemented  instance  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  type  Node  source  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, propertyName, found, required ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, msg, overridingType, required ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, msg, found, leftType ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) ,  msg, found, required ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n,  found, required ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, msg,  required ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, msg, found ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg.getSourceName (  ) , n, t, found, required ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , required, msg, found, n ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, found, msg, required ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( found.getSourceName (  ) , n, msg, t, required ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t.getSourceName (  ) , n, required, found, msg ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t.getSourceName (  ) , n, msg, found, newType ) ;^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^539^^^^^537^540^mismatch ( t.getSourceName (  ) , n, msg, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, propertyName, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg, switchType, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch (  n, msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t,  msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n,  found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, n, msg,  getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( msg, n, t, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, found, msg, n, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( t, msg, n, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( found, n, msg, t, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^mismatch ( required, n, msg, found, getNativeType ( t )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P7_Replace_Invocation]^mismatch ( t, n, msg, found, getJSType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P8_Replace_Mix]^mismatch ( t, n, variableName, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P14_Delete_Statement]^^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, anyObjectType ) ;mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, NUMBER_STRING ) ;mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, OBJECT_TYPE ) ;mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, expectedType ) ;mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, NUMBER_TYPE ) ;mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, STRING_TYPE ) ;mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, type, allValueTypes ) ;mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P11_Insert_Donor_Statement]^mismatch ( t, n, msg, rightType, leftType ) ;mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^544^^^^^542^545^mismatch ( t, n, msg, found, getNativeType ( required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   NodeTraversal t Node n String msg JSType found JSTypeNative required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  NodeTraversal  t  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  JSTypeNative  required  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( ownerType, required ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch (  required ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( found ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( required, found ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( found, required ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^registerMismatch ( paramType, required ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( superObject, declaredSuper ) ;registerMismatch ( found, required ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( rightType, leftType ) ;registerMismatch ( found, required ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( instance, implemented ) ;registerMismatch ( found, required ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( overridingType, hiddenType ) ;registerMismatch ( found, required ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( type, castType ) ;registerMismatch ( found, required ) ;^549^^^^^547^553^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( variableName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( variableName, found, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, newType, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, overridingType )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, MISSING_EXTENDS_TAG_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make (  n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName,  TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired (  found, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg,  required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n,  formatFoundRequired ( msg, found, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( TYPE_MISMATCH_WARNING, n, sourceName, formatFoundRequired ( msg, found, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, found, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, n, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, msg, formatFoundRequired ( TYPE_MISMATCH_WARNING, found, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( found, msg, required )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, required, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, n )  )  ) ;^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^550^551^552^^^547^553^compiler.report ( JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( variableName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( variableName, found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, newType, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, paramType )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, INVALID_CAST, formatFoundRequired ( msg, found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make (  n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName,  TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired (  found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg,  required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n,  formatFoundRequired ( msg, found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( msg, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( sourceName, found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, msg, TYPE_MISMATCH_WARNING, formatFoundRequired ( n, found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, required, found )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^JSError.make ( sourceName, n, required, formatFoundRequired ( msg, found, TYPE_MISMATCH_WARNING )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( propertyName, found, required )  )  ) ;^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^551^552^^^^547^553^JSError.make ( sourceName, n, TYPE_MISMATCH_WARNING, formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^formatFoundRequired ( sourceName, found, required )  )  ) ;^552^^^^^547^553^formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^formatFoundRequired ( msg, found, newType )  )  ) ;^552^^^^^547^553^formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^formatFoundRequired (  found, required )  )  ) ;^552^^^^^547^553^formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^formatFoundRequired ( msg,  required )  )  ) ;^552^^^^^547^553^formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^formatFoundRequired ( msg, found )  )  ) ;^552^^^^^547^553^formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^formatFoundRequired ( found, msg, required )  )  ) ;^552^^^^^547^553^formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^formatFoundRequired ( msg, required, found )  )  ) ;^552^^^^^547^553^formatFoundRequired ( msg, found, required )  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^552^553^^^^547^553^formatFoundRequired ( msg, found, required )  )  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] mismatch [RETURN_TYPE] void   String sourceName Node n String msg JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^found = objType.restrictByNotNullOrUndefined (  ) ;^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^found = found.isSubtype (  ) ;^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^found = found .isConstructor (  )  ;^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^found =  newType.restrictByNotNullOrUndefined (  ) ;^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType = castType.restrictByNotNullOrUndefined (  ) ;found = found.restrictByNotNullOrUndefined (  ) ;^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^type = type.restrictByNotNullOrUndefined (  ) ;found = found.restrictByNotNullOrUndefined (  ) ;^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^required = required.restrictByNotNullOrUndefined (  ) ;found = found.restrictByNotNullOrUndefined (  ) ;^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^found = required.restrictByNotNullOrUndefined (  ) ;^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^found = ownerType.restrictByNotNullOrUndefined (  ) ;^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^558^^^^^555^578^found = found.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^required = required.isSubtype (  ) ;^559^^^^^555^578^required = required.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^required = required .isConstructor (  )  ;^559^^^^^555^578^required = required.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^required =  leftType.restrictByNotNullOrUndefined (  ) ;^559^^^^^555^578^required = required.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^found = found.restrictByNotNullOrUndefined (  ) ;required = required.restrictByNotNullOrUndefined (  ) ;^559^^^^^555^578^required = required.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^castType = castType.restrictByNotNullOrUndefined (  ) ;required = required.restrictByNotNullOrUndefined (  ) ;^559^^^^^555^578^required = required.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^type = type.restrictByNotNullOrUndefined (  ) ;required = required.restrictByNotNullOrUndefined (  ) ;^559^^^^^555^578^required = required.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^required = switchType.restrictByNotNullOrUndefined (  ) ;^559^^^^^555^578^required = required.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^required = leftType.isSubtype (  ) ;^559^^^^^555^578^required = required.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^559^^^^^555^578^required = required.restrictByNotNullOrUndefined (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( found.canAssignTo ( required )  && required.canAssignTo ( found )  )  {^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( found.canAssignTo ( overridingType )  || required.canAssignTo ( found )  )  {^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( required.canAssignTo ( found )  || required.canAssignTo ( found )  )  {^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( found.canAssignTo ( required )  ) {^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  (  required.canAssignTo ( found )  )  {^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( found .matchesStringContext (  )   || required^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P15_Unwrap_Block]^return ;^560^561^562^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  { return; }^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P16_Remove_Block]^^560^561^562^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  { return; }^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( newType.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( found.canAssignTo ( paramType )  || required.canAssignTo ( found )  )  {^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( rightType.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( overridingType.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^560^^^^^555^578^if  ( found.canAssignTo ( required )  || required.canAssignTo ( found )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P4_Replace_Constructor]^mismatches.add ( new TypeMismatch (  required )  ) ;^564^^^^^555^578^mismatches.add ( new TypeMismatch ( found, required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P4_Replace_Constructor]^mismatches.add ( new TypeMismatch ( found )  ) ;^564^^^^^555^578^mismatches.add ( new TypeMismatch ( found, required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatches.add ( new TypeMismatch ( found, rightType )  ) ;^564^^^^^555^578^mismatches.add ( new TypeMismatch ( found, required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatches.add ( new TypeMismatch ( required, found )  ) ;^564^^^^^555^578^mismatches.add ( new TypeMismatch ( found, required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^mismatches.add ( new TypeMismatch ( found, newType )  ) ;^564^^^^^555^578^mismatches.add ( new TypeMismatch ( found, required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^mismatches.add ( new TypeMismatch ( newType, required )  ) ;^564^^^^^555^578^mismatches.add ( new TypeMismatch ( found, required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^mismatches.add ( new TypeMismatch ( found, paramType )  ) ;^564^^^^^555^578^mismatches.add ( new TypeMismatch ( found, required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^564^^^^^555^578^mismatches.add ( new TypeMismatch ( found, required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( found, required ) ;mismatches.add ( new TypeMismatch ( found, required )  ) ;^564^^^^^555^578^mismatches.add ( new TypeMismatch ( found, required )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^while  ( paramItA.hasNext (  )  || paramItB.hasNext (  )  )  {^571^^^^^555^578^while  ( paramItA.hasNext (  )  && paramItB.hasNext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^while  ( paramItB.hasNext (  )  && paramItA.hasNext (  )  )  {^571^^^^^555^578^while  ( paramItA.hasNext (  )  && paramItB.hasNext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^while  ( paramItA .next (  )   && paramItB^571^^^^^555^578^while  ( paramItA.hasNext (  )  && paramItB.hasNext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) .next (  ) .getJSType (  )  ) ;^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerIfMismatch ( paramItB.next (  ) .getJSType (  ) , paramItA.next (  ) .getJSType (  )  ) ;^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( paramItA.next (  ) .contains (  ) , paramItB.next (  ) .getJSType (  )  ) ;^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( paramItA.next (  )  .setJSType ( anyObjectType )  , paramItB.next (  )^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( paramItA .hasNext (  )  .getJSType (  ) , paramItB^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( paramItA.next (  )  .setJSType ( caseType )  , paramItB.next (  )^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^paramItB.next (  ) .contains (  )  ) ;^573^^^^^555^578^paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^573^^^^^555^578^paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^n.getFirstChild (  ) .setJSType ( varType ) ;paramItB.next (  ) .getJSType (  )  ) ;^573^^^^^555^578^paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType type = getJSType ( n ) ;paramItB.next (  ) .getJSType (  )  ) ;^573^^^^^555^578^paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^paramItB .hasNext (  )  .getJSType (  )  ) ;^573^^^^^555^578^paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( found instanceof FunctionType || required instanceof FunctionType )  {^565^566^^^^555^578^if  ( found instanceof FunctionType && required instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( found  !=  FunctionType && required instanceof FunctionType )  {^565^566^^^^555^578^if  ( found instanceof FunctionType && required instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( found instanceof FunctionType && required  ^  FunctionType )  {^565^566^^^^555^578^if  ( found instanceof FunctionType && required instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( objType instanceof FunctionType && required instanceof FunctionType )  {^565^566^^^^555^578^if  ( found instanceof FunctionType && required instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( found instanceof FunctionType ) {^565^566^^^^555^578^if  ( found instanceof FunctionType && required instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  (  required instanceof FunctionType )  {^565^566^^^^555^578^if  ( found instanceof FunctionType && required instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( paramItA.hasNext() && paramItB.hasNext() )  {^565^566^^^^555^578^if  ( found instanceof FunctionType && required instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^registerIfMismatch ( paramItA.next (  )  .setJSType ( type )  , paramItB.next (  )^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^FunctionType fnTypeB =  (  ( FunctionType )  required ) ;FunctionType fnTypeA =  (  ( FunctionType )  found ) ;^567^^^^^555^578^FunctionType fnTypeA =  (  ( FunctionType )  found ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^FunctionType fnTypeA =  (  ( FunctionType )  found ) ;FunctionType fnTypeB =  (  ( FunctionType )  required ) ;^568^^^^^555^578^FunctionType fnTypeB =  (  ( FunctionType )  required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^Iterator<Node> paramItA = fnTypeB.getParameters (  ) .iterator (  ) ;^569^^^^^555^578^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .contains (  ) ;^569^^^^^555^578^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Iterator<Node> paramItA = fnTypeA.setPrototypeBasedOn (  ) .iterator (  ) ;^569^^^^^555^578^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Iterator<Node> paramItA = fnTypeA .getInstanceType (  )  .iterator (  ) ;^569^^^^^555^578^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^Iterator<Node> paramItA = fnTypeB.setPrototypeBasedOn (  ) .iterator (  ) ;^569^^^^^555^578^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;^569^^^^^555^578^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^Iterator<Node> paramItB = fnTypeA.getParameters (  ) .iterator (  ) ;^570^^^^^555^578^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .contains (  ) ;^570^^^^^555^578^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Iterator<Node> paramItB = fnTypeB.setPrototypeBasedOn (  ) .iterator (  ) ;^570^^^^^555^578^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Iterator<Node> paramItB = fnTypeB .getInstanceType (  )  .iterator (  ) ;^570^^^^^555^578^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^570^^^^^555^578^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^569^^^^^555^578^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^569^570^^^^555^578^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ; Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^570^^^^^555^578^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^Iterator<Node> paramItB = fnTypeA.setPrototypeBasedOn (  ) .iterator (  ) ;^570^^^^^555^578^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^while  ( null.hasNext (  )  && paramItB.hasNext (  )  )  {^571^^^^^555^578^while  ( paramItA.hasNext (  )  && paramItB.hasNext (  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^571^572^573^^^555^578^while  ( paramItA.hasNext (  )  && paramItB.hasNext (  )  )  { registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^registerIfMismatch ( null.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^572^573^^^^555^578^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerIfMismatch ( fnTypeA.getReturnType (  ) .getReturnType (  )  ) ;^576^^^^^555^578^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerIfMismatch ( fnTypeB.getReturnType (  ) , fnTypeA.getReturnType (  )  ) ;^576^^^^^555^578^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^576^^^^^555^578^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( fnTypeA.setPrototypeBasedOn (  ) , fnTypeB.getReturnType (  )  ) ;^576^^^^^555^578^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^576^^^^^555^578^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerIfMismatch ( paramItA.next (  ) .getJSType (  ) , paramItB.next (  ) .getJSType (  )  ) ;registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^576^^^^^555^578^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerIfMismatch ( fnTypeB.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^576^^^^^555^578^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeA.getReturnType (  )  ) ;^576^^^^^555^578^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( fnTypeA .getInstanceType (  )  , fnTypeB^576^^^^^555^578^registerIfMismatch ( fnTypeA.getReturnType (  ) , fnTypeB.getReturnType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Iterator<Node> paramItB = fnTypeB.getParameters (  )  .getConstructor (  )  ;^570^^^^^555^578^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^Iterator<Node> paramItA = fnTypeA.getParameters (  )  .getConstructor (  )  ;^569^^^^^555^578^Iterator<Node> paramItA = fnTypeA.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^Iterator<Node> paramItB = fnTypeA.getParameters (  ) .contains (  ) ;^570^^^^^555^578^Iterator<Node> paramItB = fnTypeB.getParameters (  ) .iterator (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^paramItB.next (  )  .setJSType ( varType )   ) ;^573^^^^^555^578^paramItB.next (  ) .getJSType (  )  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  FunctionType  fnTypeA  fnTypeB  Iterator  paramItA  paramItB  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( found != null || required != null && !found.canAssignTo ( required )  )  {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( found == null && required != null && !found.canAssignTo ( required )  )  {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( found != null && required == null && !found.canAssignTo ( required )  )  {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( newType != null && required != null && !found.canAssignTo ( required )  )  {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( required != null && found != null && !found.canAssignTo ( required )  )  {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( found != null ) {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  (  required != null && !found.canAssignTo ( required )  )  {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (found != null && required != null) )  {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( required != null )  {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  (  required != false && !found.canAssignTo ( required )  )  {^581^582^^^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P15_Unwrap_Block]^registerMismatch(found, required);^581^582^583^584^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  { registerMismatch ( found, required ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P16_Remove_Block]^^581^582^583^584^^580^585^if  ( found != null && required != null && !found.canAssignTo ( required )  )  { registerMismatch ( found, required ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( paramType, required ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( found, newType ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch (  required ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( found ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( required, found ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^registerIfMismatch ( found, required ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( superObject, declaredSuper ) ;registerMismatch ( found, required ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( rightType, leftType ) ;registerMismatch ( found, required ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( instance, implemented ) ;registerMismatch ( found, required ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( overridingType, hiddenType ) ;registerMismatch ( found, required ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^registerMismatch ( type, castType ) ;registerMismatch ( found, required ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^!found.canAssignTo ( newType )  )  {^582^^^^^580^585^!found.canAssignTo ( required )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^582^583^^^^580^585^!found.canAssignTo ( required )  )  { registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( objType, required ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^registerMismatch ( found, varType ) ;^583^^^^^580^585^registerMismatch ( found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] registerIfMismatch [RETURN_TYPE] void   JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( FOUND_REQUIRED, variableName, found, required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( FOUND_REQUIRED, description, newType, required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( FOUND_REQUIRED, description, found, newType ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( variableName, description, found, required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( FOUND_REQUIRED,  found, required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( FOUND_REQUIRED, description,  required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( FOUND_REQUIRED, description, found ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format (  description, found, required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( description, FOUND_REQUIRED, found, required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( FOUND_REQUIRED, description, required, found ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( found, description, FOUND_REQUIRED, required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return MessageFormat.format ( FOUND_REQUIRED, description, objType, required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return MessageFormat.format ( FOUND_REQUIRED, description, varType, required ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return MessageFormat.format ( FOUND_REQUIRED, description, found, objType ) ;^592^^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^592^593^^^^590^593^return MessageFormat.format ( FOUND_REQUIRED, description, found, required ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] formatFoundRequired [RETURN_TYPE] String   String description JSType found JSType required [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^while  ( objectType != null || !objectType.hasOwnProperty ( propName )  )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^while  ( objectType == null && !objectType.hasOwnProperty ( propName )  )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^while  ( dereferenced != null && !objectType.hasOwnProperty ( propName )  )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^while  ( propName != null && !objectType.hasOwnProperty ( objectType )  )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^while  ( objectType != null && !objectType.hasOwnProperty ( variableName )  )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^objectType = dereferenced.getImplicitPrototype (  ) ;^615^^^^^600^630^objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^objectType = objectType.hasProperty (  ) ;^615^^^^^600^630^objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^objectType = objectType .isFunctionPrototypeType (  )  ;^615^^^^^600^630^objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^615^^^^^600^630^objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^ObjectType instance = type.getInstanceType (  ) ;objectType = objectType.getImplicitPrototype (  ) ;^615^^^^^600^630^objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^subObject.getImplicitPrototype (  ) .getImplicitPrototype (  ) ;objectType = objectType.getImplicitPrototype (  ) ;^615^^^^^600^630^objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( n.getType (  )  != Token.GETPROP )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType != null )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType != null && !(objectType.hasOwnProperty(propName)) )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType != null && (objectType.getConstructor() != null) || objectType.isFunctionPrototypeType() )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (objectType.getConstructor() != null || objectType.isFunctionPrototypeType()) )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType.getConstructor (  )  != null )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType.toString() + "." + propName )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType.toString (  )  + "." )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( n.setJSType (  )  == Token.GETPROP )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( n .getJSType (  )   == Token.GETPROP )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( parent.getType (  )  == Token.VAR )  {^610^^^^^595^625^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^while  ( objectType != null && !objectType.hasOwnProperty ( propertyName )  )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^objectType =  null.getImplicitPrototype (  ) ;^615^^^^^600^630^objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( objectType == null )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( dereferenced != null )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType != null && !(objectType.hasOwnProperty(propName)) )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType != null && (objectType.getConstructor() != null) || objectType.isFunctionPrototypeType() )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (objectType.getConstructor() != null || objectType.isFunctionPrototypeType()) )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType.getConstructor (  )  != null )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType.toString() + "." + propName )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType.toString (  )  + "." )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( objectType != true )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( jsType == null )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P15_Unwrap_Block]^java.lang.String propName = n.getLastChild().getString(); while ((objectType != null) && (!(objectType.hasOwnProperty(propName)))) {    objectType = objectType.getImplicitPrototype();} ; if ((objectType != null) && (((objectType.getConstructor()) != null) || (objectType.isFunctionPrototypeType()))) {    return ((objectType.toString()) + ".") + propName;};^612^613^614^615^616^597^627^if  ( objectType != null )  { String propName = n.getLastChild (  ) .getString (  ) ; while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  { objectType = objectType.getImplicitPrototype (  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P16_Remove_Block]^^612^613^614^615^616^597^627^if  ( objectType != null )  { String propName = n.getLastChild (  ) .getString (  ) ; while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  { objectType = objectType.getImplicitPrototype (  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^while  ( objectType != null && !objectType.hasOwnProperty ( sourceName )  )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( objectType != null || ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( objectType == null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( objectType != null && ( objectType.getConstructor (  )  != null && objectType.isFunctionPrototypeType (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( objectType != null && ( objectType.getConstructor (  )  == null || objectType.isFunctionPrototypeType (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( dereferenced != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType != null && ( objectType.getConstructor (  )  != null ) {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  (  objectType.isFunctionPrototypeType (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType != null )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (objectType.getConstructor() != null || objectType.isFunctionPrototypeType()) )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType.getConstructor (  )  != null )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType.toString() + "." + propName )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( objectType.toString (  )  + "." )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( objectType != null && ( objectType.hasProperty (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( objectType != null && ( objectType .toString (  )   != null || objectType.isFunctionPrototypeType (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.hasProperty (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType .getImplicitPrototype (  )   )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( objectType != true && ( objectType.getConstructor (  )  != true || objectType.isFunctionPrototypeType (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P15_Unwrap_Block]^return ((objectType.toString()) + ".") + propName;^620^621^622^623^624^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  { return objectType.toString (  )  + "." + propName; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P16_Remove_Block]^^620^621^622^623^624^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  { return objectType.toString (  )  + "." + propName; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  <<  )  + "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  )   ^  "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P3_Replace_Literal]^return objectType.toString (  )  + "" + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return dereferenced.toString (  )  + "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return objectType.toString (  )  + "." + qualifiedName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return propName.toString (  )  + "." + objectType;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return objectType.hasProperty (  )  + "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return objectType .matchesStringContext (  )   + "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return objectType .matchesStringContext (  )   + "." + qualifiedName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  ==  )  + "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  )   <  "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return dereferenced.toString (  )  + "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return objectType.toString (  )  + "." + variableName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return propName.toString (  )  + "." + objectType;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return objectType.hasProperty (  )  + "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return objectType .matchesStringContext (  )   + "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return objectType.hasProperty (  )   ;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P1_Replace_Type]^char propName = n.getLastChild (  ) .getchar (  ) ;^613^^^^^598^628^String propName = n.getLastChild (  ) .getString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^String propName = n.getLastChild (  ) .contains (  ) ;^613^^^^^598^628^String propName = n.getLastChild (  ) .getString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^String propName = n.getLastChild (  )  .getType (  )  ;^613^^^^^598^628^String propName = n.getLastChild (  ) .getString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^String propName = n.setJSType (  ) .getString (  ) ;^613^^^^^598^628^String propName = n.getLastChild (  ) .getString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^String propName = n .getFirstChild (  )  .getString (  ) ;^613^^^^^598^628^String propName = n.getLastChild (  ) .getString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^613^^^^^598^628^String propName = n.getLastChild (  ) .getString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^while  ( objectType != null && !objectType .hasProperty ( FOUND_REQUIRED )   )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^614^615^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  { objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^( dereferenced.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^621^622^^^^606^636^( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^( objectType.hasProperty (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^621^622^^^^606^636^( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^621^622^623^^^606^636^( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  { return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^objectType.hasProperty (  )  )  )  {^622^^^^^607^637^objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^622^623^^^^607^637^objectType.isFunctionPrototypeType (  )  )  )  { return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  (  objectType.hasProperty (  )  )  )  {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  &&  )  + "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  )   >  "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return objectType.toString (  )  + "." + propertyName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  <<  )  + "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  )   |  "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return dereferenced.hasProperty (  )  + "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^ObjectType objectType = getJSType ( n.getFirstChild (  )  ) .setJSType (  ) ;^611^^^^^596^626^ObjectType objectType = getJSType ( n.getFirstChild (  )  ) .dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^ObjectType objectType = getNativeType ( n.getFirstChild (  )  ) .dereference (  ) ;^611^^^^^596^626^ObjectType objectType = getJSType ( n.getFirstChild (  )  ) .dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^ObjectType objectType = getJSType ( n.setJSType (  )  ) .dereference (  ) ;^611^^^^^596^626^ObjectType objectType = getJSType ( n.getFirstChild (  )  ) .dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^ObjectType objectType = getJSType ( n.getFirstChild (  )  )  .getOwnPropertyNames (  )  ;^611^^^^^596^626^ObjectType objectType = getJSType ( n.getFirstChild (  )  ) .dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^ObjectType objectType = getJSType ( n .getLastChild (  )   ) .dereference (  ) ;^611^^^^^596^626^ObjectType objectType = getJSType ( n.getFirstChild (  )  ) .dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^611^^^^^596^626^ObjectType objectType = getJSType ( n.getFirstChild (  )  ) .dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^objectType = dereferenced .isFunctionPrototypeType (  )  ;^615^^^^^600^630^objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^( objectType .toString (  )   != null || objectType.isFunctionPrototypeType (  )  )  )  {^621^622^^^^606^636^( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^objectType .getImplicitPrototype (  )   )  )  {^622^^^^^607^637^objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( n != objectTypeull )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( objectType != this )  {^612^^^^^597^627^if  ( objectType != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( objectType != this && ( objectType.getConstructor (  )  != this ) {^620^621^622^^^605^635^if  ( objectType != null && ( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  ^  )  + "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  )   ||  "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  )    instanceof   "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P3_Replace_Literal]^return objectType.toString (  )  + "" + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^while  ( dereferenced != null && !objectType .hasProperty ( msg )   )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^( dereferenced.hasProperty (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^621^622^^^^606^636^( objectType.getConstructor (  )  != null || objectType.isFunctionPrototypeType (  )  )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  )   >>  "." + propName;^623^^^^^620^624^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  |  )  + "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^return objectType.toString (  )   !=  "." + propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return objectType.toString (  )  + "." + qualifiedName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return objectType.hasProperty (  )   ^  "."  ^  propName;^623^^^^^608^638^return objectType.toString (  )  + "." + propName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^while  ( objectType != null && !objectType .hasProperty ( propertyName )   )  {^614^^^^^599^629^while  ( objectType != null && !objectType.hasOwnProperty ( propName )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^objectType = dereferenced.hasProperty (  ) ;^615^^^^^600^630^objectType = objectType.getImplicitPrototype (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^JSType type = getNativeType ( n ) ;^628^^^^^613^643^JSType type = getJSType ( n ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^ObjectType instance = type.getInstanceType (  ) ;JSType type = getJSType ( n ) ;^628^^^^^613^643^JSType type = getJSType ( n ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType jsType = n.getJSType (  ) ;JSType type = getJSType ( n ) ;^628^^^^^613^643^JSType type = getJSType ( n ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType anyObjectType = getNativeType ( NO_OBJECT_TYPE ) ;JSType type = getJSType ( n ) ;^628^^^^^613^643^JSType type = getJSType ( n ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType varType = var.getType (  ) ;JSType type = getJSType ( n ) ;^628^^^^^613^643^JSType type = getJSType ( n ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^628^^^^^613^643^JSType type = getJSType ( n ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^paramItB.next (  ) .getJSType (  )  ) ;JSType type = getJSType ( n ) ;^628^^^^^613^643^JSType type = getJSType ( n ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( equals )  {^629^^^^^614^644^if  ( dereference )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( dereferenced != null )  {^629^^^^^614^644^if  ( dereference )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.ObjectType dereferenced = type.dereference(); if (dereferenced != null) {    type = dereferenced;};^629^630^631^632^633^614^644^if  ( dereference )  { ObjectType dereferenced = type.dereference (  ) ; if  ( dereferenced != null )  { type = dereferenced; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P16_Remove_Block]^^629^630^631^632^633^614^644^if  ( dereference )  { ObjectType dereferenced = type.dereference (  ) ; if  ( dereferenced != null )  { type = dereferenced; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( dereferenced == null )  {^631^^^^^616^646^if  ( dereferenced != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( objectType != null )  {^631^^^^^616^646^if  ( dereferenced != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( objectType != this )  {^631^^^^^616^646^if  ( dereferenced != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( dereference )  {^631^^^^^616^646^if  ( dereferenced != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P15_Unwrap_Block]^type = dereferenced;^631^632^633^^^616^646^if  ( dereferenced != null )  { type = dereferenced; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P16_Remove_Block]^^631^632^633^^^616^646^if  ( dereferenced != null )  { type = dereferenced; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^type = objectType;^632^^^^^617^647^type = dereferenced;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^type =  null;^632^^^^^617^647^type = dereferenced;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P12_Insert_Condition]^if  ( dereference )  { type = dereferenced; }^632^^^^^617^647^type = dereferenced;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^ObjectType dereferenced = rightType.dereference (  ) ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^ObjectType dereferenced = type.equals (  ) ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^ObjectType dereferenced = overridingType.equals (  ) ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^ObjectType instance = type.getInstanceType (  ) ;ObjectType dereferenced = type.dereference (  ) ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^ObjectType dereferenced = leftType.dereference (  ) ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^ObjectType dereferenced = newType.equals (  ) ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( objectType != true )  {^631^^^^^616^646^if  ( dereferenced != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^ObjectType dereferenced = objType.dereference (  ) ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^ObjectType dereferenced = type .getOwnPropertyNames (  )  ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^ObjectType dereferenced = paramType.equals (  ) ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^ObjectType dereferenced = ownerType.dereference (  ) ;^630^^^^^615^645^ObjectType dereferenced = type.dereference (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P1_Replace_Type]^char qualifiedName = n.getQualifiedName (  ) ;^636^^^^^621^651^String qualifiedName = n.getQualifiedName (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^String qualifiedName = n.setJSType (  ) ;^636^^^^^621^651^String qualifiedName = n.getQualifiedName (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( type.isFunctionPrototypeType (  )  && ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null || type.toObjectType (  ) .getConstructor (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  == null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  == null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( type.isFunctionPrototypeType (  )  ) {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  (  ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( (type.toObjectType() != null && getConstructor() != null) )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( type.toObjectType (  )  != null )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( type.toObjectType (  ) .getConstructor (  )  != null )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( qualifiedName != null )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^if  ( type instanceof FunctionType )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( type.isSubtype (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( type.isFunctionPrototypeType (  )  || ( type.equals (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( type.isFunctionPrototypeType (  )  || ( type .isObject (  )   != null && type^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .contains (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P13_Insert_Block]^if  ( qualifiedName != null )  {     return qualifiedName; }else     if  ( type instanceof FunctionType )  {         return "function";     }else {         return type.toString (  ) ;     }^637^^^^^622^652^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^} else if  ( qualifiedName == null )  {^641^^^^^626^656^} else if  ( qualifiedName != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( propName != null )  {^641^^^^^626^656^} else if  ( qualifiedName != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^} else if  ( type instanceof FunctionType )  {^641^^^^^626^656^} else if  ( qualifiedName != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^} else {^641^^^^^626^656^} else if  ( qualifiedName != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^}  if  ( qualifiedName != false )  {^641^^^^^626^656^} else if  ( qualifiedName != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^} else if  ( type  <=  FunctionType )  {^643^^^^^628^658^} else if  ( type instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( leftType instanceof FunctionType )  {^643^^^^^628^658^} else if  ( type instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P6_Replace_Expression]^} else {^643^^^^^628^658^} else if  ( type instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P15_Unwrap_Block]^return "function";^643^644^645^646^647^628^658^} else if  ( type instanceof FunctionType )  {  return "function"; } else { return type.toString (  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P16_Remove_Block]^^643^644^645^646^647^628^658^} else if  ( type instanceof FunctionType )  {  return "function"; } else { return type.toString (  ) ; }^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P13_Insert_Block]^if  ( qualifiedName != null )  {     return qualifiedName; }else     if  ( type instanceof FunctionType )  {         return "function";     }else {         return type.toString (  ) ;     }^643^^^^^628^658^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return paramType.toString (  ) ;^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return type.equals (  ) ;^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return type .matchesStringContext (  )  ;^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return switchType.equals (  ) ;^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return leftType.toString (  ) ;^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P3_Replace_Literal]^return "functionn";^645^^^^^630^660^return "function";^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return type.equals (  ) ;^647^^^^^632^662^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return leftType.equals (  ) ;^647^^^^^632^662^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^647^^^^^632^662^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return variableName;^642^^^^^627^657^return qualifiedName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^} else if  ( type  >  FunctionType )  {^643^^^^^628^658^} else if  ( type instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^}  if  ( leftType instanceof FunctionType )  {^643^^^^^628^658^} else if  ( type instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return ownerType.toString (  ) ;^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P3_Replace_Literal]^return "fuunction";^645^^^^^630^660^return "function";^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return propertyName;^642^^^^^627^657^return qualifiedName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P3_Replace_Literal]^return "functionfuncti";^645^^^^^630^660^return "function";^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return leftType.toString (  ) ;^647^^^^^632^662^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return overridingType .matchesStringContext (  )  ;^647^^^^^632^662^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return varType.toString (  ) ;^640^^^^^637^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return type.equals (  ) ;^640^^^^^637^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return newType.toString (  ) ;^640^^^^^637^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return type .matchesStringContext (  )  ;^640^^^^^637^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return objType.toString (  ) ;^640^^^^^637^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^640^^^^^637^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( variableName != null )  {^641^^^^^626^656^} else if  ( qualifiedName != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^}  if  ( qualifiedName != this )  {^641^^^^^626^656^} else if  ( qualifiedName != null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return switchType.toString (  ) ;^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P3_Replace_Literal]^return "fun";^645^^^^^630^660^return "function";^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return newType.toString (  ) ;^647^^^^^632^662^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return type .matchesStringContext (  )  ;^647^^^^^632^662^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return required .matchesStringContext (  )  ;^647^^^^^632^662^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return overridingType.toString (  ) ;^647^^^^^632^662^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return propName;^642^^^^^627^657^return qualifiedName;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^} else if  ( type  >>  FunctionType )  {^643^^^^^628^658^} else if  ( type instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^} else if  ( newType instanceof FunctionType )  {^643^^^^^628^658^} else if  ( type instanceof FunctionType )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return overridingType.toString (  ) ;^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return objType.toString (  ) ;^647^^^^^643^648^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P3_Replace_Literal]^return "o";^645^^^^^630^660^return "function";^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return leftType.toString (  ) ;^640^^^^^625^655^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^return type.equals (  ) ;^640^^^^^625^655^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P3_Replace_Literal]^return "uncunction";^645^^^^^630^660^return "function";^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( overridingType.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( type .getImplicitPrototype (  )   || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( leftType.isSubtype (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^637^638^639^^^622^652^if  ( type.isFunctionPrototypeType (  )  || ( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^( type.equals (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^638^639^^^^623^653^( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^( newType.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^638^639^^^^623^653^( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^638^639^640^^^623^653^( type.toObjectType (  )  != null && type.toObjectType (  ) .getConstructor (  )  != null )  )  { return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^type.toObjectType (  ) .contains (  )  != null )  )  {^639^^^^^624^654^type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^type.equals (  ) .getConstructor (  )  != null )  )  {^639^^^^^624^654^type.toObjectType (  ) .getConstructor (  )  != null )  )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^639^640^^^^624^654^type.toObjectType (  ) .getConstructor (  )  != null )  )  { return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return objType.toString (  ) ;^640^^^^^625^655^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^640^^^^^625^655^return type.toString (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getReadableJSTypeName [RETURN_TYPE] String   Node n boolean dereference [VARIABLES] ObjectType  dereferenced  objectType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  dereference  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P7_Replace_Invocation]^JSType jsType = n.setJSType (  ) ;^656^^^^^655^666^JSType jsType = n.getJSType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^JSType jsType = n .setJSType ( a )  ;^656^^^^^655^666^JSType jsType = n.getJSType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^ObjectType instance = type.getInstanceType (  ) ;JSType jsType = n.getJSType (  ) ;^656^^^^^655^666^JSType jsType = n.getJSType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType varType = var.getType (  ) ;JSType jsType = n.getJSType (  ) ;^656^^^^^655^666^JSType jsType = n.getJSType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSType type = getJSType ( n ) ;JSType jsType = n.getJSType (  ) ;^656^^^^^655^666^JSType jsType = n.getJSType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^656^^^^^655^666^JSType jsType = n.getJSType (  ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P2_Replace_Operator]^if  ( jsType != null )  {^657^^^^^655^666^if  ( jsType == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^if  ( objType == null )  {^657^^^^^655^666^if  ( jsType == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^if  ( jsType == this )  {^657^^^^^655^666^if  ( jsType == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( info == null )  {^657^^^^^655^666^if  ( jsType == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( objectType != null )  {^657^^^^^655^666^if  ( jsType == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P9_Replace_Statement]^if  ( var.input == null )  {^657^^^^^655^666^if  ( jsType == null )  {^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.isObject (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ; }^657^^^^^655^666^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( type.matchesObjectContext (  )  )  )  {     mismatch ( t, n, msg, type, OBJECT_TYPE ) ;     return false; }^657^^^^^655^666^[Delete]^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return objType;^664^^^^^655^666^return jsType;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return overridingType;^664^^^^^655^666^return jsType;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P14_Delete_Statement]^^662^^^^^655^666^return getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P8_Replace_Mix]^return leftType;^664^^^^^655^666^return jsType;^[CLASS] TypeValidator TypeMismatch  [METHOD] getJSType [RETURN_TYPE] JSType   Node n [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  Node  n  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  long  serialVersionUID  
[P5_Replace_Variable]^return typeId.getNativeType ( typeRegistry ) ;^669^^^^^668^670^return typeRegistry.getNativeType ( typeId ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  JSTypeNative  typeId  long  serialVersionUID  
[P7_Replace_Invocation]^return typeRegistry .getJSType (  )  ;^669^^^^^668^670^return typeRegistry.getNativeType ( typeId ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  JSTypeNative  typeId  long  serialVersionUID  
[P14_Delete_Statement]^^669^^^^^668^670^return typeRegistry.getNativeType ( typeId ) ;^[CLASS] TypeValidator TypeMismatch  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  JSTypeNative  typeId  long  serialVersionUID  
[P1_Replace_Type]^private static final  short  serialVersionUID = 1;^680^^^^^675^685^private static final long serialVersionUID = 1;^[CLASS] TypeMismatch  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  JSTypeNative  typeId  long  serialVersionUID  
[P3_Replace_Literal]^private static final long serialVersionUID = -7;^680^^^^^675^685^private static final long serialVersionUID = 1;^[CLASS] TypeMismatch  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  JSTypeNative  typeId  long  serialVersionUID  
[P8_Replace_Mix]^private static final long serialVersionUID  = null ;^680^^^^^675^685^private static final long serialVersionUID = 1;^[CLASS] TypeMismatch  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  a  allValueTypes  anyObjectType  argType  b  caseType  castType  expectedType  found  hiddenType  indexType  jsType  leftType  newType  objType  overridingType  ownerType  paramType  required  rightType  switchType  type  varType  boolean  DiagnosticType  DUP_VAR_DECLARATION  HIDDEN_PROPERTY_MISMATCH  INTERFACE_METHOD_NOT_IMPLEMENTED  INVALID_CAST  MISSING_EXTENDS_TAG_WARNING  TYPE_MISMATCH_WARNING  DiagnosticGroup  ALL_DIAGNOSTICS  List  mismatches  String  FOUND_REQUIRED  description  msg  prop  propName  propertyName  qualifiedName  sourceName  variableName  JSTypeNative  typeId  long  serialVersionUID  
[P5_Replace_Variable]^super (  b ) ;^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] long  serialVersionUID  JSType  a  b  boolean  
[P5_Replace_Variable]^super ( a ) ;^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] long  serialVersionUID  JSType  a  b  boolean  
[P5_Replace_Variable]^super ( b, a ) ;^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] long  serialVersionUID  JSType  a  b  boolean  
[P14_Delete_Statement]^^688^^^^^687^689^super ( a, b ) ;^[CLASS] TypeMismatch  [METHOD] <init> [RETURN_TYPE] JSType)   JSType a JSType b [VARIABLES] long  serialVersionUID  JSType  a  b  boolean  
