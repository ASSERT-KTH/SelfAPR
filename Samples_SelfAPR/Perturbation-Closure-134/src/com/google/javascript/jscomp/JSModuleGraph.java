[P8_Replace_Mix]^private Map<JSModule, Set<JSModule>> dependencyMap ;^67^^^^^62^72^private Map<JSModule, Set<JSModule>> dependencyMap = Maps.newHashMap (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException   [VARIABLES] 
[P1_Replace_Type]^private static final  short  serialVersionUID = 1;^286^^^^^281^291^private static final long serialVersionUID = 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException   [VARIABLES] 
[P3_Replace_Literal]^private static final long serialVersionUID = 9;^286^^^^^281^291^private static final long serialVersionUID = 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 1L;^286^^^^^281^291^private static final long serialVersionUID = 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException   [VARIABLES] 
[P8_Replace_Mix]^private  JSModule dependentModule;^289^^^^^284^294^private final JSModule dependentModule;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException   [VARIABLES] 
[P8_Replace_Mix]^moduleDepths =  new HashMap<JSModule, Integer> ( null.length ) ;^73^^^^^72^95^moduleDepths = new HashMap<JSModule, Integer> ( modulesInDepOrder.length ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P4_Replace_Constructor]^modulesByDepth = modulesByDepth =  new JSModule> (  )  ;^74^^^^^72^95^modulesByDepth = new ArrayList<List<JSModule>> (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P8_Replace_Mix]^modulesByDepth =  new JSModule> (  )  ;^74^^^^^72^95^modulesByDepth = new ArrayList<List<JSModule>> (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P1_Replace_Type]^modulesByDepth = new  LinkedList <List<JSModule>> (  ) ;^74^^^^^72^95^modulesByDepth = new ArrayList<List<JSModule>> (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P2_Replace_Operator]^if  ( depDepth != null )  {^80^^^^^72^95^if  ( depDepth == null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P8_Replace_Mix]^if  ( depDepth == true )  {^80^^^^^72^95^if  ( depDepth == null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P9_Replace_Statement]^if  ( deps == null )  {^80^^^^^72^95^if  ( depDepth == null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P9_Replace_Statement]^if  ( deps != null )  {^80^^^^^72^95^if  ( depDepth == null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P15_Unwrap_Block]^throw new com.google.javascript.jscomp.JSModuleGraph.ModuleDependenceException(java.lang.String.format("Modules not in dependency order: %s preceded %s", module.getName(), dep.getName()), module, dep);^80^81^82^83^84^72^95^if  ( depDepth == null )  { throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P16_Remove_Block]^^80^81^82^83^84^72^95^if  ( depDepth == null )  { throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %sodules not ", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P4_Replace_Constructor]^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) ,  dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P4_Replace_Constructor]^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) .getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", dependentModule.getName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^throw new ModuleDependenceException ( String.format ( "Modules not in dependentModuleendency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^throw new ModuleDependenceException ( String.format ( "Modules not in moduleendency order: %s preceded %s", dep.getName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P7_Replace_Invocation]^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.removeByName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P7_Replace_Invocation]^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module .getInputs (  )  , dep^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P13_Insert_Block]^if  ( depDepth == null )  {     throw new ModuleDependenceException ( format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ; }^81^^^^^72^95^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^throw new ModuleDependenceException ( String.format ( "", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^throw new ModuleDependenceException ( String.format ( " notodules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P14_Delete_Statement]^^81^82^83^84^85^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^module.getName (  ) , dep.getName (  )  ) , dependentModule, dep ) ;^83^84^^^^72^95^module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P7_Replace_Invocation]^module.removeByName (  ) , dep.getName (  )  ) , module, dep ) ;^83^84^^^^72^95^module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P7_Replace_Invocation]^module .getInputs (  )  , dep^83^84^^^^72^95^module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P14_Delete_Statement]^^83^84^^^^72^95^module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P11_Insert_Donor_Statement]^fileRefs.put ( jsFile.getName (  ) , module ) ;module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^83^84^^^^72^95^module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^module.getName (  ) , module.getName (  )  ) , module, dep ) ;^83^84^^^^72^95^module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P2_Replace_Operator]^if  ( depth != modulesByDepth.size (  )  )  {^90^^^^^72^95^if  ( depth == modulesByDepth.size (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^if  ( depth == modulesByDepth.size() - 6  )  {^90^^^^^72^95^if  ( depth == modulesByDepth.size (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^if  ( modulesByDepth == depth.size (  )  )  {^90^^^^^72^95^if  ( depth == modulesByDepth.size (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P15_Unwrap_Block]^modulesByDepth.add(new java.util.ArrayList<com.google.javascript.jscomp.JSModule>());^90^91^92^^^72^95^if  ( depth == modulesByDepth.size (  )  )  { modulesByDepth.add ( new ArrayList<JSModule> (  )  ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P16_Remove_Block]^^90^91^92^^^72^95^if  ( depth == modulesByDepth.size (  )  )  { modulesByDepth.add ( new ArrayList<JSModule> (  )  ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P1_Replace_Type]^modulesByDepth.add ( new  LinkedHashSet <JSModule> (  )  ) ;^91^^^^^72^95^modulesByDepth.add ( new ArrayList<JSModule> (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P4_Replace_Constructor]^modulesByDepth.add ( modulesByDepth.add (  new JSModule>> (  )   ) ;^91^^^^^72^95^modulesByDepth.add ( new ArrayList<JSModule> (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P7_Replace_Invocation]^modulesByDepth.size ( new ArrayList<JSModule> (  )  ) ;^91^^^^^72^95^modulesByDepth.add ( new ArrayList<JSModule> (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P14_Delete_Statement]^^91^^^^^72^95^modulesByDepth.add ( new ArrayList<JSModule> (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P13_Insert_Block]^if  ( depth ==  ( modulesByDepth.size (  )  )  )  {     modulesByDepth.add ( new JSModule> (  )  ) ; }^91^^^^^72^95^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P2_Replace_Operator]^depth = Math.max ( depth, depDepth  !=  1 ) ;^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^depth = Math.max ( depth, depDepth + depth ) ;^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^depth = Math.max (  depDepth + 1 ) ;^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^depth = Math.max ( depth + 1 ) ;^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^depth = Math.max ( depDepth, depth + 1 ) ;^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P7_Replace_Invocation]^depth = Math .min ( depth , depth )  ;^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P8_Replace_Mix]^depth = Math.max ( depth, depDepth + 4 ) ;^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^throw new ModuleDependenceException ( String.format ( "er: %odules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P1_Replace_Type]^short  depth = 0;^77^^^^^72^95^int depth = 0;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^int depth = 3;^77^^^^^72^95^int depth = 0;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^Integer moduleDepth = moduleDepths.get ( dep ) ;^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^Integer moduleDepthsDepth = dep.get ( dep ) ;^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P11_Insert_Donor_Statement]^JSModule m = modulesAtDepth.get ( i ) ;Integer depDepth = moduleDepths.get ( dep ) ;^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P11_Insert_Donor_Statement]^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;Integer depDepth = moduleDepths.get ( dep ) ;^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P11_Insert_Donor_Statement]^int m2Depth = getDepth ( m2 ) ;Integer depDepth = moduleDepths.get ( dep ) ;^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P11_Insert_Donor_Statement]^int m1Depth = getDepth ( m1 ) ;Integer depDepth = moduleDepths.get ( dep ) ;^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P12_Insert_Condition]^if  ( depth == modulesByDepth.size (  )  )  { Integer depDepth = moduleDepths.get ( dep ) ; }^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^throw new ModuleDependenceException ( String.format ( "Mo", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^for  ( JSModule dep : dependentModule.getDependencies (  )  )  {^78^^^^^72^95^for  ( JSModule dep : module.getDependencies (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P7_Replace_Invocation]^for  ( JSModule dep : module.removeByName (  )  )  {^78^^^^^72^95^for  ( JSModule dep : module.getDependencies (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P7_Replace_Invocation]^for  ( JSModule dep : module .getName (  )   )  {^78^^^^^72^95^for  ( JSModule dep : module.getDependencies (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P8_Replace_Mix]^for  ( JSModule dep : dependentModule.removeByName (  )  )  {^78^^^^^72^95^for  ( JSModule dep : module.getDependencies (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P14_Delete_Statement]^^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P11_Insert_Donor_Statement]^return moduleDepths.keySet (  ) ;Integer depDepth = moduleDepths.get ( dep ) ;^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P11_Insert_Donor_Statement]^return moduleDepths.size (  ) ;Integer depDepth = moduleDepths.get ( dep ) ;^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P11_Insert_Donor_Statement]^return moduleDepths.get ( module ) ;Integer depDepth = moduleDepths.get ( dep ) ;^79^^^^^72^95^Integer depDepth = moduleDepths.get ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^throw new ModuleDependenceException ( String.format ( "in depen", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P8_Replace_Mix]^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", dependentModule.removeByName (  ) , dep.getName (  )  ) , module, dep ) ;^81^82^83^84^^72^95^throw new ModuleDependenceException ( String.format ( "Modules not in dependency order: %s preceded %s", module.getName (  ) , dep.getName (  )  ) , module, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P2_Replace_Operator]^depth = Math.max ( depth, depDepth  <  1 ) ;^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^depth = Math.max ( depth, depDepth  ) ;^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P14_Delete_Statement]^^86^^^^^72^95^depth = Math.max ( depth, depDepth + 1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^moduleDepths.put ( dependentModule, depth ) ;^89^^^^^72^95^moduleDepths.put ( module, depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^moduleDepths.put (  depth ) ;^89^^^^^72^95^moduleDepths.put ( module, depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^moduleDepths.put ( module ) ;^89^^^^^72^95^moduleDepths.put ( module, depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^moduleDepths.put ( depth, module ) ;^89^^^^^72^95^moduleDepths.put ( module, depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P14_Delete_Statement]^^89^^^^^72^95^moduleDepths.put ( module, depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P11_Insert_Donor_Statement]^return moduleDepths.get ( module ) ;moduleDepths.put ( module, depth ) ;^89^^^^^72^95^moduleDepths.put ( module, depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P3_Replace_Literal]^if  ( depth == modulesByDepth.size() + 0  )  {^90^^^^^72^95^if  ( depth == modulesByDepth.size (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^modulesByDepth.get ( depth ) .add ( dependentModule ) ;^93^^^^^72^95^modulesByDepth.get ( depth ) .add ( module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P5_Replace_Variable]^modulesByDepth.get ( module ) .add ( depth ) ;^93^^^^^72^95^modulesByDepth.get ( depth ) .add ( module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P7_Replace_Invocation]^modulesByDepth.add ( depth ) .add ( module ) ;^93^^^^^72^95^modulesByDepth.get ( depth ) .add ( module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P8_Replace_Mix]^modulesByDepth.add ( depth ) .add ( dependentModule ) ;^93^^^^^72^95^modulesByDepth.get ( depth ) .add ( module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P14_Delete_Statement]^^93^^^^^72^95^modulesByDepth.get ( depth ) .add ( module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule[])   JSModule[] modulesInDepOrder [VARIABLES] Integer  depDepth  boolean  JSModule[]  modulesInDepOrder  JSModule  dep  dependentModule  module  List  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  
[P14_Delete_Statement]^^293^294^^^^291^296^super ( message ) ; this.module = module;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  String  message  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^this.module = dependentModule;^294^^^^^291^296^this.module = module;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  String  message  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.dependentModule = dependentModule;this.module = module;^294^^^^^291^296^this.module = module;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  String  message  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^this.dependentModule = module;^295^^^^^291^296^this.dependentModule = dependentModule;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  String  message  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.module = module;this.dependentModule = dependentModule;^295^^^^^291^296^this.dependentModule = dependentModule;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  String  message  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^return moduleDepths.size (  ) ;^101^^^^^100^102^return moduleDepths.keySet (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getAllModules [RETURN_TYPE] Iterable   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^return moduleDepths .get ( module )  ;^101^^^^^100^102^return moduleDepths.keySet (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getAllModules [RETURN_TYPE] Iterable   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^101^^^^^100^102^return moduleDepths.keySet (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getAllModules [RETURN_TYPE] Iterable   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P3_Replace_Literal]^return moduleDepths.size() + 2 ;^108^^^^^107^109^return moduleDepths.size (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getModuleCount [RETURN_TYPE] int   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^return moduleDepths.keySet (  ) ;^108^^^^^107^109^return moduleDepths.size (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getModuleCount [RETURN_TYPE] int   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P12_Insert_Condition]^if  ( depth == modulesByDepth.size (  )  )  { return moduleDepths.size (  ) ; }^108^^^^^107^109^return moduleDepths.size (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getModuleCount [RETURN_TYPE] int   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P3_Replace_Literal]^return moduleDepths.size() + 4 ;^108^^^^^107^109^return moduleDepths.size (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getModuleCount [RETURN_TYPE] int   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^108^^^^^107^109^return moduleDepths.size (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getModuleCount [RETURN_TYPE] int   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P3_Replace_Literal]^return Iterables.getOnlyElement ( modulesByDepth.get ( 2 )  ) ;^115^^^^^114^116^return Iterables.getOnlyElement ( modulesByDepth.get ( 0 )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getRootModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^return Iterables.addOnlyElement ( modulesByDepth.get ( 0 )  ) ;^115^^^^^114^116^return Iterables.getOnlyElement ( modulesByDepth.get ( 0 )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getRootModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^return Iterables.addOnlyElement ( modulesByDepth.get ( 1 )  ) ;^115^^^^^114^116^return Iterables.getOnlyElement ( modulesByDepth.get ( 0 )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getRootModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P3_Replace_Literal]^return Iterables.getOnlyElement ( modulesByDepth.get ( 7 )  ) ;^115^^^^^114^116^return Iterables.getOnlyElement ( modulesByDepth.get ( 0 )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getRootModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^115^^^^^114^116^return Iterables.getOnlyElement ( modulesByDepth.get ( 0 )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getRootModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P3_Replace_Literal]^return Iterables.getOnlyElement ( modulesByDepth.get ( -9 )  ) ;^115^^^^^114^116^return Iterables.getOnlyElement ( modulesByDepth.get ( 0 )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getRootModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return moduleDepthsDepths.get ( module ) ;^125^^^^^124^126^return moduleDepths.get ( module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDepth [RETURN_TYPE] int   JSModule module [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return module.get ( moduleDepths ) ;^125^^^^^124^126^return moduleDepths.get ( module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDepth [RETURN_TYPE] int   JSModule module [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^return dependentModuleDepths.get ( module ) ;^125^^^^^124^126^return moduleDepths.get ( module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDepth [RETURN_TYPE] int   JSModule module [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^125^^^^^124^126^return moduleDepths.get ( module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDepth [RETURN_TYPE] int   JSModule module [VARIABLES] JSModule  dep  dependentModule  module  List  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^Set<JSModule> deps = dependencyMap.get ( module ) ;^133^^^^^132^140^Set<JSModule> deps = dependencyMap.get ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^Set<JSModule> deps = src.get ( dependencyMap ) ;^133^^^^^132^140^Set<JSModule> deps = dependencyMap.get ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSModule dep = iter.next (  ) ;Set<JSModule> deps = dependencyMap.get ( src ) ;^133^^^^^132^140^Set<JSModule> deps = dependencyMap.get ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Set<JSModule> deps = dependencyMap.get ( m ) ;Set<JSModule> deps = dependencyMap.get ( src ) ;^133^^^^^132^140^Set<JSModule> deps = dependencyMap.get ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^Set<JSModule> deps = dependencyMap.get ( m ) ;^133^^^^^132^140^Set<JSModule> deps = dependencyMap.get ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^133^^^^^132^140^Set<JSModule> deps = dependencyMap.get ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P2_Replace_Operator]^if  ( deps != null )  {^134^^^^^132^140^if  ( deps == null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^if  ( deps == this )  {^134^^^^^132^140^if  ( deps == null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P9_Replace_Statement]^if  ( m1 == m2 )  {^134^^^^^132^140^if  ( deps == null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P9_Replace_Statement]^if  ( depDepth == null )  {^134^^^^^132^140^if  ( deps == null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P15_Unwrap_Block]^deps = getTransitiveDepsDeepestFirst(src); dependencyMap.put(src, deps);^134^135^136^137^^132^140^if  ( deps == null )  { deps = getTransitiveDepsDeepestFirst ( src ) ; dependencyMap.put ( src, deps ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P16_Remove_Block]^^134^135^136^137^^132^140^if  ( deps == null )  { deps = getTransitiveDepsDeepestFirst ( src ) ; dependencyMap.put ( src, deps ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^deps = getTransitiveDepsDeepestFirst ( module ) ;^135^^^^^132^140^deps = getTransitiveDepsDeepestFirst ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^deps = getDepth ( src ) ;^135^^^^^132^140^deps = getTransitiveDepsDeepestFirst ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^135^136^^^^132^140^deps = getTransitiveDepsDeepestFirst ( src ) ; dependencyMap.put ( src, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dependencyMap.put ( m, deps ) ;^136^^^^^132^140^dependencyMap.put ( src, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dependencyMap.put (  deps ) ;^136^^^^^132^140^dependencyMap.put ( src, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dependencyMap.put ( src ) ;^136^^^^^132^140^dependencyMap.put ( src, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dependencyMap.put ( deps, src ) ;^136^^^^^132^140^dependencyMap.put ( src, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^dependencyMap.put ( src, 4 ) ;^136^^^^^132^140^dependencyMap.put ( src, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^136^^^^^132^140^dependencyMap.put ( src, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^dependencyMap.put ( m, deps ) ;dependencyMap.put ( src, deps ) ;^136^^^^^132^140^dependencyMap.put ( src, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^deps = getTransitiveDepsDeepestFirst ( m ) ;^135^^^^^132^140^deps = getTransitiveDepsDeepestFirst ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^135^^^^^132^140^deps = getTransitiveDepsDeepestFirst ( src ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dependencyMap.put ( module, deps ) ;^136^^^^^132^140^dependencyMap.put ( src, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return deps.contains ( module ) ;^139^^^^^132^140^return deps.contains ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return m.contains ( deps ) ;^139^^^^^132^140^return deps.contains ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^return deps.contains ( src ) ;^139^^^^^132^140^return deps.contains ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^139^^^^^132^140^return deps.contains ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] dependsOn [RETURN_TYPE] boolean   JSModule src JSModule m [VARIABLES] JSModule  dep  dependentModule  m  module  src  List  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P1_Replace_Type]^short  m1Depth = getDepth ( m1 ) ;^152^^^^^151^168^int m1Depth = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^int m2Depth = getDepth ( m1 ) ;^152^^^^^151^168^int m1Depth = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^int m1Depth = JSModuleGraph ( m1 ) ;^152^^^^^151^168^int m1Depth = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^int srcDepth = getDepth ( m1 ) ;^152^^^^^151^168^int m1Depth = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^int d2 = getDepth ( m2 ) ;int m1Depth = getDepth ( m1 ) ;^152^^^^^151^168^int m1Depth = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^int m2Depth = getDepth ( m2 ) ;int m1Depth = getDepth ( m1 ) ;^152^^^^^151^168^int m1Depth = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^Integer depDepth = moduleDepths.get ( dep ) ;int m1Depth = getDepth ( m1 ) ;^152^^^^^151^168^int m1Depth = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^int d1 = getDepth ( m1 ) ;int m1Depth = getDepth ( m1 ) ;^152^^^^^151^168^int m1Depth = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P14_Delete_Statement]^^152^153^^^^151^168^int m1Depth = getDepth ( m1 ) ; int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P1_Replace_Type]^short  m2Depth = getDepth ( m2 ) ;^153^^^^^151^168^int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^int m2Depth = JSModuleGraph ( m2 ) ;^153^^^^^151^168^int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^int srcDepth = getDepth ( m2 ) ;^153^^^^^151^168^int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^int d2 = getDepth ( m2 ) ;int m2Depth = getDepth ( m2 ) ;^153^^^^^151^168^int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^Integer depDepth = moduleDepths.get ( dep ) ;int m2Depth = getDepth ( m2 ) ;^153^^^^^151^168^int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^int m1Depth = getDepth ( m1 ) ;int m2Depth = getDepth ( m2 ) ;^153^^^^^151^168^int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^int d1 = getDepth ( m1 ) ;int m2Depth = getDepth ( m2 ) ;^153^^^^^151^168^int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^int m1Depth = getDepth ( m2 ) ;^153^^^^^151^168^int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P14_Delete_Statement]^^153^^^^^151^168^int m2Depth = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^if  ( dependsOn ( m1, m )  || dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( src, m )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( module1, m )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( m1, m )  && dependsOn ( src, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn (  m )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( m1 )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( m1, m )  && dependsOn (  m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( m, m1 )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( m11, m )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( m2, m )  && dependsOn ( m1, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P6_Replace_Expression]^if  ( dependsOn ( m1, m )  ) {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P6_Replace_Expression]^if  (  dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^if  ( getDeepestCommonDependency ( m1, m )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P15_Unwrap_Block]^return m;^162^163^164^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  { return m; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P16_Remove_Block]^^162^163^164^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  { return m; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P13_Insert_Block]^if  ( dependsOn ( m1, m2 )  )  {     return m2; }^162^^^^^151^168^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^return src;^163^^^^^151^168^return m;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^return m2;^163^^^^^151^168^return m;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P1_Replace_Type]^for  (  long  depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^for  ( int depth = Math.min ( m1Depth, m2Depth )   >=  1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth > 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^for  ( int depth = Math.min ( m1Depth, m2Depth )   <=  1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int depth = Math.min ( mm2DepthDepth, m2Depth )  - m2Depth; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= m2Depth; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int depth = Math.min ( m1Depth, m2Depth )  ; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= i; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m2Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m1Depth, m1Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int m2Depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( m2Depthnt depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( moduleDepth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m21Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min (  m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m1Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m1Depth2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m1DepthDepth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int m1Depth = Math.min ( depth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( m2Depthnt depth = Math.min ( m1Depth, i )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( depthnt i = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m2DepthDepth, m1 )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m11Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m2Depth, m1Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^for  ( int depth = Math.max ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( src1, m )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P1_Replace_Type]^for  (  short  i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^for  ( int i = modulesAtDepth.size (  )   >=  1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^for  ( int i = modulesAtDepth.size (  )  - 1; i > 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size (  )  - depth; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size (  )  - 1; i >= -8; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size() + 1  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int i = null.size (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( m2Depthnt i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int i = moduleodulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^for  ( int i = modulesAtDepth.get (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^for  ( int i = 3.size (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( m21, m )  && dependsOn ( m, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^if  ( getDeepestCommonDependency ( module1, m )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^JSModule m = i.get ( modulesAtDepth ) ;^161^^^^^151^168^JSModule m = modulesAtDepth.get ( i ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^JSModule m = modulesAtDepth.get ( m2Depth ) ;^161^^^^^151^168^JSModule m = modulesAtDepth.get ( i ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^JSModule dep = iter.next (  ) ;JSModule m = modulesAtDepth.get ( i ) ;^161^^^^^151^168^JSModule m = modulesAtDepth.get ( i ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;JSModule m = modulesAtDepth.get ( i ) ;^161^^^^^151^168^JSModule m = modulesAtDepth.get ( i ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^Integer depDepth = moduleDepths.get ( dep ) ;JSModule m = modulesAtDepth.get ( i ) ;^161^^^^^151^168^JSModule m = modulesAtDepth.get ( i ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P12_Insert_Condition]^if  ( depth == modulesByDepth.size (  )  )  { JSModule m = modulesAtDepth.get ( i ) ; }^161^^^^^151^168^JSModule m = modulesAtDepth.get ( i ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P14_Delete_Statement]^^161^^^^^151^168^JSModule m = modulesAtDepth.get ( i ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^List<JSModule> modulesAtDepth = modulesByDepth.get ( m2Depth ) ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^List<JSModule> modulesAtDepth = depth.get ( modulesByDepth ) ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^List<JSModule> modulesAtDepth = modulesByDepth.add ( depth ) ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^List<JSModule> modulesAtDepth = modulesByDepth .put ( src , depth )  ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^JSModule m = modulesAtDepth.get ( i ) ;List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P11_Insert_Donor_Statement]^Integer depDepth = moduleDepths.get ( dep ) ;List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P1_Replace_Type]^for  (  long  i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^for  ( int i = modulesAtDepth.size (  )   >  1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size (  )  - m1Depth; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size() + 5  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^JSModule m = modulesAtDepth .get ( m )  ;^161^^^^^151^168^JSModule m = modulesAtDepth.get ( i ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^List<JSModule> modulesAtDepth = modulesByDepth .put ( dependentModule , m1Depth )  ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P14_Delete_Statement]^^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size() - 5  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P14_Delete_Statement]^^160^161^162^163^164^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  { JSModule m = modulesAtDepth.get ( i ) ; if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  { return m; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^if  ( getDeepestCommonDependency ( src1, m )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^if  ( getDeepestCommonDependency ( m1, m )  && dependsOn ( module, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^for  ( int i = modulesAtDepth.size (  )   ||  1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size (  )  ; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size (  )  - 1; i >= i; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size() + 3  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int i = srcodulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( mnt i = iodulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^for  ( int i = m2odulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^if  ( dependsOn ( m1, m )  && dependsOn ( module, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^return module;^163^^^^^151^168^return m;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^for  ( int depth = Math.min ( m1Depth, m2Depth )   &  1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^for  ( int depth = Math .max ( m2Depth , m1Depth )   - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^for  ( int depth = Math .max ( i , i )   - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^List<JSModule> modulesAtDepth = modulesByDepth.add ( m2Depth ) ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^for  ( int i = modulesAtDepth.size (  )   ^  1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P3_Replace_Literal]^for  ( int i = modulesAtDepth.size() + 2  - 1; i >= 0; i-- )  {^160^^^^^151^168^for  ( int i = modulesAtDepth.size (  )  - 1; i >= 0; i-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( i, m2Depth )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^for  ( int depth = Math.min ( m1Depth, i )  - 1; depth >= 0; depth-- )  {^156^^^^^151^168^for  ( int depth = Math.min ( m1Depth, m2Depth )  - 1; depth >= 0; depth-- )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P5_Replace_Variable]^List<JSModule> modulesAtDepth = 2.get ( depth ) ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P7_Replace_Invocation]^List<JSModule> modulesAtDepth = modulesByDepth .put ( src , m2Depth )  ;^157^^^^^151^168^List<JSModule> modulesAtDepth = modulesByDepth.get ( depth ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^if  ( dependsOn ( module, m )  && dependsOn ( m2, m )  )  {^162^^^^^151^168^if  ( dependsOn ( m1, m )  && dependsOn ( m2, m )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P8_Replace_Mix]^return true;^167^^^^^151^168^return null;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependency [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  depth  i  m1Depth  m2Depth  
[P2_Replace_Operator]^if  ( m2 == m1 && dependsOn ( m2, m1 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P2_Replace_Operator]^if  ( m2 <= m1 || dependsOn ( m2, m1 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( src == m1 || dependsOn ( m2, m1 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( m2 == module || dependsOn ( m2, m1 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( m2 == m1 || dependsOn (  m1 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( m2 == m1 || dependsOn ( m2 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( m1 == m2 || dependsOn ( m2, m1 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P6_Replace_Expression]^if  ( m2 == m1 ) {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P6_Replace_Expression]^if  (  dependsOn ( m2, m1 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( m2 == m1 || getDeepestCommonDependency ( m2, m1 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^if  ( m2 == src ) {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P15_Unwrap_Block]^return m1;^181^182^183^184^185^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  { return m1; } else if  ( dependsOn ( m1, m2 )  )  { return m2; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P16_Remove_Block]^^181^182^183^184^185^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  { return m1; } else if  ( dependsOn ( m1, m2 )  )  { return m2; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( dependsOn ( src, m2 )  )  {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( dependsOn (  m2 )  )  {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( dependsOn ( m1 )  )  {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( dependsOn ( m2, m1 )  )  {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P6_Replace_Expression]^} else {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^} else if  ( getDeepestCommonDependency ( m1, m2 )  )  {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P15_Unwrap_Block]^return m2;^183^184^185^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  { return m2; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P16_Remove_Block]^^183^184^185^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  { return m2; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P13_Insert_Block]^if  ( deps != null )  {     return deps; }^183^^^^^179^188^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P13_Insert_Block]^if  ( m1 == m2 )  {     return 0; }^183^^^^^179^188^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( dependsOn ( m1, m )  )  &&  ( dependsOn ( m2, m )  )  )  {     return m; }^183^^^^^179^188^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return src;^184^^^^^179^188^return m2;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return m1;^184^^^^^179^188^return m2;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( dependsOn ( module, m2 )  )  {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( dependsOn ( m1, module )  )  {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return m2;^182^^^^^179^188^return m1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^return src;^182^^^^^179^188^return m1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^}  if  ( getDeepestCommonDependency ( m1, src )  )  {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^return module;^182^^^^^179^188^return m1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return module;^184^^^^^179^188^return m2;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( m2 == src || dependsOn ( m2, m1 )  )  {^181^^^^^179^188^if  ( m2 == m1 || dependsOn ( m2, m1 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^} else if  ( dependsOn ( m1, src )  )  {^183^^^^^179^188^} else if  ( dependsOn ( m1, m2 )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return getDeepestCommonDependency ( src, m2 ) ;^187^^^^^179^188^return getDeepestCommonDependency ( m1, m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return getDeepestCommonDependency ( m1, module ) ;^187^^^^^179^188^return getDeepestCommonDependency ( m1, m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return getDeepestCommonDependency (  m2 ) ;^187^^^^^179^188^return getDeepestCommonDependency ( m1, m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return getDeepestCommonDependency ( m1 ) ;^187^^^^^179^188^return getDeepestCommonDependency ( m1, m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return getDeepestCommonDependency ( m2, m1 ) ;^187^^^^^179^188^return getDeepestCommonDependency ( m1, m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^return getDeepestCommonDependencyInclusive ( m1, m2 ) ;^187^^^^^179^188^return getDeepestCommonDependency ( m1, m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return getDeepestCommonDependency ( m1, src ) ;^187^^^^^179^188^return getDeepestCommonDependency ( m1, m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^187^^^^^179^188^return getDeepestCommonDependency ( m1, m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^Iterator<JSModule> iter = modules.contains (  ) ;^193^^^^^191^199^Iterator<JSModule> iter = modules.iterator (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^193^^^^^191^199^Iterator<JSModule> iter = modules.iterator (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^JSModule dep = this.next (  ) ;^194^^^^^191^199^JSModule dep = iter.next (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Set<JSModule> deps = dependencyMap.get ( src ) ;JSModule dep = iter.next (  ) ;^194^^^^^191^199^JSModule dep = iter.next (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSModule m = modulesAtDepth.get ( i ) ;JSModule dep = iter.next (  ) ;^194^^^^^191^199^JSModule dep = iter.next (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Set<JSModule> deps = dependencyMap.get ( m ) ;JSModule dep = iter.next (  ) ;^194^^^^^191^199^JSModule dep = iter.next (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^JSModule dep = null.next (  ) ;^194^^^^^191^199^JSModule dep = iter.next (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^194^^^^^191^199^JSModule dep = iter.next (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^while  ( this.hasNext (  )  )  {^195^^^^^191^199^while  ( iter.hasNext (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^while  ( iter .next (  )   )  {^195^^^^^191^199^while  ( iter.hasNext (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dep = getDeepestCommonDependencyInclusive ( module, iter.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dep = getDeepestCommonDependencyInclusive (  iter.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dep = getDeepestCommonDependencyInclusive ( dep.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dep = getDeepestCommonDependencyInclusive ( iter, dep.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^dep = getDeepestCommonDependency ( dep, iter.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^dep = getDeepestCommonDependencyInclusive ( dep, iter .hasNext (  )   ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^dep =  getDeepestCommonDependencyInclusive ( m2, iter.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^dep = getDeepestCommonDependency ( module, iter.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSModule depModule = getDeepestCommonDependencyInclusive ( refModules ) ;dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^while  ( iter.hasNext (  )  )  { dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return getDeepestCommonDependency ( m1, m2 ) ;dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^dep = getDeepestCommonDependencyInclusive ( dep, 3 .hasNext (  )   ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^dep =  getDeepestCommonDependencyInclusive ( src, iter.next (  )  ) ;^196^^^^^191^199^dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^195^196^^^^191^199^while  ( iter.hasNext (  )  )  { dep = getDeepestCommonDependencyInclusive ( dep, iter.next (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return module;^198^^^^^191^199^return dep;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^return m2;^198^^^^^191^199^return dep;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDeepestCommonDependencyInclusive [RETURN_TYPE] JSModule   JSModule> modules [VARIABLES] boolean  Iterator  iter  JSModule  dep  dependentModule  m  m1  m2  module  src  Collection  modules  List  modulesAtDepth  modulesByDepth  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^Set<JSModule> deps = dependencyMap.get ( module ) ;^210^^^^^209^218^Set<JSModule> deps = dependencyMap.get ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^Set<JSModule> deps = m.get ( dependencyMap ) ;^210^^^^^209^218^Set<JSModule> deps = dependencyMap.get ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^Set<JSModule> deps = dependencyMap .put ( src , 3 )  ;^210^^^^^209^218^Set<JSModule> deps = dependencyMap.get ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^JSModule dep = iter.next (  ) ;Set<JSModule> deps = dependencyMap.get ( m ) ;^210^^^^^209^218^Set<JSModule> deps = dependencyMap.get ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Set<JSModule> deps = dependencyMap.get ( src ) ;Set<JSModule> deps = dependencyMap.get ( m ) ;^210^^^^^209^218^Set<JSModule> deps = dependencyMap.get ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^Set<JSModule> deps = dependencyMap.get ( m2 ) ;^210^^^^^209^218^Set<JSModule> deps = dependencyMap.get ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^210^^^^^209^218^Set<JSModule> deps = dependencyMap.get ( m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P2_Replace_Operator]^if  ( deps == null )  {^211^^^^^209^218^if  ( deps != null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^if  ( deps != true )  {^211^^^^^209^218^if  ( deps != null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P9_Replace_Statement]^if  ( depDepth == null )  {^211^^^^^209^218^if  ( deps != null )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P15_Unwrap_Block]^return deps;^211^212^213^^^209^218^if  ( deps != null )  { return deps; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P16_Remove_Block]^^211^212^213^^^209^218^if  ( deps != null )  { return deps; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P13_Insert_Block]^if  ( dependsOn ( m1, m2 )  )  {     return m2; }^211^^^^^209^218^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P13_Insert_Block]^if  ( m1 == m2 )  {     return 0; }^211^^^^^209^218^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^deps  =  deps ;^214^^^^^209^218^deps = new TreeSet<JSModule> ( new InverseDepthComparator (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P1_Replace_Type]^deps = new  List <JSModule> ( new InverseDepthComparator (  )  ) ;^214^^^^^209^218^deps = new TreeSet<JSModule> ( new InverseDepthComparator (  )  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^addDeps (  m ) ;^215^^^^^209^218^addDeps ( deps, m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^addDeps ( deps ) ;^215^^^^^209^218^addDeps ( deps, m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^addDeps ( m, deps ) ;^215^^^^^209^218^addDeps ( deps, m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^dependsOn ( deps, m ) ;^215^^^^^209^218^addDeps ( deps, m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^215^^^^^209^218^addDeps ( deps, m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^addDeps ( deps, dep ) ;addDeps ( deps, m ) ;^215^^^^^209^218^addDeps ( deps, m ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dependencyMap.put ( m2, deps ) ;^216^^^^^209^218^dependencyMap.put ( m, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dependencyMap.put (  deps ) ;^216^^^^^209^218^dependencyMap.put ( m, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dependencyMap.put ( m ) ;^216^^^^^209^218^dependencyMap.put ( m, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^dependencyMap.put ( deps, m ) ;^216^^^^^209^218^dependencyMap.put ( m, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^216^217^^^^209^218^dependencyMap.put ( m, deps ) ; return deps;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^dependencyMap.put ( src, deps ) ;dependencyMap.put ( m, deps ) ;^216^^^^^209^218^dependencyMap.put ( m, deps ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getTransitiveDepsDeepestFirst [RETURN_TYPE] Set   JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^for  ( JSModule dep : src.getDependencies (  )  )  {^224^^^^^223^228^for  ( JSModule dep : m.getDependencies (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^for  ( JSModule dep : m.removeByName (  )  )  {^224^^^^^223^228^for  ( JSModule dep : m.getDependencies (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^for  ( JSModule dep : m2.getDependencies (  )  )  {^224^^^^^223^228^for  ( JSModule dep : m.getDependencies (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^224^225^226^227^^223^228^for  ( JSModule dep : m.getDependencies (  )  )  { deps.add ( dep ) ; addDeps ( deps, dep ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^deps.add ( src ) ;^225^^^^^223^228^deps.add ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^225^226^^^^223^228^deps.add ( dep ) ; addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^addDeps ( deps, dep ) ;deps.add ( dep ) ;^225^^^^^223^228^deps.add ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^depModule.add ( file ) ;deps.add ( dep ) ;^225^^^^^223^228^deps.add ( dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^addDeps ( null, dep ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^addDeps ( modules, dep ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^addDeps (  dep ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^addDeps ( deps ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^addDeps ( dep, deps ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^addDeps ( depss, dep ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^dependsOn ( deps, dep ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^dependsOn ( modules, dep ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^deps.add ( dep ) ;addDeps ( deps, dep ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^addDeps ( deps, m ) ;addDeps ( deps, dep ) ;^226^^^^^223^228^addDeps ( deps, dep ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] addDeps [RETURN_TYPE] void   JSModule> deps JSModule m [VARIABLES] JSModule  dep  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  Set  deps  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^239^^^^^238^261^Multimap<String, JSModule> fileRefs = LinkedHashMultimap.create (  ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^for  ( JSModule module : 2.keySet (  )  )  {^240^^^^^238^261^for  ( JSModule module : moduleDepths.keySet (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^for  ( JSModule module : moduleDepths.size (  )  )  {^240^^^^^238^261^for  ( JSModule module : moduleDepths.keySet (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^for  ( JSModule module : moduleDepths .get ( dependentModule )   )  {^240^^^^^238^261^for  ( JSModule module : moduleDepths.keySet (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^for  ( JSModule module : moduleDepths .get ( depModule )   )  {^240^^^^^238^261^for  ( JSModule module : moduleDepths.keySet (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^240^241^242^243^^238^261^for  ( JSModule module : moduleDepths.keySet (  )  )  { for  ( CompilerInput jsFile : module.getInputs (  )  )  { fileRefs.put ( jsFile.getName (  ) , module ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^for  ( CompilerInput jsFile : module.removeByName (  )  )  {^241^^^^^238^261^for  ( CompilerInput jsFile : module.getInputs (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^for  ( CompilerInput jsFile : src.getInputs (  )  )  {^241^^^^^238^261^for  ( CompilerInput jsFile : module.getInputs (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^241^242^243^^^238^261^for  ( CompilerInput jsFile : module.getInputs (  )  )  { fileRefs.put ( jsFile.getName (  ) , module ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^fileRefs.put ( file.getName (  ) , module ) ;^242^^^^^238^261^fileRefs.put ( jsFile.getName (  ) , module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^fileRefs.put ( jsFile.getName (  ) , m1 ) ;^242^^^^^238^261^fileRefs.put ( jsFile.getName (  ) , module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^fileRefs.put ( jsFile.getName (  )  ) ;^242^^^^^238^261^fileRefs.put ( jsFile.getName (  ) , module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^fileRefs.put ( module.getName (  ) , jsFile ) ;^242^^^^^238^261^fileRefs.put ( jsFile.getName (  ) , module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^242^^^^^238^261^fileRefs.put ( jsFile.getName (  ) , module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^module.getName (  ) , dep.getName (  )  ) , module, dep ) ;fileRefs.put ( jsFile.getName (  ) , module ) ;^242^^^^^238^261^fileRefs.put ( jsFile.getName (  ) , module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^fileRefs.put ( jsFile .getInputs (  )  , module ) ;^242^^^^^238^261^fileRefs.put ( jsFile.getName (  ) , module ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P2_Replace_Operator]^if  ( refModules.size (  )  == 1 )  {^248^^^^^238^261^if  ( refModules.size (  )  > 1 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P3_Replace_Literal]^if  ( refModules.size (  )  > 5 )  {^248^^^^^238^261^if  ( refModules.size (  )  > 1 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P3_Replace_Literal]^if  ( refModules.size() - 3  > 1 )  {^248^^^^^238^261^if  ( refModules.size (  )  > 1 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P6_Replace_Expression]^if  ( module != depModule )  {^248^^^^^238^261^if  ( refModules.size (  )  > 1 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( refModules.contains (  )  > 1 )  {^248^^^^^238^261^if  ( refModules.size (  )  > 1 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^if  ( refModules.size (  )  > 0  )  {^248^^^^^238^261^if  ( refModules.size (  )  > 1 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P2_Replace_Operator]^if  ( module == depModule )  {^252^^^^^238^261^if  ( module != depModule )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( src != depModule )  {^252^^^^^238^261^if  ( module != depModule )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( module != src )  {^252^^^^^238^261^if  ( module != depModule )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( depModule != module )  {^252^^^^^238^261^if  ( module != depModule )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^if  ( module != m2 )  {^252^^^^^238^261^if  ( module != depModule )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P15_Unwrap_Block]^module.removeByName(path);^252^253^254^^^238^261^if  ( module != depModule )  { module.removeByName ( path ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P16_Remove_Block]^^252^253^254^^^238^261^if  ( module != depModule )  { module.removeByName ( path ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^module .getName (  )  ;^253^^^^^238^261^module.removeByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^253^^^^^238^261^module.removeByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !refModules.contains ( m2 )  )  {^256^^^^^238^261^if  ( !refModules.contains ( depModule )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P15_Unwrap_Block]^depModule.add(file);^256^257^258^^^238^261^if  ( !refModules.contains ( depModule )  )  { depModule.add ( file ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P16_Remove_Block]^^256^257^258^^^238^261^if  ( !refModules.contains ( depModule )  )  { depModule.add ( file ) ; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^depModule.add ( jsFile ) ;^257^^^^^238^261^depModule.add ( file ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^257^^^^^238^261^depModule.add ( file ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P11_Insert_Donor_Statement]^deps.add ( dep ) ;depModule.add ( file ) ;^257^^^^^238^261^depModule.add ( file ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^JSModule depModule = getDeepestCommonDependencyInclusive ( null ) ;^249^^^^^238^261^JSModule depModule = getDeepestCommonDependencyInclusive ( refModules ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^JSModule depModule = getDepth ( refModules ) ;^249^^^^^238^261^JSModule depModule = getDeepestCommonDependencyInclusive ( refModules ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^CompilerInput file = path.iterator (  ) .next (  ) .getByName ( refModules ) ;^250^^^^^238^261^CompilerInput file = refModules.iterator (  ) .next (  ) .getByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^CompilerInput file = refModules.iterator (  ) .getByName (  ) .getByName ( path ) ;^250^^^^^238^261^CompilerInput file = refModules.iterator (  ) .next (  ) .getByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^CompilerInput file = refModules.contains (  ) .next (  ) .getByName ( path ) ;^250^^^^^238^261^CompilerInput file = refModules.iterator (  ) .next (  ) .getByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^CompilerInput file = refModules .size (  )  .next (  ) .getByName ( path ) ;^250^^^^^238^261^CompilerInput file = refModules.iterator (  ) .next (  ) .getByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^JSModule depModule = getDeepestCommonDependencyInclusive ( 3 ) ;^249^^^^^238^261^JSModule depModule = getDeepestCommonDependencyInclusive ( refModules ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^249^^^^^238^261^JSModule depModule = getDeepestCommonDependencyInclusive ( refModules ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^CompilerInput file = refModules.iterator (  )  .hasNext (  )  .getByName ( path ) ;^250^^^^^238^261^CompilerInput file = refModules.iterator (  ) .next (  ) .getByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^CompilerInput file = 2.iterator (  ) .next (  ) .getByName ( path ) ;^250^^^^^238^261^CompilerInput file = refModules.iterator (  ) .next (  ) .getByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^250^^^^^238^261^CompilerInput file = refModules.iterator (  ) .next (  ) .getByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^CompilerInput file = 4.iterator (  ) .next (  ) .getByName ( path ) ;^250^^^^^238^261^CompilerInput file = refModules.iterator (  ) .next (  ) .getByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !refModules.contains ( src )  )  {^256^^^^^238^261^if  ( !refModules.contains ( depModule )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( m2 != depModule )  {^252^^^^^238^261^if  ( module != depModule )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^if  ( m1 != depModule )  {^252^^^^^238^261^if  ( module != depModule )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^if  ( !refModules.contains ( module )  )  {^256^^^^^238^261^if  ( !refModules.contains ( depModule )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P1_Replace_Type]^for  ( char path : fileRefs.keySet (  )  )  {^246^^^^^238^261^for  ( String path : fileRefs.keySet (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^Collection<JSModule> refModules = path.get ( fileRefs ) ;^247^^^^^238^261^Collection<JSModule> refModules = fileRefs.get ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P7_Replace_Invocation]^for  ( String path : fileRefs.get (  )  )  {^246^^^^^238^261^for  ( String path : fileRefs.keySet (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^for  ( String path : fileRefs .get ( src )   )  {^246^^^^^238^261^for  ( String path : fileRefs.keySet (  )  )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^Collection<JSModule> refModules = fileRefs .get ( m )  ;^247^^^^^238^261^Collection<JSModule> refModules = fileRefs.get ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^247^^^^^238^261^Collection<JSModule> refModules = fileRefs.get ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P3_Replace_Literal]^if  ( refModules.size() + 7  > 1 )  {^248^^^^^238^261^if  ( refModules.size (  )  > 1 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P14_Delete_Statement]^^249^250^^^^238^261^JSModule depModule = getDeepestCommonDependencyInclusive ( refModules ) ; CompilerInput file = refModules.iterator (  ) .next (  ) .getByName ( path ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] coalesceDuplicateFiles [RETURN_TYPE] void   [VARIABLES] Multimap  fileRefs  CompilerInput  file  jsFile  boolean  JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  Collection  refModules  List  modulesAtDepth  modulesByDepth  String  path  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P2_Replace_Operator]^if  ( m1 >= m2 )  {^269^^^^^268^275^if  ( m1 == m2 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^if  ( m2 == m1 )  {^269^^^^^268^275^if  ( m1 == m2 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P9_Replace_Statement]^if  ( deps == null )  {^269^^^^^268^275^if  ( m1 == m2 )  {^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P15_Unwrap_Block]^return 0;^269^270^271^^^268^275^if  ( m1 == m2 )  { return 0; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P16_Remove_Block]^^269^270^271^^^268^275^if  ( m1 == m2 )  { return 0; }^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P13_Insert_Block]^if  ( deps != null )  {     return deps; }^269^^^^^268^275^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P13_Insert_Block]^if  ( dependsOn ( m1, m2 )  )  {     return m2; }^269^^^^^268^275^[Delete]^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P3_Replace_Literal]^return d2;^270^^^^^268^275^return 0;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P8_Replace_Mix]^return 2;^270^^^^^268^275^return 0;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P3_Replace_Literal]^return d1;^270^^^^^268^275^return 0;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P8_Replace_Mix]^return 0 - 2;^270^^^^^268^275^return 0;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P1_Replace_Type]^long  d1 = getDepth ( m1 ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^int d1 = getDepth ( module ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P7_Replace_Invocation]^int d1 = JSModuleGraph ( m1 ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P11_Insert_Donor_Statement]^int d2 = getDepth ( m2 ) ;int d1 = getDepth ( m1 ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P11_Insert_Donor_Statement]^int m2Depth = getDepth ( m2 ) ;int d1 = getDepth ( m1 ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P11_Insert_Donor_Statement]^int m1Depth = getDepth ( m1 ) ;int d1 = getDepth ( m1 ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P8_Replace_Mix]^int d1 = JSModuleGraph ( m2 ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P14_Delete_Statement]^^272^273^^^^268^275^int d1 = getDepth ( m1 ) ; int d2 = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P1_Replace_Type]^long  d2 = getDepth ( m2 ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^int d2 = getDepth ( module ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P7_Replace_Invocation]^int d2 = JSModuleGraph ( m2 ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P8_Replace_Mix]^int d2 = JSModuleGraph ( src ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P11_Insert_Donor_Statement]^int m2Depth = getDepth ( m2 ) ;int d2 = getDepth ( m2 ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P11_Insert_Donor_Statement]^int m1Depth = getDepth ( m1 ) ;int d2 = getDepth ( m2 ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P11_Insert_Donor_Statement]^int d1 = getDepth ( m1 ) ;int d2 = getDepth ( m2 ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P8_Replace_Mix]^int d2 = getDepth ( src ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P14_Delete_Statement]^^273^274^^^^268^275^int d2 = getDepth ( m2 ) ; return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P2_Replace_Operator]^return d2 > d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P2_Replace_Operator]^return d2 < d1 ? -1 : d2 <= d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P3_Replace_Literal]^return d2 < d3 ? -3 : d2 == d3 ? m2.getName (  ) .compareTo ( m3.getName (  )  )  : 3;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^return d1 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^return d2 < d1 ? -1 : d2 == d1 ? src.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( src.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^return m2 < d1 ? -1 : d2 == d1 ? d2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^return d2 < m1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( d1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^return d2 < d1 ? -1 : d2 == d1 ? m1.getName (  ) .compareTo ( m2.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P6_Replace_Expression]^return d2 < d1 ? -1 : d2 ( d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P7_Replace_Invocation]^return d2 < d1 ? -1 : d2 == d1 ? m2.removeByName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P8_Replace_Mix]^return   -1 ;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P7_Replace_Invocation]^return d2 < d1 ? -1 : d2 == d1 ? m2 .getInputs (  )  .compareTo ( m1^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P14_Delete_Statement]^^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m2.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P8_Replace_Mix]^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( module.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  int  d1  d2  
[P5_Replace_Variable]^return m1;^299^^^^^298^300^return module;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P8_Replace_Mix]^return src;^299^^^^^298^300^return module;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P5_Replace_Variable]^return module;^303^^^^^302^304^return dependentModule;^[CLASS] JSModuleGraph InverseDepthComparator ModuleDependenceException  [METHOD] getDependentModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dep  depModule  dependentModule  m  m1  m2  module  src  List  modulesAtDepth  modulesByDepth  boolean  Map  dependencyMap  moduleDepths  long  serialVersionUID  
[P2_Replace_Operator]^if  ( m1 != m2 )  {^269^^^^^268^275^if  ( m1 == m2 )  {^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P5_Replace_Variable]^if  ( m2 == m1 )  {^269^^^^^268^275^if  ( m1 == m2 )  {^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P15_Unwrap_Block]^return 0;^269^270^271^^^268^275^if  ( m1 == m2 )  { return 0; }^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P16_Remove_Block]^^269^270^271^^^268^275^if  ( m1 == m2 )  { return 0; }^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P3_Replace_Literal]^return ;^270^^^^^268^275^return 0;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P8_Replace_Mix]^return 0 + 4;^270^^^^^268^275^return 0;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P3_Replace_Literal]^return d1;^270^^^^^268^275^return 0;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P8_Replace_Mix]^return 2;^270^^^^^268^275^return 0;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P1_Replace_Type]^short  d1 = getDepth ( m1 ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P8_Replace_Mix]^int d1 = getDepth ( m2 ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P11_Insert_Donor_Statement]^int d2 = getDepth ( m2 ) ;int d1 = getDepth ( m1 ) ;^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P14_Delete_Statement]^^272^^^^^268^275^int d1 = getDepth ( m1 ) ;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P1_Replace_Type]^long  d2 = getDepth ( m2 ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P5_Replace_Variable]^int d2 = getDepth ( m1 ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P11_Insert_Donor_Statement]^int d1 = getDepth ( m1 ) ;int d2 = getDepth ( m2 ) ;^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P14_Delete_Statement]^^273^^^^^268^275^int d2 = getDepth ( m2 ) ;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P2_Replace_Operator]^return d2 <= d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P2_Replace_Operator]^return d2 < d1 ? -1 : d2 != d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P3_Replace_Literal]^return d2 < d7 ? -7 : d2 == d7 ? m2.getName (  ) .compareTo ( m7.getName (  )  )  : 7;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P3_Replace_Literal]^return d2 < dd2 ? -d2 : d2 == dd2 ? m2.getName (  ) .compareTo ( md2.getName (  )  )  : d2;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P5_Replace_Variable]^return d1 < d2 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P5_Replace_Variable]^return d2 < d1 ? -1 : d2 == d1 ? m1.getName (  ) .compareTo ( m2.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P5_Replace_Variable]^return d2 < m1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( d1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P6_Replace_Expression]^return d2 < d1 ? -1 : d2 ( d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P8_Replace_Mix]^return d2 ;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P14_Delete_Statement]^^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P5_Replace_Variable]^return d2 < d1 ? -1 : d2 == d1 ? m1.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P8_Replace_Mix]^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m2.getName (  )  )  : 1;^274^^^^^268^275^return d2 < d1 ? -1 : d2 == d1 ? m2.getName (  ) .compareTo ( m1.getName (  )  )  : 1;^[CLASS] InverseDepthComparator  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P1_Replace_Type]^private static final  int  serialVersionUID = 1;^286^^^^^281^291^private static final long serialVersionUID = 1;^[CLASS] ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P3_Replace_Literal]^private static final long serialVersionUID = ;^286^^^^^281^291^private static final long serialVersionUID = 1;^[CLASS] ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P8_Replace_Mix]^private static final long serialVersionUID  = null ;^286^^^^^281^291^private static final long serialVersionUID = 1;^[CLASS] ModuleDependenceException  [METHOD] compare [RETURN_TYPE] int   JSModule m1 JSModule m2 [VARIABLES] boolean  JSModule  m1  m2  int  d1  d2  
[P14_Delete_Statement]^^293^294^^^^291^296^super ( message ) ; this.module = module;^[CLASS] ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dependentModule  module  String  message  boolean  long  serialVersionUID  
[P5_Replace_Variable]^this.module = dependentModule;^294^^^^^291^296^this.module = module;^[CLASS] ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dependentModule  module  String  message  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.dependentModule = dependentModule;this.module = module;^294^^^^^291^296^this.module = module;^[CLASS] ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dependentModule  module  String  message  boolean  long  serialVersionUID  
[P5_Replace_Variable]^this.dependentModule = module;^295^^^^^291^296^this.dependentModule = dependentModule;^[CLASS] ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dependentModule  module  String  message  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.module = module;this.dependentModule = dependentModule;^295^^^^^291^296^this.dependentModule = dependentModule;^[CLASS] ModuleDependenceException  [METHOD] <init> [RETURN_TYPE] JSModule)   String message JSModule module JSModule dependentModule [VARIABLES] JSModule  dependentModule  module  String  message  boolean  long  serialVersionUID  
[P8_Replace_Mix]^return dependentModule;^299^^^^^298^300^return module;^[CLASS] ModuleDependenceException  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dependentModule  module  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return module;^303^^^^^302^304^return dependentModule;^[CLASS] ModuleDependenceException  [METHOD] getDependentModule [RETURN_TYPE] JSModule   [VARIABLES] JSModule  dependentModule  module  long  serialVersionUID  boolean  
