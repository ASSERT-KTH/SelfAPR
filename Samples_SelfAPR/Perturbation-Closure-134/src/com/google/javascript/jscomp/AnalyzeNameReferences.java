[P8_Replace_Mix]^private  AbstractCompiler compiler;^47^^^^^42^52^private final AbstractCompiler compiler;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [VARIABLES] 
[P3_Replace_Literal]^private boolean referenced = true;^98^^^^^93^103^private boolean referenced = false;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [VARIABLES] 
[P8_Replace_Mix]^private JSModule deepestCommonModuleRef = this;^99^^^^^94^104^private JSModule deepestCommonModuleRef = null;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [VARIABLES] 
[P12_Insert_Condition]^if  ( deepestCommonModuleRef == null )  { private JSModule deepestCommonModuleRef = null; }^99^^^^^94^104^private JSModule deepestCommonModuleRef = null;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^50^^^^^49^52^this.compiler = compiler;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] JSModule  deepestCommonModuleRef  AbstractCompiler  compiler  boolean  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^this.moduleGraph =  null.getModuleGraph (  ) ;^51^^^^^49^52^this.moduleGraph = compiler.getModuleGraph (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] JSModule  deepestCommonModuleRef  AbstractCompiler  compiler  boolean  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^51^^^^^49^52^this.moduleGraph = compiler.getModuleGraph (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] JSModule  deepestCommonModuleRef  AbstractCompiler  compiler  boolean  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^gc.process (  root ) ;^58^^^^^55^64^gc.process ( externs, root ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^gc.process ( externs ) ;^58^^^^^55^64^gc.process ( externs, root ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^gc.process ( root, externs ) ;^58^^^^^55^64^gc.process ( externs, root ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^gc .getNameReferenceGraph (  )  ;^58^^^^^55^64^gc.process ( externs, root ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^58^59^^^^55^64^gc.process ( externs, root ) ; graph = gc.getNameReferenceGraph (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^graph = gc .process ( root , root )  ;^59^^^^^55^64^graph = gc.getNameReferenceGraph (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^graph =  null.getNameReferenceGraph (  ) ;^59^^^^^55^64^graph = gc.getNameReferenceGraph (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^graph = gc .process ( root , externs )  ;^59^^^^^55^64^graph = gc.getNameReferenceGraph (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^59^^^^^55^64^graph = gc.getNameReferenceGraph (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P4_Replace_Constructor]^FixedPointGraphTraversal.FixedPointGraphTraversal.Traversal (  new NameInfo (  )   ) ;^61^^^^^55^64^FixedPointGraphTraversal.newTraversal ( new PropagateReferences (  )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P4_Replace_Constructor]^FixedPointGraphTraversal<Name, Reference> t = FixedPointGraphTraversal.FixedPointGraphTraversal<Name, Reference> t = FixedPointGraphTraversal.Traversal (  new NameInfo (  )   ) ;^60^61^^^^55^64^FixedPointGraphTraversal<Name, Reference> t = FixedPointGraphTraversal.newTraversal ( new PropagateReferences (  )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^FixedPointGraphTraversal<Name, Reference> t = FixedPointGraphTraversal .computeFixedPoint ( graph )  ;^60^61^^^^55^64^FixedPointGraphTraversal<Name, Reference> t = FixedPointGraphTraversal.newTraversal ( new PropagateReferences (  )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^FixedPointGraphTraversal .computeFixedPoint ( graph )  ;^61^^^^^55^64^FixedPointGraphTraversal.newTraversal ( new PropagateReferences (  )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^61^^^^^55^64^FixedPointGraphTraversal.newTraversal ( new PropagateReferences (  )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^getInfo ( graph.MAIN )  .markReference ( deepestCommonModuleRef )  ;^62^^^^^55^64^getInfo ( graph.MAIN ) .markReference ( null ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^62^^^^^55^64^getInfo ( graph.MAIN ) .markReference ( null ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^t.computeFixedPoint (  Sets.newHashSet ( graph.MAIN )  ) ;^63^^^^^55^64^t.computeFixedPoint ( graph, Sets.newHashSet ( graph.MAIN )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^t.newTraversal ( graph, Sets.newHashSet ( graph.MAIN )  ) ;^63^^^^^55^64^t.computeFixedPoint ( graph, Sets.newHashSet ( graph.MAIN )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^63^^^^^55^64^t.computeFixedPoint ( graph, Sets.newHashSet ( graph.MAIN )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  referenced  Node  externs  root  JSModule  deepestCommonModuleRef  NameReferenceGraphConstruction  gc  FixedPointGraphTraversal  t  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^NameInfo destInfo = getInfo ( start ) ;^72^^^^^71^84^NameInfo startInfo = getInfo ( start ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P7_Replace_Invocation]^NameInfo startInfo = AnalyzeNameReferences ( start ) ;^72^^^^^71^84^NameInfo startInfo = getInfo ( start ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P11_Insert_Donor_Statement]^NameInfo destInfo = getInfo ( dest ) ;NameInfo startInfo = getInfo ( start ) ;^72^^^^^71^84^NameInfo startInfo = getInfo ( start ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P8_Replace_Mix]^NameInfo destInfo = AnalyzeNameReferences ( start ) ;^72^^^^^71^84^NameInfo startInfo = getInfo ( start ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P14_Delete_Statement]^^72^73^^^^71^84^NameInfo startInfo = getInfo ( start ) ; NameInfo destInfo = getInfo ( dest ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^NameInfo startInfo = getInfo ( dest ) ;^73^^^^^71^84^NameInfo destInfo = getInfo ( dest ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P7_Replace_Invocation]^NameInfo destInfo = AnalyzeNameReferences ( dest ) ;^73^^^^^71^84^NameInfo destInfo = getInfo ( dest ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P11_Insert_Donor_Statement]^NameInfo info = name.getAnnotation (  ) ;NameInfo destInfo = getInfo ( dest ) ;^73^^^^^71^84^NameInfo destInfo = getInfo ( dest ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P11_Insert_Donor_Statement]^NameInfo startInfo = getInfo ( start ) ;NameInfo destInfo = getInfo ( dest ) ;^73^^^^^71^84^NameInfo destInfo = getInfo ( dest ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P14_Delete_Statement]^^73^^^^^71^84^NameInfo destInfo = getInfo ( dest ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^if  ( destInfo.isReferenced (  )  )  {^74^^^^^71^84^if  ( startInfo.isReferenced (  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P6_Replace_Expression]^if  ( startModule != null )  {^74^^^^^71^84^if  ( startInfo.isReferenced (  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P7_Replace_Invocation]^if  ( startInfo.markReference (  )  )  {^74^^^^^71^84^if  ( startInfo.isReferenced (  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P8_Replace_Mix]^if  ( destInfo.markReference (  )  )  {^74^^^^^71^84^if  ( startInfo.isReferenced (  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P13_Insert_Block]^if  (  ( startModule != null )  &&  ( moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  )  {     return destInfo.markReference ( startModule ) ; }else {     return destInfo.markReference ( edge.getModule (  )  ) ; }^74^^^^^71^84^[Delete]^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P2_Replace_Operator]^if  ( startModule != null || moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P2_Replace_Operator]^if  ( startModule == null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^if  ( deepestCommonModuleRef != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^if  ( startModule != null && moduleGraph.dependsOn (  edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^if  ( startModule != null && moduleGraph.dependsOn ( startModule.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^if  ( edge != null && moduleGraph.dependsOn ( startModule, startModule.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^if  ( startModule != null && edge.dependsOn ( startModule, moduleGraph.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P6_Replace_Expression]^if  ( startModule != null ) {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P6_Replace_Expression]^if  (  moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P7_Replace_Invocation]^if  ( startModule != null && moduleGraph.getDeepestCommonDependencyInclusive ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P7_Replace_Invocation]^if  ( startModule != null && moduleGraph .getDeepestCommonDependencyInclusive ( startModule , startModule )   )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P8_Replace_Mix]^if  ( startModule != true && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P15_Unwrap_Block]^return destInfo.markReference(startModule);^76^77^78^79^80^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  { return destInfo.markReference ( startModule ) ; } else { return destInfo.markReference ( edge.getModule (  )  ) ; }^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P16_Remove_Block]^^76^77^78^79^80^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  { return destInfo.markReference ( startModule ) ; } else { return destInfo.markReference ( edge.getModule (  )  ) ; }^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P13_Insert_Block]^if  ( startInfo.isReferenced (  )  )  {     JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;     if  (  ( startModule != null )  &&  ( moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  )  {         return destInfo.markReference ( startModule ) ;     }else {         return destInfo.markReference ( edge.getModule (  )  ) ;     } }^76^^^^^71^84^[Delete]^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^return startInfo.markReference ( edge.getModule (  )  ) ;^80^^^^^71^84^return destInfo.markReference ( edge.getModule (  )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^return edge.markReference ( destInfo.getModule (  )  ) ;^80^^^^^71^84^return destInfo.markReference ( edge.getModule (  )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P14_Delete_Statement]^^80^^^^^71^84^return destInfo.markReference ( edge.getModule (  )  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^return startInfo.markReference ( startModule ) ;^78^^^^^71^84^return destInfo.markReference ( startModule ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^return destInfo.markReference ( deepestCommonModuleRef ) ;^78^^^^^71^84^return destInfo.markReference ( startModule ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^return startModule.markReference ( destInfo ) ;^78^^^^^71^84^return destInfo.markReference ( startModule ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P14_Delete_Statement]^^78^^^^^71^84^return destInfo.markReference ( startModule ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^JSModule startModule = destInfo.getDeepestCommonModuleRef (  ) ;^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P7_Replace_Invocation]^JSModule startModule = startInfo.markReference (  ) ;^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P8_Replace_Mix]^JSModule startModule = destInfo.markReference (  ) ;^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P11_Insert_Donor_Statement]^JSModule originalDeepestCommon = deepestCommonModuleRef;JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P7_Replace_Invocation]^JSModule startModule = startInfo .isReferenced (  )  ;^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P14_Delete_Statement]^^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^moduleGraph.dependsOn ( deepestCommonModuleRef, edge.getModule (  )  )  )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^moduleGraph.dependsOn (  edge.getModule (  )  )  )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^moduleGraph.dependsOn ( startModule.getModule (  )  )  )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^moduleGraph.dependsOn ( edge, startModule.getModule (  )  )  )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P7_Replace_Invocation]^moduleGraph.getDeepestCommonDependencyInclusive ( startModule, edge.getModule (  )  )  )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P7_Replace_Invocation]^moduleGraph .getDeepestCommonDependencyInclusive ( startModule , startModule )   )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P14_Delete_Statement]^^77^78^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  { return destInfo.markReference ( startModule ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^if  ( moduleGraph != null && startModule.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P8_Replace_Mix]^if  ( deepestCommonModuleRef != true && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P8_Replace_Mix]^JSModule startModule = destInfo .isReferenced (  )  ;^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P8_Replace_Mix]^moduleGraph .getDeepestCommonDependencyInclusive ( startModule , deepestCommonModuleRef )   )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P3_Replace_Literal]^return true;^83^^^^^71^84^return false;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  destInfo  startInfo  Reference  edge  JSModule  deepestCommonModuleRef  startModule  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  dest  start  
[P5_Replace_Variable]^GraphNode<Name, Reference> name = symbol.getNode ( graph ) ;^88^^^^^87^95^GraphNode<Name, Reference> name = graph.getNode ( symbol ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P14_Delete_Statement]^^88^^^^^87^95^GraphNode<Name, Reference> name = graph.getNode ( symbol ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P7_Replace_Invocation]^NameInfo info = name.setAnnotation (  ) ;^89^^^^^87^95^NameInfo info = name.getAnnotation (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P11_Insert_Donor_Statement]^NameInfo destInfo = getInfo ( dest ) ;NameInfo info = name.getAnnotation (  ) ;^89^^^^^87^95^NameInfo info = name.getAnnotation (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P8_Replace_Mix]^NameInfo info = name .setAnnotation ( info )  ;^89^^^^^87^95^NameInfo info = name.getAnnotation (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P14_Delete_Statement]^^89^^^^^87^95^NameInfo info = name.getAnnotation (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P2_Replace_Operator]^if  ( info != null )  {^90^^^^^87^95^if  ( info == null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P8_Replace_Mix]^if  ( info == this )  {^90^^^^^87^95^if  ( info == null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P15_Unwrap_Block]^info = new com.google.javascript.jscomp.AnalyzeNameReferences.NameInfo(); name.setAnnotation(info);^90^91^92^93^^87^95^if  ( info == null )  { info = new NameInfo (  ) ; name.setAnnotation ( info ) ; }^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P16_Remove_Block]^^90^91^92^93^^87^95^if  ( info == null )  { info = new NameInfo (  ) ; name.setAnnotation ( info ) ; }^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P4_Replace_Constructor]^info = info =  new PropagateReferences (  )  ;^91^^^^^87^95^info = new NameInfo (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P8_Replace_Mix]^info =  new PropagateReferences (  )  ;^91^^^^^87^95^info = new NameInfo (  ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P13_Insert_Block]^if  ( info == null )  {     info = new NameInfo (  ) ;     name.setAnnotation ( info ) ; }^91^^^^^87^95^[Delete]^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P7_Replace_Invocation]^name .getAnnotation (  )  ;^92^^^^^87^95^name.setAnnotation ( info ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P14_Delete_Statement]^^92^^^^^87^95^name.setAnnotation ( info ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getInfo [RETURN_TYPE] AnalyzeNameReferences$NameInfo   Name symbol [VARIABLES] AbstractCompiler  compiler  boolean  referenced  NameInfo  info  JSModule  deepestCommonModuleRef  startModule  GraphNode  name  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  Name  symbol  
[P5_Replace_Variable]^return startModule;^111^^^^^110^112^return deepestCommonModuleRef;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getDeepestCommonModuleRef [RETURN_TYPE] JSModule   [VARIABLES] JSModule  deepestCommonModuleRef  startModule  AbstractCompiler  compiler  boolean  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P12_Insert_Condition]^if  ( deepestCommonModuleRef == null )  { return deepestCommonModuleRef; }^111^^^^^110^112^return deepestCommonModuleRef;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] getDeepestCommonModuleRef [RETURN_TYPE] JSModule   [VARIABLES] JSModule  deepestCommonModuleRef  startModule  AbstractCompiler  compiler  boolean  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^boolean hasChanged = true;^121^^^^^120^143^boolean hasChanged = false;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  ( !hasChanged )  {^122^^^^^120^143^if  ( !referenced )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P15_Unwrap_Block]^referenced = true; hasChanged = true;^122^123^124^125^^120^143^if  ( !referenced )  { referenced = true; hasChanged = true; }^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P16_Remove_Block]^^122^123^124^125^^120^143^if  ( !referenced )  { referenced = true; hasChanged = true; }^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^referenced = false;^123^^^^^120^143^referenced = true;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^hasChanged = true;referenced = true;^123^^^^^120^143^referenced = true;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^hasChanged = false;^124^^^^^120^143^hasChanged = true;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^referenced = true;hasChanged = true;^124^^^^^120^143^hasChanged = true;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  ( moduleGraph == null )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  ( startModuleGraph != null )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  ( module != null )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  ( deepestCommonModuleRef == null )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^if  ( moduleGraph != true )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  ( deepestCommonModuleRef != null )  {^130^^^^^120^143^if  ( deepestCommonModuleRef == null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  ( startModule == null )  {^130^^^^^120^143^if  ( deepestCommonModuleRef == null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^if  ( deepestCommonModuleRef == true )  {^130^^^^^120^143^if  ( deepestCommonModuleRef == null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^deepestCommonModuleRef = startModuleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive (  module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^deepestCommonModuleRef = deepestCommonModuleRefGraph.getDeepestCommonDependencyInclusive ( module, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^deepestCommonModuleRef = deepestCommonModuleRef.getDeepestCommonDependencyInclusive ( moduleGraph, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^deepestCommonModuleRef = moduleGraph.dependsOn ( deepestCommonModuleRef, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^deepestCommonModuleRef = moduleGraph .dependsOn ( deepestCommonModuleRef )  ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^deepestCommonModuleRef =  startModuleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, startModule ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, startModule ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive ( startModule, module ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive (  module ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive ( module, deepestCommonModuleRef ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^moduleGraph.dependsOn ( deepestCommonModuleRef, module ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^deepestCommonModuleRef = startModule;^131^^^^^120^143^deepestCommonModuleRef = module;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P12_Insert_Condition]^if  ( deepestCommonModuleRef == null )  { deepestCommonModuleRef = module; }^131^^^^^120^143^deepestCommonModuleRef = module;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  ( originalDeepestCommon == deepestCommonModuleRef )  {^138^^^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  ( startModule != deepestCommonModuleRef )  {^138^^^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  ( originalDeepestCommon != startModule )  {^138^^^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  ( deepestCommonModuleRef != originalDeepestCommon )  {^138^^^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P15_Unwrap_Block]^hasChanged = true;^138^139^140^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  { hasChanged = true; }^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P16_Remove_Block]^^138^139^140^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  { hasChanged = true; }^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^hasChanged = false;^139^^^^^120^143^hasChanged = true;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^referenced = true;hasChanged = true;^139^^^^^120^143^hasChanged = true;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^deepestCommonModuleRef =  null;^131^^^^^120^143^deepestCommonModuleRef = module;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( startModule, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^deepestCommonModuleRef = moduleGraphGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^deepestCommonModuleRef = module.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, moduleGraph ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^deepestCommonModuleRef = moduleGraph .dependsOn ( startModule )  ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^JSModule originalDeepestCommon = startModule;^128^^^^^120^143^JSModule originalDeepestCommon = deepestCommonModuleRef;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;JSModule originalDeepestCommon = deepestCommonModuleRef;^128^^^^^120^143^JSModule originalDeepestCommon = deepestCommonModuleRef;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P12_Insert_Condition]^if  ( originalDeepestCommon != deepestCommonModuleRef )  { JSModule originalDeepestCommon = deepestCommonModuleRef; }^128^^^^^120^143^JSModule originalDeepestCommon = deepestCommonModuleRef;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^if  ( deepestCommonModuleRef == false )  {^130^^^^^120^143^if  ( deepestCommonModuleRef == null )  {^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^moduleGraph .dependsOn ( deepestCommonModuleRef )  ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^deepestCommonModuleRef = moduleGraph .dependsOn ( originalDeepestCommon )  ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^return referenced;^142^^^^^120^143^return hasChanged;^[CLASS] AnalyzeNameReferences PropagateReferences NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  startModule  AbstractCompiler  compiler  boolean  hasChanged  referenced  NameReferenceGraph  graph  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^NameInfo destInfo = getInfo ( start ) ;^72^^^^^71^84^NameInfo startInfo = getInfo ( start ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P11_Insert_Donor_Statement]^NameInfo destInfo = getInfo ( dest ) ;NameInfo startInfo = getInfo ( start ) ;^72^^^^^71^84^NameInfo startInfo = getInfo ( start ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P14_Delete_Statement]^^72^^^^^71^84^NameInfo startInfo = getInfo ( start ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^NameInfo startInfo = getInfo ( dest ) ;^73^^^^^71^84^NameInfo destInfo = getInfo ( dest ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P11_Insert_Donor_Statement]^NameInfo startInfo = getInfo ( start ) ;NameInfo destInfo = getInfo ( dest ) ;^73^^^^^71^84^NameInfo destInfo = getInfo ( dest ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P14_Delete_Statement]^^73^^^^^71^84^NameInfo destInfo = getInfo ( dest ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^if  ( destInfo.isReferenced (  )  )  {^74^^^^^71^84^if  ( startInfo.isReferenced (  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P6_Replace_Expression]^if  ( startModule != null )  {^74^^^^^71^84^if  ( startInfo.isReferenced (  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P7_Replace_Invocation]^if  ( startInfo.markReference (  )  )  {^74^^^^^71^84^if  ( startInfo.isReferenced (  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P7_Replace_Invocation]^if  ( startInfo .markReference ( startModule )   )  {^74^^^^^71^84^if  ( startInfo.isReferenced (  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P13_Insert_Block]^if  (  ( startModule != null )  &&  ( moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  )  {     return destInfo.markReference ( startModule ) ; }else {     return destInfo.markReference ( edge.getModule (  )  ) ; }^74^^^^^71^84^[Delete]^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P2_Replace_Operator]^if  ( startModule != null || moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P2_Replace_Operator]^if  ( startModule == null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^if  ( startModule != null && moduleGraph.dependsOn (  edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^if  ( startModule != null && moduleGraph.dependsOn ( startModule.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^if  ( edge != null && moduleGraph.dependsOn ( startModule, startModule.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P6_Replace_Expression]^if  ( startModule != null ) {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P6_Replace_Expression]^if  (  moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P15_Unwrap_Block]^return destInfo.markReference(startModule);^76^77^78^79^80^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  { return destInfo.markReference ( startModule ) ; } else { return destInfo.markReference ( edge.getModule (  )  ) ; }^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P16_Remove_Block]^^76^77^78^79^80^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  { return destInfo.markReference ( startModule ) ; } else { return destInfo.markReference ( edge.getModule (  )  ) ; }^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P13_Insert_Block]^if  ( startInfo.isReferenced (  )  )  {     JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;     if  (  ( startModule != null )  &&  ( moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  )  {         return destInfo.markReference ( startModule ) ;     }else {         return destInfo.markReference ( edge.getModule (  )  ) ;     } }^76^^^^^71^84^[Delete]^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^return startInfo.markReference ( edge.getModule (  )  ) ;^80^^^^^71^84^return destInfo.markReference ( edge.getModule (  )  ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^return edge.markReference ( destInfo.getModule (  )  ) ;^80^^^^^71^84^return destInfo.markReference ( edge.getModule (  )  ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P8_Replace_Mix]^return destInfo .isReferenced (  )  ;^80^^^^^71^84^return destInfo.markReference ( edge.getModule (  )  ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P14_Delete_Statement]^^80^^^^^71^84^return destInfo.markReference ( edge.getModule (  )  ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^return startInfo.markReference ( startModule ) ;^78^^^^^71^84^return destInfo.markReference ( startModule ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^return startModule.markReference ( destInfo ) ;^78^^^^^71^84^return destInfo.markReference ( startModule ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P8_Replace_Mix]^return destInfo .isReferenced (  )  ;^78^^^^^71^84^return destInfo.markReference ( startModule ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P14_Delete_Statement]^^78^^^^^71^84^return destInfo.markReference ( startModule ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P8_Replace_Mix]^return startInfo .isReferenced (  )  ;^78^^^^^71^84^return destInfo.markReference ( startModule ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^JSModule startModule = destInfo.getDeepestCommonModuleRef (  ) ;^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P7_Replace_Invocation]^JSModule startModule = startInfo.markReference (  ) ;^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P14_Delete_Statement]^^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^moduleGraph.dependsOn (  edge.getModule (  )  )  )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^moduleGraph.dependsOn ( startModule.getModule (  )  )  )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^moduleGraph.dependsOn ( edge, startModule.getModule (  )  )  )  {^77^^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P14_Delete_Statement]^^77^78^^^^71^84^moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  { return destInfo.markReference ( startModule ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^if  ( startModule != null && edge.dependsOn ( startModule, moduleGraph.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P5_Replace_Variable]^if  ( moduleGraph != null && startModule.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P8_Replace_Mix]^if  ( startModule != true && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^76^77^^^^71^84^if  ( startModule != null && moduleGraph.dependsOn ( startModule, edge.getModule (  )  )  )  {^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P7_Replace_Invocation]^JSModule startModule = startInfo .isReferenced (  )  ;^75^^^^^71^84^JSModule startModule = startInfo.getDeepestCommonModuleRef (  ) ;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P3_Replace_Literal]^return true;^83^^^^^71^84^return false;^[CLASS] PropagateReferences  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P3_Replace_Literal]^private boolean referenced = true;^98^^^^^93^103^private boolean referenced = false;^[CLASS] NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P8_Replace_Mix]^private boolean referenced  = null ;^98^^^^^93^103^private boolean referenced = false;^[CLASS] NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P8_Replace_Mix]^private JSModule deepestCommonModuleRef = this;^99^^^^^94^104^private JSModule deepestCommonModuleRef = null;^[CLASS] NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P12_Insert_Condition]^if  ( deepestCommonModuleRef == null )  { private JSModule deepestCommonModuleRef = null; }^99^^^^^94^104^private JSModule deepestCommonModuleRef = null;^[CLASS] NameInfo  [METHOD] traverseEdge [RETURN_TYPE] boolean   Name start Reference edge Name dest [VARIABLES] NameInfo  destInfo  startInfo  boolean  Reference  edge  JSModule  startModule  Name  dest  start  
[P12_Insert_Condition]^if  ( deepestCommonModuleRef == null )  { return deepestCommonModuleRef; }^111^^^^^110^112^return deepestCommonModuleRef;^[CLASS] NameInfo  [METHOD] getDeepestCommonModuleRef [RETURN_TYPE] JSModule   [VARIABLES] JSModule  deepestCommonModuleRef  boolean  referenced  
[P3_Replace_Literal]^boolean hasChanged = true;^121^^^^^120^143^boolean hasChanged = false;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P8_Replace_Mix]^if  ( !hasChanged )  {^122^^^^^120^143^if  ( !referenced )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P15_Unwrap_Block]^referenced = true; hasChanged = true;^122^123^124^125^^120^143^if  ( !referenced )  { referenced = true; hasChanged = true; }^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P16_Remove_Block]^^122^123^124^125^^120^143^if  ( !referenced )  { referenced = true; hasChanged = true; }^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P3_Replace_Literal]^referenced = false;^123^^^^^120^143^referenced = true;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P11_Insert_Donor_Statement]^hasChanged = true;referenced = true;^123^^^^^120^143^referenced = true;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P3_Replace_Literal]^hasChanged = false;^124^^^^^120^143^hasChanged = true;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P11_Insert_Donor_Statement]^referenced = true;hasChanged = true;^124^^^^^120^143^hasChanged = true;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P2_Replace_Operator]^if  ( moduleGraph == null )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^if  ( deepestCommonModuleRefGraph != null )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^if  ( module != null )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P6_Replace_Expression]^if  ( deepestCommonModuleRef == null )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P6_Replace_Expression]^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P8_Replace_Mix]^if  ( moduleGraph != true )  {^127^^^^^120^143^if  ( moduleGraph != null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P2_Replace_Operator]^if  ( deepestCommonModuleRef != null )  {^130^^^^^120^143^if  ( deepestCommonModuleRef == null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^if  ( originalDeepestCommon == null )  {^130^^^^^120^143^if  ( deepestCommonModuleRef == null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P8_Replace_Mix]^if  ( originalDeepestCommon == this )  {^130^^^^^120^143^if  ( deepestCommonModuleRef == null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^deepestCommonModuleRef = originalDeepestCommonGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( originalDeepestCommon, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive (  module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^deepestCommonModuleRef = moduleGraphGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^deepestCommonModuleRef = module.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, moduleGraph ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^deepestCommonModuleRef = deepestCommonModuleRef.getDeepestCommonDependencyInclusive ( moduleGraph, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P8_Replace_Mix]^deepestCommonModuleRef =  originalDeepestCommonGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, originalDeepestCommon ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, originalDeepestCommon ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive ( originalDeepestCommon, module ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive (  module ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^moduleGraph.getDeepestCommonDependencyInclusive ( module, deepestCommonModuleRef ) ;^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P14_Delete_Statement]^^134^135^^^^120^143^moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^deepestCommonModuleRef = originalDeepestCommon;^131^^^^^120^143^deepestCommonModuleRef = module;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P12_Insert_Condition]^if  ( deepestCommonModuleRef == null )  { deepestCommonModuleRef = module; }^131^^^^^120^143^deepestCommonModuleRef = module;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P2_Replace_Operator]^if  ( originalDeepestCommon <= deepestCommonModuleRef )  {^138^^^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^if  ( module != deepestCommonModuleRef )  {^138^^^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^if  ( originalDeepestCommon != module )  {^138^^^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^if  ( deepestCommonModuleRef != originalDeepestCommon )  {^138^^^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P15_Unwrap_Block]^hasChanged = true;^138^139^140^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  { hasChanged = true; }^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P16_Remove_Block]^^138^139^140^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  { hasChanged = true; }^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P3_Replace_Literal]^hasChanged = false;^139^^^^^120^143^hasChanged = true;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P11_Insert_Donor_Statement]^referenced = true;hasChanged = true;^139^^^^^120^143^hasChanged = true;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^deepestCommonModuleRef = deepestCommonModuleRefGraph.getDeepestCommonDependencyInclusive ( module, module ) ;^133^134^135^^^120^143^deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^JSModule originalDeepestCommon = module;^128^^^^^120^143^JSModule originalDeepestCommon = deepestCommonModuleRef;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P12_Insert_Condition]^if  ( originalDeepestCommon != deepestCommonModuleRef )  { JSModule originalDeepestCommon = deepestCommonModuleRef; }^128^^^^^120^143^JSModule originalDeepestCommon = deepestCommonModuleRef;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P8_Replace_Mix]^if  ( deepestCommonModuleRef == this )  {^130^^^^^120^143^if  ( deepestCommonModuleRef == null )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P2_Replace_Operator]^if  ( originalDeepestCommon == deepestCommonModuleRef )  {^138^^^^^120^143^if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
[P5_Replace_Variable]^return referenced;^142^^^^^120^143^return hasChanged;^[CLASS] NameInfo  [METHOD] markReference [RETURN_TYPE] boolean   JSModule module [VARIABLES] JSModule  deepestCommonModuleRef  module  originalDeepestCommon  boolean  hasChanged  referenced  
