[P8_Replace_Mix]^private  AstParallelizer splitter;^36^^^^^31^41^private final AstParallelizer splitter;^[CLASS] ParallelCompilerPass Result 1   [VARIABLES] 
[P1_Replace_Type]^private final  long  numWorkers;^38^^^^^33^43^private final int numWorkers;^[CLASS] ParallelCompilerPass Result 1   [VARIABLES] 
[P8_Replace_Mix]^private final  short  numWorkers;^38^^^^^33^43^private final int numWorkers;^[CLASS] ParallelCompilerPass Result 1   [VARIABLES] 
[P8_Replace_Mix]^private  Supplier<Task> taskSupply;^39^^^^^34^44^private final Supplier<Task> taskSupply;^[CLASS] ParallelCompilerPass Result 1   [VARIABLES] 
[P3_Replace_Literal]^boolean changed = true;^62^^^^^57^67^boolean changed = false;^[CLASS] ParallelCompilerPass Result 1   [VARIABLES] 
[P8_Replace_Mix]^List<JSError> errors ;^63^^^^^58^68^List<JSError> errors = Lists.newArrayList (  ) ;^[CLASS] ParallelCompilerPass Result 1   [VARIABLES] 
[P8_Replace_Mix]^List<Exception> exceptions ;^64^^^^^59^69^List<Exception> exceptions = Lists.newArrayList (  ) ;^[CLASS] ParallelCompilerPass Result 1   [VARIABLES] 
[P8_Replace_Mix]^this.changed =  null;^75^^^^^74^76^this.changed = changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] ParallelCompilerPass$Result(boolean)   boolean changed [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.changed = changed;^75^^^^^74^76^this.changed = changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] ParallelCompilerPass$Result(boolean)   boolean changed [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P11_Insert_Donor_Statement]^changed = changed || other.changed;this.changed = changed;^75^^^^^74^76^this.changed = changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] ParallelCompilerPass$Result(boolean)   boolean changed [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P2_Replace_Operator]^Preconditions.checkArgument ( numWorkers >= 0 ) ;^116^^^^^114^121^Preconditions.checkArgument ( numWorkers > 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P3_Replace_Literal]^Preconditions.checkArgument ( numWorkers > numWorkers ) ;^116^^^^^114^121^Preconditions.checkArgument ( numWorkers > 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P14_Delete_Statement]^^116^117^^^^114^121^Preconditions.checkArgument ( numWorkers > 0 ) ; this.taskSupply = taskSupply;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P8_Replace_Mix]^this.taskSupply =  null;^117^^^^^114^121^this.taskSupply = taskSupply;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P8_Replace_Mix]^this.splitter =  null;^118^^^^^114^121^this.splitter = splitter;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.splitter = splitter;^118^^^^^114^121^this.splitter = splitter;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P8_Replace_Mix]^this.numWorkers =  null;^119^^^^^114^121^this.numWorkers = numWorkers;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.numWorkers = numWorkers;^119^^^^^114^121^this.numWorkers = numWorkers;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P8_Replace_Mix]^this.compiler =  null;^120^^^^^114^121^this.compiler = compiler;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P11_Insert_Donor_Statement]^this.splitter = splitter;this.compiler = compiler;^120^^^^^114^121^this.compiler = compiler;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P11_Insert_Donor_Statement]^this.numWorkers = numWorkers;this.compiler = compiler;^120^^^^^114^121^this.compiler = compiler;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P11_Insert_Donor_Statement]^this.changed = changed;this.compiler = compiler;^120^^^^^114^121^this.compiler = compiler;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[P2_Replace_Operator]^changed = changed && other.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P5_Replace_Variable]^changed = changed || changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P5_Replace_Variable]^changed = other || changed.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P5_Replace_Variable]^changed = other.changed || changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P5_Replace_Variable]^changed = changed || other;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P8_Replace_Mix]^changed =  changed || null.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P11_Insert_Donor_Statement]^this.changed = changed;changed = changed || other.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P5_Replace_Variable]^errors.addAll ( other.errors.errors ) ;^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P14_Delete_Statement]^^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P11_Insert_Donor_Statement]^exceptions.addAll ( other.exceptions ) ;errors.addAll ( other.errors ) ;^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P5_Replace_Variable]^exceptions.addAll ( other ) ;^84^^^^^81^85^exceptions.addAll ( other.exceptions ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P14_Delete_Statement]^^84^^^^^81^85^exceptions.addAll ( other.exceptions ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P11_Insert_Donor_Statement]^errors.addAll ( other.errors ) ;exceptions.addAll ( other.exceptions ) ;^84^^^^^81^85^exceptions.addAll ( other.exceptions ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[P7_Replace_Invocation]^if  ( !exceptions .get ( numWorkers )   )  {^95^^^^^94^104^if  ( !exceptions.isEmpty (  )  )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P8_Replace_Mix]^if  ( exceptions.isEmpty (  )  )  {^95^^^^^94^104^if  ( !exceptions.isEmpty (  )  )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P9_Replace_Statement]^if  ( worklist.isEmpty (  )  )  {^95^^^^^94^104^if  ( !exceptions.isEmpty (  )  )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P15_Unwrap_Block]^throw new java.lang.RuntimeException(exceptions.get(0));^95^96^97^^^94^104^if  ( !exceptions.isEmpty (  )  )  { throw new RuntimeException  (" ")  ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P16_Remove_Block]^^95^96^97^^^94^104^if  ( !exceptions.isEmpty (  )  )  { throw new RuntimeException  (" ")  ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P13_Insert_Block]^if  ( ! ( exceptions.isEmpty (  )  )  )  {     throw new RuntimeException ( exceptions.get ( 0 )  ) ; }^96^^^^^94^104^[Delete]^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P14_Delete_Statement]^^96^^^^^94^104^throw new RuntimeException  (" ")  ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P8_Replace_Mix]^c .reportCodeChange (  )  ;^99^^^^^94^104^c.report ( error ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P14_Delete_Statement]^^99^^^^^94^104^c.report ( error ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P11_Insert_Donor_Statement]^c.reportCodeChange (  ) ;c.report ( error ) ;^99^^^^^94^104^c.report ( error ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P5_Replace_Variable]^if  ( compilerhanged )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P5_Replace_Variable]^if  ( changedhanged )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P5_Replace_Variable]^if  ( c )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P15_Unwrap_Block]^c.reportCodeChange();^101^102^103^^^94^104^if  ( changed )  { c.reportCodeChange (  ) ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P16_Remove_Block]^^101^102^103^^^94^104^if  ( changed )  { c.reportCodeChange (  ) ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P7_Replace_Invocation]^c.report (  ) ;^102^^^^^94^104^c.reportCodeChange (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P14_Delete_Statement]^^102^^^^^94^104^c.reportCodeChange (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P11_Insert_Donor_Statement]^c.report ( error ) ;c.reportCodeChange (  ) ;^102^^^^^94^104^c.reportCodeChange (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P7_Replace_Invocation]^c .report ( error )  ;^102^^^^^94^104^c.reportCodeChange (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[P7_Replace_Invocation]^worklist = splitter.join (  ) ;^126^^^^^124^130^worklist = splitter.split (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P8_Replace_Mix]^worklist ;^126^^^^^124^130^worklist = splitter.split (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P14_Delete_Statement]^^126^^^^^124^130^worklist = splitter.split (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P11_Insert_Donor_Statement]^splitter.join (  ) ;worklist = splitter.split (  ) ;^126^^^^^124^130^worklist = splitter.split (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P7_Replace_Invocation]^Result r = getTask (  ) ;^127^^^^^124^130^Result r = execute (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P11_Insert_Donor_Statement]^Result passResult = processTask (  ) ;Result r = execute (  ) ;^127^^^^^124^130^Result r = execute (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P11_Insert_Donor_Statement]^Result result = new Result (  ) ;Result r = execute (  ) ;^127^^^^^124^130^Result r = execute (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P11_Insert_Donor_Statement]^Result r = new Result ( true ) ;Result r = execute (  ) ;^127^^^^^124^130^Result r = execute (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P11_Insert_Donor_Statement]^Result result = processAllTasks (  ) ;Result r = execute (  ) ;^127^^^^^124^130^Result r = execute (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P14_Delete_Statement]^^127^^^^^124^130^Result r = execute (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P7_Replace_Invocation]^splitter.split (  ) ;^128^^^^^124^130^splitter.join (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P14_Delete_Statement]^^128^129^^^^124^130^splitter.join (  ) ; r.notifyCompiler ( compiler ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P11_Insert_Donor_Statement]^workers[i].join (  ) ;splitter.join (  ) ;^128^^^^^124^130^splitter.join (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P11_Insert_Donor_Statement]^worklist = splitter.split (  ) ;splitter.join (  ) ;^128^^^^^124^130^splitter.join (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P5_Replace_Variable]^r.notifyCompiler ( c ) ;^129^^^^^124^130^r.notifyCompiler ( compiler ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P7_Replace_Invocation]^r.combine ( compiler ) ;^129^^^^^124^130^r.notifyCompiler ( compiler ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P8_Replace_Mix]^r.combine ( c ) ;^129^^^^^124^130^r.notifyCompiler ( compiler ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P14_Delete_Statement]^^129^130^^^^124^130^r.notifyCompiler ( compiler ) ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[P1_Replace_Type]^short  numChildThread = numWorkers - 1;^138^^^^^123^153^int numChildThread = numWorkers - 1;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P2_Replace_Operator]^int numChildThread = numWorkers  !=  1;^138^^^^^123^153^int numChildThread = numWorkers - 1;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P3_Replace_Literal]^int numChildThread = numWorkers ;^138^^^^^123^153^int numChildThread = numWorkers - 1;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^int numChildThread = index - 1;^138^^^^^123^153^int numChildThread = numWorkers - 1;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^Result result = new Result (  ) ;final Result[] results = new Result[numChildThread];^140^^^^^125^155^final Result[] results = new Result[numChildThread];^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^Thread[] workers = new Thread[numChildThread];final Result[] results = new Result[numChildThread];^140^^^^^125^155^final Result[] results = new Result[numChildThread];^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P1_Replace_Type]^for  (  short  i = 0; i < numChildThread; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P2_Replace_Operator]^for  ( int i = 0; i <= numChildThread; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P3_Replace_Literal]^for  ( int i = ; i < numChildThread; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^for  ( numWorkersnt i = 0; i < numChildThread; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^for  ( int i = 0; i < numWorkers; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^for  ( numChildThreadnt i = 0; i < i; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P7_Replace_Invocation]^for  ( int i = 0; i < numChildstart; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P7_Replace_Invocation]^results[index] = processTask (  ) ;^147^^^^^132^162^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P8_Replace_Mix]^results[index]  = null ;^147^^^^^132^162^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P8_Replace_Mix]^workers[i]  =  workers[i] ;^150^^^^^135^165^workers[i] = worker;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P7_Replace_Invocation]^start worker = new Thread (  )  {^144^^^^^129^159^Thread worker = new Thread (  )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P1_Replace_Type]^final  short  index = i;^143^^^^^128^158^final int index = i;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^final numWorkersnt index = i;^143^^^^^128^158^final int index = i;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P14_Delete_Statement]^^147^^^^^132^162^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^Result passResult = processTask (  ) ;results[index] = processAllTasks (  ) ;^147^^^^^132^162^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^Result result = processAllTasks (  ) ;results[index] = processAllTasks (  ) ;^147^^^^^132^162^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P14_Delete_Statement]^^151^^^^^136^166^worker.start (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^workers[i].join (  ) ;worker.start (  ) ;^151^^^^^136^166^worker.start (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P8_Replace_Mix]^workers[i]  = null ;^150^^^^^135^165^workers[i] = worker;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P3_Replace_Literal]^for  ( int i = numChildThread; i < numChildThread; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P7_Replace_Invocation]^Result result = processTask (  ) ;^154^^^^^139^169^Result result = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^Result r = execute (  ) ;Result result = processAllTasks (  ) ;^154^^^^^139^169^Result result = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^Result passResult = processTask (  ) ;Result result = processAllTasks (  ) ;^154^^^^^139^169^Result result = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^Result result = new Result (  ) ;Result result = processAllTasks (  ) ;^154^^^^^139^169^Result result = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P14_Delete_Statement]^^154^^^^^139^169^Result result = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^results[index] = processAllTasks (  ) ;Result result = processAllTasks (  ) ;^154^^^^^139^169^Result result = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P1_Replace_Type]^for  (  short  i = 0; i < numChildThread; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P2_Replace_Operator]^for  ( int i = 0; i > numChildThread; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P3_Replace_Literal]^for  ( int i = numWorkers; i < numChildThread; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^for  ( numWorkersnt i = 0; i < numChildThread; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^for  ( int i = 0; i < numWorkers; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^for  ( numChildThreadnt i = 0; i < i; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P14_Delete_Statement]^^159^^^^^144^174^workers[i].join (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^worker.start (  ) ;workers[i].join (  ) ;^159^^^^^144^174^workers[i].join (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^splitter.join (  ) ;workers[i].join (  ) ;^159^^^^^144^174^workers[i].join (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P14_Delete_Statement]^^164^^^^^149^179^result.exceptions.add ( e ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^r.exceptions.add ( e ) ;result.exceptions.add ( e ) ;^164^^^^^149^179^result.exceptions.add ( e ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P7_Replace_Invocation]^Thread.currentThread (  ) .start (  ) ;^168^^^^^153^183^Thread.currentThread (  ) .interrupt (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P7_Replace_Invocation]^Thread.Thread (  ) .interrupt (  ) ;^168^^^^^153^183^Thread.currentThread (  ) .interrupt (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P14_Delete_Statement]^^168^^^^^153^183^Thread.currentThread (  ) .interrupt (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P8_Replace_Mix]^workers[i] .split (  )  ;^159^^^^^144^174^workers[i].join (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P3_Replace_Literal]^for  ( int i = numChildThread; i < numChildThread; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P1_Replace_Type]^for  (  long  i = 0; i < numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P2_Replace_Operator]^for  ( int i = 0; i > numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P3_Replace_Literal]^for  ( int i = index; i < numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^for  ( numWorkersnt i = 0; i < numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^for  ( int i = 0; i < numWorkers; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^for  ( numChildThreadnt i = 0; i < i; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^result.combine ( result[i] ) ;^174^^^^^159^189^result.combine ( results[i] ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P14_Delete_Statement]^^174^^^^^159^189^result.combine ( results[i] ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P11_Insert_Donor_Statement]^result.combine ( passResult ) ;result.combine ( results[i] ) ;^174^^^^^159^189^result.combine ( results[i] ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P1_Replace_Type]^for  (  short  i = 0; i < numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P3_Replace_Literal]^for  ( int i = -2; i < numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P5_Replace_Variable]^result.combine ( resultss[i] ) ;^174^^^^^159^189^result.combine ( results[i] ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[P7_Replace_Invocation]^results[index] = processTask (  ) ;^147^^^^^146^148^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] run [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P8_Replace_Mix]^results[index]  =  results[index] ;^147^^^^^146^148^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] run [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P14_Delete_Statement]^^147^^^^^146^148^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] run [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P11_Insert_Donor_Statement]^Result passResult = processTask (  ) ;results[index] = processAllTasks (  ) ;^147^^^^^146^148^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] run [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P11_Insert_Donor_Statement]^Result result = processAllTasks (  ) ;results[index] = processAllTasks (  ) ;^147^^^^^146^148^results[index] = processAllTasks (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] run [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P4_Replace_Constructor]^Result result = new Result ( true )  ;^181^^^^^180^191^Result result = new Result (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^final Result[] results = new Result[numChildThread];Result result = new Result (  ) ;^181^^^^^180^191^Result result = new Result (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^Result r = execute (  ) ;Result result = new Result (  ) ;^181^^^^^180^191^Result result = new Result (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^Result passResult = processTask (  ) ;Result result = new Result (  ) ;^181^^^^^180^191^Result result = new Result (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^Result r = new Result ( true ) ;Result result = new Result (  ) ;^181^^^^^180^191^Result result = new Result (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^Result result = processAllTasks (  ) ;Result result = new Result (  ) ;^181^^^^^180^191^Result result = new Result (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P3_Replace_Literal]^while ( false )  {^182^^^^^180^191^while ( true )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P2_Replace_Operator]^if  ( passResult != null )  {^184^^^^^180^191^if  ( passResult == null )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P8_Replace_Mix]^if  ( passResult == true )  {^184^^^^^180^191^if  ( passResult == null )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P9_Replace_Statement]^if  ( subtree == null )  {^184^^^^^180^191^if  ( passResult == null )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P15_Unwrap_Block]^break;^184^185^186^187^188^180^191^if  ( passResult == null )  { break; } else { result.combine ( passResult ) ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P16_Remove_Block]^^184^185^186^187^188^180^191^if  ( passResult == null )  { break; } else { result.combine ( passResult ) ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P13_Insert_Block]^if  ( subtree == null )  {     return null; }else {     return taskSupply.get (  ) .processSubtree ( subtree ) ; }^184^^^^^180^191^[Delete]^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P7_Replace_Invocation]^result .notifyCompiler ( c )  ;^187^^^^^180^191^result.combine ( passResult ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P14_Delete_Statement]^^187^^^^^180^191^result.combine ( passResult ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^result.combine ( results[i] ) ;result.combine ( passResult ) ;^187^^^^^180^191^result.combine ( passResult ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P7_Replace_Invocation]^Result passResult = processAllTasks (  ) ;^183^^^^^180^191^Result passResult = processTask (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^Result r = execute (  ) ;Result passResult = processTask (  ) ;^183^^^^^180^191^Result passResult = processTask (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^Result result = new Result (  ) ;Result passResult = processTask (  ) ;^183^^^^^180^191^Result passResult = processTask (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^Result result = processAllTasks (  ) ;Result passResult = processTask (  ) ;^183^^^^^180^191^Result passResult = processTask (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P14_Delete_Statement]^^183^^^^^180^191^Result passResult = processTask (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P11_Insert_Donor_Statement]^results[index] = processAllTasks (  ) ;Result passResult = processTask (  ) ;^183^^^^^180^191^Result passResult = processTask (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P7_Replace_Invocation]^result .notifyCompiler ( compiler )  ;^187^^^^^180^191^result.combine ( passResult ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P8_Replace_Mix]^if  ( passResult == false )  {^184^^^^^180^191^if  ( passResult == null )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P5_Replace_Variable]^return passResult;^190^^^^^180^191^return result;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[P7_Replace_Invocation]^Node subtree = processTask (  ) ;^203^^^^^202^215^Node subtree = getTask (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P14_Delete_Statement]^^203^^^^^202^215^Node subtree = getTask (  ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P2_Replace_Operator]^if  ( subtree != null )  {^205^^^^^202^215^if  ( subtree == null )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P8_Replace_Mix]^if  ( subtree == false )  {^205^^^^^202^215^if  ( subtree == null )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P9_Replace_Statement]^if  ( passResult == null )  {^205^^^^^202^215^if  ( subtree == null )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P15_Unwrap_Block]^return null;^205^206^207^208^209^202^215^if  ( subtree == null )  { return null; } else { return taskSupply.get (  ) .processSubtree ( subtree ) ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P16_Remove_Block]^^205^206^207^208^209^202^215^if  ( subtree == null )  { return null; } else { return taskSupply.get (  ) .processSubtree ( subtree ) ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P13_Insert_Block]^if  ( worklist.isEmpty (  )  )  {     return null; }else {     return worklist.remove ( 0 ) ; }^205^^^^^202^215^[Delete]^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P13_Insert_Block]^if  ( passResult == null )  {     break; }else {     result.combine ( passResult ) ; }^205^^^^^202^215^[Delete]^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P5_Replace_Variable]^return subtree.get (  ) .processSubtree ( taskSupply ) ;^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P7_Replace_Invocation]^return taskSupply.get (  )  .processSubtree ( subtree )  ;^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P14_Delete_Statement]^^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P7_Replace_Invocation]^return taskSupply .get ( numWorkers )  .processSubtree ( subtree ) ;^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P8_Replace_Mix]^return taskSupply .get ( numChildThread )  .processSubtree ( subtree ) ;^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P8_Replace_Mix]^return this;^206^^^^^202^215^return null;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P8_Replace_Mix]^return null.get (  )  .processSubtree ( subtree )  ;^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P8_Replace_Mix]^return true;^206^^^^^202^215^return null;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P7_Replace_Invocation]^return taskSupply .get ( i )  .processSubtree ( subtree ) ;^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P8_Replace_Mix]^return 3.get (  ) .processSubtree ( subtree ) ;^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P8_Replace_Mix]^return false;^206^^^^^202^215^return null;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P3_Replace_Literal]^Result r = new Result ( false ) ;^211^^^^^202^215^Result r = new Result ( true ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P4_Replace_Constructor]^Result r = new Result (  )  ;^211^^^^^202^215^Result r = new Result ( true ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P11_Insert_Donor_Statement]^Result r = execute (  ) ;Result r = new Result ( true ) ;^211^^^^^202^215^Result r = new Result ( true ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P11_Insert_Donor_Statement]^Result result = new Result (  ) ;Result r = new Result ( true ) ;^211^^^^^202^215^Result r = new Result ( true ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P7_Replace_Invocation]^return taskSupply .get ( index )  .processSubtree ( subtree ) ;^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P14_Delete_Statement]^^212^^^^^202^215^r.exceptions.add ( e ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P11_Insert_Donor_Statement]^result.exceptions.add ( e ) ;r.exceptions.add ( e ) ;^212^^^^^202^215^r.exceptions.add ( e ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[P7_Replace_Invocation]^if  ( worklist .get ( index )   )  {^221^^^^^218^226^if  ( worklist.isEmpty (  )  )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P9_Replace_Statement]^if  ( !exceptions.isEmpty (  )  )  {^221^^^^^218^226^if  ( worklist.isEmpty (  )  )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P15_Unwrap_Block]^return null;^221^222^223^224^225^218^226^if  ( worklist.isEmpty (  )  )  { return null; } else { return worklist.remove ( 0 ) ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P16_Remove_Block]^^221^222^223^224^225^218^226^if  ( worklist.isEmpty (  )  )  { return null; } else { return worklist.remove ( 0 ) ; }^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P13_Insert_Block]^if  ( subtree == null )  {     return null; }else {     return taskSupply.get (  ) .processSubtree ( subtree ) ; }^221^^^^^218^226^[Delete]^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P3_Replace_Literal]^return worklist.remove ( -4 ) ;^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P7_Replace_Invocation]^return worklist.get ( 0 ) ;^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P12_Insert_Condition]^if  ( worklist.isEmpty (  )  )  { return worklist.remove ( 0 ) ; }^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P3_Replace_Literal]^return worklist.remove ( numWorkers ) ;^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P14_Delete_Statement]^^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P8_Replace_Mix]^return this;^222^^^^^218^226^return null;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P8_Replace_Mix]^return true;^222^^^^^218^226^return null;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P3_Replace_Literal]^return worklist.remove ( -1 ) ;^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P7_Replace_Invocation]^if  ( worklist .get ( numChildThread )   )  {^221^^^^^218^226^if  ( worklist.isEmpty (  )  )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P3_Replace_Literal]^return worklist.remove ( index ) ;^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P3_Replace_Literal]^boolean changed = true;^62^^^^^57^67^boolean changed = false;^[CLASS] Result  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P8_Replace_Mix]^List<JSError> errors ;^63^^^^^58^68^List<JSError> errors = Lists.newArrayList (  ) ;^[CLASS] Result  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P8_Replace_Mix]^List<Exception> exceptions  = null ;^64^^^^^59^69^List<Exception> exceptions = Lists.newArrayList (  ) ;^[CLASS] Result  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[P8_Replace_Mix]^this.changed =  null;^75^^^^^74^76^this.changed = changed;^[CLASS] Result  [METHOD] <init> [RETURN_TYPE] ParallelCompilerPass$Result(boolean)   boolean changed [VARIABLES] List  errors  exceptions  boolean  changed  
[P11_Insert_Donor_Statement]^changed = changed || other.changed;this.changed = changed;^75^^^^^74^76^this.changed = changed;^[CLASS] Result  [METHOD] <init> [RETURN_TYPE] ParallelCompilerPass$Result(boolean)   boolean changed [VARIABLES] List  errors  exceptions  boolean  changed  
[P2_Replace_Operator]^changed = changed && other.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P5_Replace_Variable]^changed = changed || other.changed.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P5_Replace_Variable]^changed = other.changed || changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P5_Replace_Variable]^changed = changed || other;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P8_Replace_Mix]^changed =  changed || null.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P11_Insert_Donor_Statement]^this.changed = changed;changed = changed || other.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P5_Replace_Variable]^errors.addAll ( other.0 ) ;^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P5_Replace_Variable]^errors.addAll ( 0 ) ;^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P5_Replace_Variable]^errors.addAll ( other.errors.errors ) ;^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P5_Replace_Variable]^errors.addAll ( other ) ;^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P14_Delete_Statement]^^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P11_Insert_Donor_Statement]^exceptions.addAll ( other.exceptions ) ;errors.addAll ( other.errors ) ;^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P5_Replace_Variable]^exceptions.addAll ( other.exceptions.exceptions ) ;^84^^^^^81^85^exceptions.addAll ( other.exceptions ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P14_Delete_Statement]^^84^^^^^81^85^exceptions.addAll ( other.exceptions ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P11_Insert_Donor_Statement]^errors.addAll ( other.errors ) ;exceptions.addAll ( other.exceptions ) ;^84^^^^^81^85^exceptions.addAll ( other.exceptions ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[P8_Replace_Mix]^if  ( exceptions.isEmpty (  )  )  {^95^^^^^94^104^if  ( !exceptions.isEmpty (  )  )  {^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P15_Unwrap_Block]^throw new java.lang.RuntimeException(exceptions.get(0));^95^96^97^^^94^104^if  ( !exceptions.isEmpty (  )  )  { throw new RuntimeException  (" ")  ; }^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P16_Remove_Block]^^95^96^97^^^94^104^if  ( !exceptions.isEmpty (  )  )  { throw new RuntimeException  (" ")  ; }^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P13_Insert_Block]^if  ( ! ( exceptions.isEmpty (  )  )  )  {     throw new RuntimeException ( exceptions.get ( 0 )  ) ; }^96^^^^^94^104^[Delete]^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P8_Replace_Mix]^return ;^96^^^^^94^104^throw new RuntimeException  (" ")  ;^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P14_Delete_Statement]^^96^^^^^94^104^throw new RuntimeException  (" ")  ;^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P14_Delete_Statement]^^99^^^^^94^104^c.report ( error ) ;^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P11_Insert_Donor_Statement]^c.reportCodeChange (  ) ;c.report ( error ) ;^99^^^^^94^104^c.report ( error ) ;^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P5_Replace_Variable]^if  ( changedhanged )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P5_Replace_Variable]^if  ( c )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P15_Unwrap_Block]^c.reportCodeChange();^101^102^103^^^94^104^if  ( changed )  { c.reportCodeChange (  ) ; }^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P16_Remove_Block]^^101^102^103^^^94^104^if  ( changed )  { c.reportCodeChange (  ) ; }^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P7_Replace_Invocation]^c.report (  ) ;^102^^^^^94^104^c.reportCodeChange (  ) ;^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P14_Delete_Statement]^^102^^^^^94^104^c.reportCodeChange (  ) ;^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P11_Insert_Donor_Statement]^c.report ( error ) ;c.reportCodeChange (  ) ;^102^^^^^94^104^c.reportCodeChange (  ) ;^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P7_Replace_Invocation]^c .report ( error )  ;^102^^^^^94^104^c.reportCodeChange (  ) ;^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[P8_Replace_Mix]^results[index] ;^147^^^^^146^148^results[index] = processAllTasks (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] void   [VARIABLES] boolean  
[P14_Delete_Statement]^^147^^^^^146^148^results[index] = processAllTasks (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] void   [VARIABLES] boolean  
