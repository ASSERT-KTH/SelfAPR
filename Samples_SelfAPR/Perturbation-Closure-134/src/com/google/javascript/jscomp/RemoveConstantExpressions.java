[P8_Replace_Mix]^private  Result result = new Result (  ) ;^63^^^^^58^68^private final Result result = new Result (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener   [VARIABLES] 
[P8_Replace_Mix]^private  Result result;^124^^^^^119^129^private final Result result;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^46^^^^^45^47^this.compiler = compiler;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  
[P8_Replace_Mix]^this.changeProxy  =  this.changeProxy ;^70^^^^^69^73^this.changeProxy = new AstChangeProxy (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] <init> [RETURN_TYPE] RemoveConstantExpressions$RemoveConstantRValuesCallback()   [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  
[P4_Replace_Constructor]^new RemoveConstantRValuesCallback (  )   ) ;^72^^^^^69^73^new ReportCodeHasChangedListener ( result )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] <init> [RETURN_TYPE] RemoveConstantExpressions$RemoveConstantRValuesCallback()   [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  
[P4_Replace_Constructor]^this.changeProxy.registerListener ( this.changeProxy.registerListener (  new RemoveConstantRValuesCallback (  )   ) ;^71^72^^^^69^73^this.changeProxy.registerListener ( new ReportCodeHasChangedListener ( result )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] <init> [RETURN_TYPE] RemoveConstantExpressions$RemoveConstantRValuesCallback()   [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  
[P7_Replace_Invocation]^this.changeProxy.AstChangeProxy ( new ReportCodeHasChangedListener ( result )  ) ;^71^72^^^^69^73^this.changeProxy.registerListener ( new ReportCodeHasChangedListener ( result )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] <init> [RETURN_TYPE] RemoveConstantExpressions$RemoveConstantRValuesCallback()   [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  
[P14_Delete_Statement]^^71^72^^^^69^73^this.changeProxy.registerListener ( new ReportCodeHasChangedListener ( result )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] <init> [RETURN_TYPE] RemoveConstantExpressions$RemoveConstantRValuesCallback()   [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  
[P8_Replace_Mix]^this.result =  null;^127^^^^^126^128^this.result = result;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] <init> [RETURN_TYPE] Result)   Result result [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  
[P4_Replace_Constructor]^RemoveConstantRValuesCallback cb = new ReportCodeHasChangedListener ( result )  ;^51^^^^^50^54^RemoveConstantRValuesCallback cb = new RemoveConstantRValuesCallback (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( null, externs, cb ) ;^52^^^^^50^54^NodeTraversal.traverse ( null, root, cb ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( null,  cb ) ;^52^^^^^50^54^NodeTraversal.traverse ( null, root, cb ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( null, root ) ;^52^^^^^50^54^NodeTraversal.traverse ( null, root, cb ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( null, cb, root ) ;^52^^^^^50^54^NodeTraversal.traverse ( null, root, cb ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P14_Delete_Statement]^^52^53^^^^50^54^NodeTraversal.traverse ( null, root, cb ) ; cb.getResult (  ) .notifyCompiler ( compiler ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P7_Replace_Invocation]^cb.getSideEffectNodes (  ) .notifyCompiler ( compiler ) ;^53^^^^^50^54^cb.getResult (  ) .notifyCompiler ( compiler ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P7_Replace_Invocation]^cb .getSideEffectNodes ( root )  .notifyCompiler ( compiler ) ;^53^^^^^50^54^cb.getResult (  ) .notifyCompiler ( compiler ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P14_Delete_Statement]^^53^54^^^^50^54^cb.getResult (  ) .notifyCompiler ( compiler ) ; }^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P7_Replace_Invocation]^cb .getSideEffectNodes ( externs )  .notifyCompiler ( compiler ) ;^53^^^^^50^54^cb.getResult (  ) .notifyCompiler ( compiler ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  externs  root  
[P5_Replace_Variable]^trySimplify (  node ) ;^77^^^^^76^78^trySimplify ( parent, node ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  traversal  AstChangeProxy  changeProxy  Result  result  Node  node  parent  
[P5_Replace_Variable]^trySimplify ( parent ) ;^77^^^^^76^78^trySimplify ( parent, node ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  traversal  AstChangeProxy  changeProxy  Result  result  Node  node  parent  
[P5_Replace_Variable]^trySimplify ( node, parent ) ;^77^^^^^76^78^trySimplify ( parent, node ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  traversal  AstChangeProxy  changeProxy  Result  result  Node  node  parent  
[P14_Delete_Statement]^^77^78^^^^76^78^trySimplify ( parent, node ) ; }^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  traversal  AstChangeProxy  changeProxy  Result  result  Node  node  parent  
[P2_Replace_Operator]^if  ( node.getType (  )  < Token.EXPR_RESULT )  {^85^^^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  {^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  != Token.EXPR_RESULT )  {^85^^^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  {^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P15_Unwrap_Block]^return ;^85^86^87^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  { return; }^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P16_Remove_Block]^^85^86^87^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  { return; }^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P7_Replace_Invocation]^if  ( node .getFirstChild (  )   != Token.EXPR_RESULT )  {^85^^^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  {^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^Node exprBody = parent.getFirstChild (  ) ;^89^^^^^84^93^Node exprBody = node.getFirstChild (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P7_Replace_Invocation]^Node exprBody = node .getType (  )  ;^89^^^^^84^93^Node exprBody = node.getFirstChild (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P14_Delete_Statement]^^89^^^^^84^93^Node exprBody = node.getFirstChild (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( node )  )  {^90^^^^^84^93^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( exprBody )  )  {^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P15_Unwrap_Block]^changeProxy.replaceWith(parent, node, getSideEffectNodes(exprBody));^90^91^92^^^84^93^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( exprBody )  )  { changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ; }^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P16_Remove_Block]^^90^91^92^^^84^93^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( exprBody )  )  { changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ; }^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( exprBody, node, getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( parent, parent, getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( parent )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith (  node, getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( parent,  getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( node, parent, getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( parent, exprBody, getSideEffectNodes ( node )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( exprBody, node, getSideEffectNodes ( parent )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P8_Replace_Mix]^changeProxy.replaceWith ( parent, exprBody, getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P14_Delete_Statement]^^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( parent )  )  {^90^^^^^84^93^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( exprBody )  )  {^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( node, node, getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P11_Insert_Donor_Statement]^List<Node> replacements = Lists.newArrayList (  ) ;List<Node> subexpressions = Lists.newArrayList (  ) ;^99^^^^^98^112^List<Node> subexpressions = Lists.newArrayList (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P14_Delete_Statement]^^99^^^^^98^112^List<Node> subexpressions = Lists.newArrayList (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P5_Replace_Variable]^new GatherSideEffectSubexpressionsCallback. CopySideEffectSubexpressions ( null, 1 )  )  ) ;^104^105^^^^98^112^new GatherSideEffectSubexpressionsCallback. CopySideEffectSubexpressions ( null, subexpressions )  )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P4_Replace_Constructor]^NodeTraversal.traverse ( null,  new GatherSideEffectSubexpressionsCallback ( null,^100^101^102^103^^98^112^NodeTraversal.traverse ( null, node, new GatherSideEffectSubexpressionsCallback ( null,^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P5_Replace_Variable]^NodeTraversal.traverse ( null, subexpression, new GatherSideEffectSubexpressionsCallback ( null,^100^101^102^103^^98^112^NodeTraversal.traverse ( null, node, new GatherSideEffectSubexpressionsCallback ( null,^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P11_Insert_Donor_Statement]^List<Node> subexpressions = Lists.newArrayList (  ) ;List<Node> replacements = Lists.newArrayList (  ) ;^107^^^^^98^112^List<Node> replacements = Lists.newArrayList (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P14_Delete_Statement]^^107^^^^^98^112^List<Node> replacements = Lists.newArrayList (  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P5_Replace_Variable]^replacements.add ( new Node ( Token.EXPR_RESULT, node )  ) ;^109^^^^^98^112^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P5_Replace_Variable]^replacements.add ( new Node ( Token.EXPR_RESULT )  ) ;^109^^^^^98^112^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P5_Replace_Variable]^replacements.add ( new Node ( Token. subexpression )  ) ;^109^^^^^98^112^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P14_Delete_Statement]^^109^^^^^98^112^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] AbstractCompiler  compiler  List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P3_Replace_Literal]^result.changed = false;^131^^^^^130^132^result.changed = true;^[CLASS] RemoveConstantExpressions RemoveConstantRValuesCallback ReportCodeHasChangedListener  [METHOD] nodeRemoved [RETURN_TYPE] void   Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  
[P8_Replace_Mix]^private  AstChangeProxy changeProxy;^62^^^^^57^67^private final AstChangeProxy changeProxy;^[CLASS] RemoveConstantRValuesCallback  [METHOD] nodeRemoved [RETURN_TYPE] void   Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  
[P8_Replace_Mix]^private  Result result = new Result (  ) ;^63^^^^^58^68^private final Result result = new Result (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] nodeRemoved [RETURN_TYPE] void   Node node [VARIABLES] AbstractCompiler  compiler  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  
[P8_Replace_Mix]^this.changeProxy ;^70^^^^^69^73^this.changeProxy = new AstChangeProxy (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] <init> [RETURN_TYPE] RemoveConstantExpressions$RemoveConstantRValuesCallback()   [VARIABLES] AstChangeProxy  changeProxy  Result  result  boolean  
[P7_Replace_Invocation]^this.changeProxy.AstChangeProxy ( new ReportCodeHasChangedListener ( result )  ) ;^71^72^^^^69^73^this.changeProxy.registerListener ( new ReportCodeHasChangedListener ( result )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] <init> [RETURN_TYPE] RemoveConstantExpressions$RemoveConstantRValuesCallback()   [VARIABLES] AstChangeProxy  changeProxy  Result  result  boolean  
[P14_Delete_Statement]^^71^72^^^^69^73^this.changeProxy.registerListener ( new ReportCodeHasChangedListener ( result )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] <init> [RETURN_TYPE] RemoveConstantExpressions$RemoveConstantRValuesCallback()   [VARIABLES] AstChangeProxy  changeProxy  Result  result  boolean  
[P5_Replace_Variable]^trySimplify (  node ) ;^77^^^^^76^78^trySimplify ( parent, node ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] boolean  NodeTraversal  traversal  AstChangeProxy  changeProxy  Result  result  Node  node  parent  
[P5_Replace_Variable]^trySimplify ( parent ) ;^77^^^^^76^78^trySimplify ( parent, node ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] boolean  NodeTraversal  traversal  AstChangeProxy  changeProxy  Result  result  Node  node  parent  
[P5_Replace_Variable]^trySimplify ( node, parent ) ;^77^^^^^76^78^trySimplify ( parent, node ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] boolean  NodeTraversal  traversal  AstChangeProxy  changeProxy  Result  result  Node  node  parent  
[P14_Delete_Statement]^^77^78^^^^76^78^trySimplify ( parent, node ) ; }^[CLASS] RemoveConstantRValuesCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] boolean  NodeTraversal  traversal  AstChangeProxy  changeProxy  Result  result  Node  node  parent  
[P2_Replace_Operator]^if  ( node.getType (  )  == Token.EXPR_RESULT )  {^85^^^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  {^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  != Token.EXPR_RESULT )  {^85^^^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  {^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P15_Unwrap_Block]^return ;^85^86^87^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  { return; }^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P16_Remove_Block]^^85^86^87^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  { return; }^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P7_Replace_Invocation]^if  ( node .getFirstChild (  )   != Token.EXPR_RESULT )  {^85^^^^^84^93^if  ( node.getType (  )  != Token.EXPR_RESULT )  {^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^Node exprBody = parent.getFirstChild (  ) ;^89^^^^^84^93^Node exprBody = node.getFirstChild (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P8_Replace_Mix]^Node exprBody = node .getType (  )  ;^89^^^^^84^93^Node exprBody = node.getFirstChild (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P8_Replace_Mix]^Node exprBody = parent .getType (  )  ;^89^^^^^84^93^Node exprBody = node.getFirstChild (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P14_Delete_Statement]^^89^^^^^84^93^Node exprBody = node.getFirstChild (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( node )  )  {^90^^^^^84^93^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( exprBody )  )  {^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P15_Unwrap_Block]^changeProxy.replaceWith(parent, node, getSideEffectNodes(exprBody));^90^91^92^^^84^93^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( exprBody )  )  { changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ; }^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P16_Remove_Block]^^90^91^92^^^84^93^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( exprBody )  )  { changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ; }^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( exprBody, node, getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( parent, parent, getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( parent )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith (  node, getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( parent,  getSideEffectNodes ( exprBody )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( exprBody, node, getSideEffectNodes ( parent )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^changeProxy.replaceWith ( parent, exprBody, getSideEffectNodes ( node )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P14_Delete_Statement]^^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P5_Replace_Variable]^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( parent )  )  {^90^^^^^84^93^if  ( !NodeUtil.nodeTypeMayHaveSideEffects ( exprBody )  )  {^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P8_Replace_Mix]^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( node )  ) ;^91^^^^^84^93^changeProxy.replaceWith ( parent, node, getSideEffectNodes ( exprBody )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] trySimplify [RETURN_TYPE] void   Node parent Node node [VARIABLES] boolean  AstChangeProxy  changeProxy  Result  result  Node  exprBody  node  parent  
[P11_Insert_Donor_Statement]^List<Node> replacements = Lists.newArrayList (  ) ;List<Node> subexpressions = Lists.newArrayList (  ) ;^99^^^^^98^112^List<Node> subexpressions = Lists.newArrayList (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P14_Delete_Statement]^^99^^^^^98^112^List<Node> subexpressions = Lists.newArrayList (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P8_Replace_Mix]^new GatherSideEffectSubexpressionsCallback ( null, new GatherSideEffectSubexpressionsCallback. CopySideEffectSubexpressions ( null, null )  )  ) ;^102^103^104^105^^98^112^new GatherSideEffectSubexpressionsCallback ( null, new GatherSideEffectSubexpressionsCallback. CopySideEffectSubexpressions ( null, subexpressions )  )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P4_Replace_Constructor]^NodeTraversal.traverse ( null,  new GatherSideEffectSubexpressionsCallback ( null,^100^101^102^103^^98^112^NodeTraversal.traverse ( null, node, new GatherSideEffectSubexpressionsCallback ( null,^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P5_Replace_Variable]^NodeTraversal.traverse ( null, subexpression, new GatherSideEffectSubexpressionsCallback ( null,^100^101^102^103^^98^112^NodeTraversal.traverse ( null, node, new GatherSideEffectSubexpressionsCallback ( null,^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P11_Insert_Donor_Statement]^List<Node> subexpressions = Lists.newArrayList (  ) ;List<Node> replacements = Lists.newArrayList (  ) ;^107^^^^^98^112^List<Node> replacements = Lists.newArrayList (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P14_Delete_Statement]^^107^^^^^98^112^List<Node> replacements = Lists.newArrayList (  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P5_Replace_Variable]^replacements.add ( new Node ( Token.EXPR_RESULT, node )  ) ;^109^^^^^98^112^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P5_Replace_Variable]^replacements.add ( new Node ( Token.EXPR_RESULT )  ) ;^109^^^^^98^112^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P5_Replace_Variable]^replacements.add ( new Node ( Token. subexpression )  ) ;^109^^^^^98^112^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P14_Delete_Statement]^^109^^^^^98^112^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] RemoveConstantRValuesCallback  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node node [VARIABLES] List  replacements  subexpressions  boolean  AstChangeProxy  changeProxy  Result  result  Node  node  subexpression  
[P8_Replace_Mix]^private  Result result;^124^^^^^119^129^private final Result result;^[CLASS] ReportCodeHasChangedListener  [METHOD] getResult [RETURN_TYPE] Result   [VARIABLES] AstChangeProxy  changeProxy  Result  result  boolean  
[P8_Replace_Mix]^this.result =  null;^127^^^^^126^128^this.result = result;^[CLASS] ReportCodeHasChangedListener  [METHOD] <init> [RETURN_TYPE] Result)   Result result [VARIABLES] Result  result  boolean  
[P3_Replace_Literal]^result.changed = false;^131^^^^^130^132^result.changed = true;^[CLASS] ReportCodeHasChangedListener  [METHOD] nodeRemoved [RETURN_TYPE] void   Node node [VARIABLES] Result  result  Node  node  boolean  
