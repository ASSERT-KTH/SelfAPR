[P8_Replace_Mix]^private  AbstractCompiler compiler;^41^^^^^36^46^private final AbstractCompiler compiler;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P8_Replace_Mix]^private  Callback callback;^42^^^^^37^47^private final Callback callback;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P3_Replace_Literal]^public static final DiagnosticType NODE_TRAVERSAL_ERROR = DiagnosticType.error ( "JSC_NODE_TRAVERSAL_ERRORVE", "{0}" ) ;^47^48^^^^47^48^public static final DiagnosticType NODE_TRAVERSAL_ERROR = DiagnosticType.error ( "JSC_NODE_TRAVERSAL_ERROR", "{0}" ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P3_Replace_Literal]^public static final DiagnosticType NODE_TRAVERSAL_ERROR = DiagnosticType.error ( "JSC_NODE_TRAVERSAL_ERROR", "{0" ) ;^47^48^^^^47^48^public static final DiagnosticType NODE_TRAVERSAL_ERROR = DiagnosticType.error ( "JSC_NODE_TRAVERSAL_ERROR", "{0}" ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P8_Replace_Mix]^public static  DiagnosticType NODE_TRAVERSAL_ERROR = DiagnosticType.error ( "JSC_NODE_TRAVERSAL_ERROR", "{0}" ) ;^47^48^^^^47^48^public static final DiagnosticType NODE_TRAVERSAL_ERROR = DiagnosticType.error ( "JSC_NODE_TRAVERSAL_ERROR", "{0}" ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P8_Replace_Mix]^private final Deque<Scope> scopes  = null ;^55^^^^^50^60^private final Deque<Scope> scopes = new ArrayDeque<Scope> (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P8_Replace_Mix]^private  Deque<Node> scopeRoots = new ArrayDeque<Node> (  ) ;^61^^^^^56^66^private final Deque<Node> scopeRoots = new ArrayDeque<Node> (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P8_Replace_Mix]^Deque<ControlFlowGraph<Node>> cfgs ;^70^^^^^65^75^Deque<ControlFlowGraph<Node>> cfgs = new LinkedList<ControlFlowGraph<Node>> (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P1_Replace_Type]^private char sourceName;^73^^^^^68^78^private String sourceName;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P8_Replace_Mix]^private  boolean include;^169^^^^^164^174^private final boolean include;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P1_Replace_Type]^private static final char MISSING_SOURCE = "[source unknown]";^288^^^^^283^293^private static final String MISSING_SOURCE = "[source unknown]";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P3_Replace_Literal]^private static final String MISSING_SOURCE = "usource unknown]";^288^^^^^283^293^private static final String MISSING_SOURCE = "[source unknown]";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback   [VARIABLES] 
[P3_Replace_Literal]^this ( nodeTypes, false ) ;^176^^^^^175^177^this ( nodeTypes, true ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] Set)   Integer> nodeTypes [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^this ( null, true ) ;^176^^^^^175^177^this ( nodeTypes, true ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] Set)   Integer> nodeTypes [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^176^^^^^175^177^this ( nodeTypes, true ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] Set)   Integer> nodeTypes [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^this.nodeTypes =  null;^186^^^^^184^188^this.nodeTypes = nodeTypes;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] Set,boolean)   Integer> nodeTypes boolean include [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^this.include =  null;^187^^^^^184^188^this.include = include;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] Set,boolean)   Integer> nodeTypes boolean include [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P4_Replace_Constructor]^this (  cb, new SyntacticScopeCreator ( compiler )  ) ;^200^^^^^199^201^this ( compiler, cb, new SyntacticScopeCreator ( compiler )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] NodeTraversal$Callback)   AbstractCompiler compiler Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P4_Replace_Constructor]^this ( compiler,  new SyntacticScopeCreator ( compiler )  ) ;^200^^^^^199^201^this ( compiler, cb, new SyntacticScopeCreator ( compiler )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] NodeTraversal$Callback)   AbstractCompiler compiler Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^this ( compiler, callback, new SyntacticScopeCreator ( compiler )  ) ;^200^^^^^199^201^this ( compiler, cb, new SyntacticScopeCreator ( compiler )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] NodeTraversal$Callback)   AbstractCompiler compiler Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^this ( cb, compiler, new SyntacticScopeCreator ( compiler )  ) ;^200^^^^^199^201^this ( compiler, cb, new SyntacticScopeCreator ( compiler )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] NodeTraversal$Callback)   AbstractCompiler compiler Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^200^^^^^199^201^this ( compiler, cb, new SyntacticScopeCreator ( compiler )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] NodeTraversal$Callback)   AbstractCompiler compiler Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^this.callback = callback;^209^^^^^207^216^this.callback = cb;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( cb  >  ScopedCallback )  {^210^^^^^207^216^if  ( cb instanceof ScopedCallback )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( callback instanceof ScopedCallback )  {^210^^^^^207^216^if  ( cb instanceof ScopedCallback )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^this.scopeCallback = ((com.google.javascript.jscomp.NodeTraversal.ScopedCallback) (cb));^210^211^212^^^207^216^if  ( cb instanceof ScopedCallback )  { this.scopeCallback =  ( ScopedCallback )  cb; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^210^211^212^^^207^216^if  ( cb instanceof ScopedCallback )  { this.scopeCallback =  ( ScopedCallback )  cb; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( type ==  ( SCRIPT )  )  {     sourceName = getSourceName ( n ) ; }^210^^^^^207^216^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^this.scopeCallback =   ( ScopedCallback )  cb;^211^^^^^207^216^this.scopeCallback =  ( ScopedCallback )  cb;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( cb instanceof ScopedCallback )  {     this.scopeCallback =  (  ( ScopedCallback )   ( cb )  ) ; }^211^^^^^207^216^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( src == null )  {     src = MISSING_SOURCE; }^211^^^^^207^216^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( n == null )  {     return  ( MISSING_SOURCE )  + "\n"; }^211^^^^^207^216^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^this.compiler =  null;^213^^^^^207^216^this.compiler = compiler;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^this.scopeCreator = scopeCreator;this.compiler = compiler;^213^^^^^207^216^this.compiler = compiler;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^this.sourceName  = null ;^214^^^^^207^216^this.sourceName = "";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^sourceName = "";this.sourceName = "";^214^^^^^207^216^this.sourceName = "";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^this.scopeCreator =  null;^215^^^^^207^216^this.scopeCreator = scopeCreator;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.scopeCreator = scopeCreator;^215^^^^^207^216^this.scopeCreator = scopeCreator;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler Callback cb ScopeCreator scopeCreator [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^return false;^131^^^^^129^132^return true;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return parent == null && parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return parent != null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return parent == null || parent.getType (  )  == Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return parent == null || parent.getType (  )  != Token.FUNCTION || n != parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return curNode == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return parent == curNodeull || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return n == parentull || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent .getType (  )  ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return curNode ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return n == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^n == n.getFirstChild (  ) ;^145^^^^^140^146^n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^145^^^^^140^146^n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;n == parent.getFirstChild (  ) ;^145^^^^^140^146^n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^final Node fnName = n.getFirstChild (  ) ;n == parent.getFirstChild (  ) ;^145^^^^^140^146^n == parent.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return parent == null && NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return parent != null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return n == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return parent == null || NodeUtil.isFunctionAnonymous ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isFunctionAnonymous ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil .isFunctionAnonymous ( n )  ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return parent == null || NodeUtil .isFunctionAnonymous ( curNode )  || NodeUtil.isStatementBlock ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^|| NodeUtil.isFunctionAnonymous ( parent ) ;^158^^^^^155^159^|| NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^|| NodeUtil.isStatementBlock ( n ) ;^158^^^^^155^159^|| NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^158^^^^^155^159^|| NodeUtil.isStatementBlock ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return include > nodeTypes.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return include == parentodeTypes.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return n == includeodeTypes.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return nodeTypes == include.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return include == nodeTypes.contains ( n .getParent (  )   ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return include == nodeTypesodeTypes.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return include == n.contains ( nodeTypes.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  sourceName  Deque  cfgs  scopeRoots  scopes  
[P1_Replace_Type]^char message = unexpectedException.getMessage (  ) ;^221^^^^^218^235^String message = unexpectedException.getMessage (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^221^^^^^218^235^String message = unexpectedException.getMessage (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P6_Replace_Expression]^if  (  ( unexpectedException.getMessage (  )  )  + "\n" + formatNodeContext ( "Node", curNode ) )  {^226^^^^^218^235^if  ( !sourceName.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P6_Replace_Expression]^if  ( unexpectedException.getMessage (  )  + "\n" )  {^226^^^^^218^235^if  ( !sourceName.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P6_Replace_Expression]^if  ( curNode == null )  {^226^^^^^218^235^if  ( !sourceName.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P9_Replace_Statement]^if  ( scopeRoots.isEmpty (  )  )  {^226^^^^^218^235^if  ( !sourceName.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P9_Replace_Statement]^if  ( roots.isEmpty (  )  )  {^226^^^^^218^235^if  ( !sourceName.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^message = unexpectedException.getMessage (  <=  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^message = unexpectedException.getMessage (  >>  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^message = unexpectedException.getMessage (  )   !=  "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode != null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^message = unexpectedException.getMessage (  )  + "" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "ode", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", parent )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node" )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^message = curNode.getMessage (  )  + "\n" + formatNodeContext ( "Node", unexpectedException )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^message = unexpectedException.getMessage (  )  + "\n" + formatNodePosition ( "Node", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == true ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^formatNodeContext ( "Node", parent )  + ( curNode == null ? "" : formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^229^230^231^232^^218^235^formatNodeContext ( "Node", curNode )  + ( curNode == null ? "" : formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P6_Replace_Expression]^formatNodeContext ( "Node", curNode )  + ( formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^229^230^231^232^^218^235^formatNodeContext ( "Node", curNode )  + ( curNode == null ? "" : formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^formatNodePosition ( "Node", curNode )  + ( curNode == null ? "" : formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^229^230^231^232^^218^235^formatNodeContext ( "Node", curNode )  + ( curNode == null ? "" : formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^229^230^231^232^233^218^235^formatNodeContext ( "Node", curNode )  + ( curNode == null ? "" : formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^formatNodeContext ( "Pararent", curNode.getParent (  )  )  ) ;^232^^^^^218^235^formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^formatNodeContext ( "Parent", parent.getParent (  )  )  ) ;^232^^^^^218^235^formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^formatNodePosition ( "Parent", curNode.getParent (  )  )  ) ;^232^^^^^218^235^formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^formatNodeContext ( "Parent", curNode.getLineno (  )  )  ) ;^232^^^^^218^235^formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^232^233^^^^218^235^formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^formatNodeContext ( "Parent", parent.getLineno (  )  )  ) ;^232^^^^^218^235^formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^message = unexpectedException.getMessage (  &  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^message = unexpectedException.getMessage (  ==  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^message = unexpectedException.getMessage (  )   ==  "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "oode", curNode )  + ( curNode == null ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == this ?^227^228^229^230^^218^235^message = unexpectedException.getMessage (  )  + "\n" + formatNodeContext ( "Node", curNode )  + ( curNode == null ?^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^formatNodeContext ( "NodeNo", curNode )  + ( curNode == null ? "" : formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^229^230^231^232^^218^235^formatNodeContext ( "Node", curNode )  + ( curNode == null ? "" : formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^formatNodeContext ( "aarent", curNode.getParent (  )  )  ) ;^232^^^^^218^235^formatNodeContext ( "Parent", curNode.getParent (  )  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^compiler.throwInternalError ( sourceName, unexpectedException ) ;^234^^^^^218^235^compiler.throwInternalError ( message, unexpectedException ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^compiler.throwInternalError (  unexpectedException ) ;^234^^^^^218^235^compiler.throwInternalError ( message, unexpectedException ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^compiler.throwInternalError ( message ) ;^234^^^^^218^235^compiler.throwInternalError ( message, unexpectedException ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^compiler.throwInternalError ( unexpectedException, message ) ;^234^^^^^218^235^compiler.throwInternalError ( message, unexpectedException ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^compiler.getSourceLine ( message, unexpectedException ) ;^234^^^^^218^235^compiler.throwInternalError ( message, unexpectedException ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^234^^^^^218^235^compiler.throwInternalError ( message, unexpectedException ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] throwUnexpectedException [RETURN_TYPE] void   Exception unexpectedException [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^if  ( n != null )  {^238^^^^^237^243^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( parent == null )  {^238^^^^^237^243^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P6_Replace_Expression]^if  ( "  " + label + ": NULL" )  {^238^^^^^237^243^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P6_Replace_Expression]^if  ( "  " + label )  {^238^^^^^237^243^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^if  ( n == false )  {^238^^^^^237^243^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( src == null )  {^238^^^^^237^243^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^return ("  " + label) + ": NULL";^238^239^240^^^237^243^if  ( n == null )  { return "  " + label + ": NULL"; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^238^239^240^^^237^243^if  ( n == null )  { return "  " + label + ": NULL"; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return "  <=  " + label + ": NULL";^239^^^^^237^243^return "  " + label + ": NULL";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return "  "  !=  label + ": NULL";^239^^^^^237^243^return "  " + label + ": NULL";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^return "   " + label + ": NULL";^239^^^^^237^243^return "  " + label + ": NULL";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^return "  " + label + "  NULL";^239^^^^^237^243^return "  " + label + ": NULL";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return "  " + sourceName + ": NULL";^239^^^^^237^243^return "  " + label + ": NULL";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( n == null )  {     return  ( "  " + label )  + ": NULL"; }^239^^^^^237^243^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return "  &  " + label + ": NULL";^239^^^^^237^243^return "  " + label + ": NULL";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P1_Replace_Type]^return "  " + label + " ( " + n.tochar ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return "  <=  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return "  <<  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return "  &  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return "  "  <  label  <  " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return "  "  !=  label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^return "   " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^return "  " + label + " ( " + n.toString ( true, true, true )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return "  " + sourceName + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return "  " + label + " ( " + parent.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return "  " + n + " ( " + label.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + traverse ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return "  " + label + " ( " + parent.toString ( false, false, false )  + " ) : " + traverse ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return "  " + label + " ( " + n .getFirstChild (  )   + " ) : " + formatNodePosition ( n ) ;^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^241^242^^^^237^243^return "  " + label + " ( " + n.toString ( false, false, false )  + " ) : " + formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^+ formatNodePosition ( parent ) ;^242^^^^^237^243^+ formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^+ traverse ( n ) ;^242^^^^^237^243^+ formatNodePosition ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^242^243^^^^237^243^+ formatNodePosition ( n ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodeContext [RETURN_TYPE] String   String label Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^sourceName ;^250^^^^^248^258^sourceName = "";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^this.sourceName = "";sourceName = "";^250^^^^^248^258^sourceName = "";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^curNode = parent;^251^^^^^248^258^curNode = root;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^curNode = node;curNode = root;^251^^^^^248^258^curNode = root;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^curNode = scopeRoot;curNode = root;^251^^^^^248^258^curNode = root;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^curNode = n;curNode = root;^251^^^^^248^258^curNode = root;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^pushScope ( parent ) ;^252^^^^^248^258^pushScope ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^traverse ( root ) ;^252^^^^^248^258^pushScope ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^traverse ( parent ) ;^252^^^^^248^258^pushScope ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^252^253^^^^248^258^pushScope ( root ) ; traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^t.traverse ( root ) ;pushScope ( root ) ;^252^^^^^248^258^pushScope ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;pushScope ( root ) ;^252^^^^^248^258^pushScope ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;pushScope ( root ) ;^252^^^^^248^258^pushScope ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( refinedScope ) ;pushScope ( root ) ;^252^^^^^248^258^pushScope ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^popScope (  ) ;pushScope ( root ) ;^252^^^^^248^258^pushScope ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;pushScope ( root ) ;^252^^^^^248^258^pushScope ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^traverseBranch ( parent, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^traverseFunction ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^traverseFunction ( parent, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^t.traverse ( root ) ;traverseBranch ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^t.traverseRoots ( roots ) ;traverseBranch ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( root, null ) ;^253^^^^^248^258^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^getScope (  ) ;^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;popScope (  ) ;^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;popScope (  ) ;^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;popScope (  ) ;^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;popScope (  ) ;^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;popScope (  ) ;^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;popScope (  ) ;^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;popScope (  ) ;^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;popScope (  ) ;^254^^^^^248^258^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^253^254^^^^248^258^traverseBranch ( root, null ) ; popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^traverseRoots  (" ")  ;^256^^^^^248^258^throwUnexpectedException  (" ")  ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^256^^^^^248^258^throwUnexpectedException  (" ")  ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   Node root [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^traverse ( Lists.newArrayList ( roots )  ) ;^261^^^^^260^262^traverseRoots ( Lists.newArrayList ( roots )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void    roots [VARIABLES] ScopedCallback  scopeCallback  Node[]  roots  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^261^^^^^260^262^traverseRoots ( Lists.newArrayList ( roots )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void    roots [VARIABLES] ScopedCallback  scopeCallback  Node[]  roots  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( roots.get (  )  )  {^265^^^^^264^286^if  ( roots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P9_Replace_Statement]^if  ( !sourceName.isEmpty (  )  )  {^265^^^^^264^286^if  ( roots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P9_Replace_Statement]^if  ( scopeRoots.isEmpty (  )  )  {^265^^^^^264^286^if  ( roots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P15_Unwrap_Block]^return ;^265^266^267^^^264^286^if  ( roots.isEmpty (  )  )  { return; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P16_Remove_Block]^^265^266^267^^^264^286^if  ( roots.isEmpty (  )  )  { return; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P13_Insert_Block]^if  ( line >= 0 )  {     return line; }^265^^^^^264^286^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P13_Insert_Block]^if  ( scopeRoots.isEmpty (  )  )  {     return scope; }^265^^^^^264^286^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^sourceName ;^273^^^^^264^286^sourceName = "";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^this.sourceName = "";sourceName = "";^273^^^^^264^286^sourceName = "";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^curNode = root;^274^^^^^264^286^curNode = scopeRoot;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^curNode = node;curNode = scopeRoot;^274^^^^^264^286^curNode = scopeRoot;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^curNode = root;curNode = scopeRoot;^274^^^^^264^286^curNode = scopeRoot;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^curNode = n;curNode = scopeRoot;^274^^^^^264^286^curNode = scopeRoot;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^Node scopeRoot = roots.get ( -2 ) .getParent (  ) ;^270^^^^^264^286^Node scopeRoot = roots.get ( 0 ) .getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^Node scopeRoot = roots .isEmpty (  )^270^^^^^264^286^Node scopeRoot = roots.get ( 0 ) .getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^Node scopeRoot = roots.get ( -3 ) .getParent (  ) ;^270^^^^^264^286^Node scopeRoot = roots.get ( 0 ) .getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^Node scopeRoot = roots.get ( 0 )  .getLineno (  )  ;^270^^^^^264^286^Node scopeRoot = roots.get ( 0 ) .getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^270^^^^^264^286^Node scopeRoot = roots.get ( 0 ) .getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^Preconditions.checkState ( scopeRoot == null ) ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^Preconditions.checkState ( parent != null ) ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^Preconditions .checkNotNull ( root )  ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^Preconditions.checkState ( root != null ) ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( parent ) ;Preconditions.checkState ( scopeRoot != null ) ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( s.isGlobal (  )  ) ;Preconditions.checkState ( scopeRoot != null ) ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;Preconditions.checkState ( scopeRoot != null ) ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;Preconditions.checkState ( scopeRoot != null ) ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;Preconditions.checkState ( scopeRoot != null ) ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( curNode != null ) ;Preconditions.checkState ( scopeRoot != null ) ;^271^^^^^264^286^Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^pushScope ( root ) ;^275^^^^^264^286^pushScope ( scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^traverse ( scopeRoot ) ;^275^^^^^264^286^pushScope ( scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^275^^^^^264^286^pushScope ( scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;pushScope ( scopeRoot ) ;^275^^^^^264^286^pushScope ( scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;pushScope ( scopeRoot ) ;^275^^^^^264^286^pushScope ( scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( refinedScope ) ;pushScope ( scopeRoot ) ;^275^^^^^264^286^pushScope ( scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;pushScope ( scopeRoot ) ;^275^^^^^264^286^pushScope ( scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^popScope (  ) ;pushScope ( scopeRoot ) ;^275^^^^^264^286^pushScope ( scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^Preconditions.checkState ( root.getParent (  )  != scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^Preconditions.checkState ( parent.getParent (  )  == scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^Preconditions.checkState ( root.getParent (  )  == parent ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^Preconditions.checkState ( scopeRoot.getParent (  )  == root ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^278^279^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ; traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( s.isGlobal (  )  ) ;Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( scopeRoot != null ) ;Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( curNode != null ) ;Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^Preconditions.checkState ( scopeRoot.getParent (  )  == scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^traverseBranch ( parent, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^traverseBranch ( root, parent ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^traverseBranch (  scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^traverseBranch ( root ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^traverseBranch ( scopeRoot, root ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^traverseFunction ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^traverseFunction ( root, parent ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^t.traverseRoots ( roots ) ;traverseBranch ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( root, scopeRoot ) ;^279^^^^^264^286^traverseBranch ( root, scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^getScope (  ) ;^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;popScope (  ) ;^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;popScope (  ) ;^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;popScope (  ) ;^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;popScope (  ) ;^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;popScope (  ) ;^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;popScope (  ) ;^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;popScope (  ) ;^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;popScope (  ) ;^282^^^^^264^286^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P8_Replace_Mix]^sourceName  =  sourceName ;^273^^^^^264^286^sourceName = "";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^Node scopeRoot = roots.get ( 3 ) .getParent (  ) ;^270^^^^^264^286^Node scopeRoot = roots.get ( 0 ) .getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P3_Replace_Literal]^Node scopeRoot = roots.get ( -1 ) .getParent (  ) ;^270^^^^^264^286^Node scopeRoot = roots.get ( 0 ) .getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^270^271^^^^264^286^Node scopeRoot = roots.get ( 0 ) .getParent (  ) ; Preconditions.checkState ( scopeRoot != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P5_Replace_Variable]^pushScope ( parent ) ;^275^^^^^264^286^pushScope ( scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^Preconditions.checkState ( root.getParent (  )  >= scopeRoot ) ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^Preconditions .checkNotNull ( curNode )  ;^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^278^^^^^264^286^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P7_Replace_Invocation]^traverseRoots  (" ")  ;^284^^^^^264^286^throwUnexpectedException  (" ")  ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P14_Delete_Statement]^^284^^^^^264^286^throwUnexpectedException  (" ")  ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   Node> roots [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  
[P2_Replace_Operator]^if  ( n != null )  {^291^^^^^290^303^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^if  ( scopeRoot == null )  {^291^^^^^290^303^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P6_Replace_Expression]^if  ( MISSING_SOURCE + "\n" )  {^291^^^^^290^303^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P8_Replace_Mix]^if  ( n == this )  {^291^^^^^290^303^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P9_Replace_Statement]^if  ( src == null )  {^291^^^^^290^303^if  ( n == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P15_Unwrap_Block]^return (com.google.javascript.jscomp.NodeTraversal.MISSING_SOURCE) + "\n";^291^292^293^^^290^303^if  ( n == null )  { return MISSING_SOURCE + "\n"; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P16_Remove_Block]^^291^292^293^^^290^303^if  ( n == null )  { return MISSING_SOURCE + "\n"; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P13_Insert_Block]^if  ( src == null )  {     src = MISSING_SOURCE; }^291^^^^^290^303^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P3_Replace_Literal]^return MISSING_SOURCE + "";^292^^^^^290^303^return MISSING_SOURCE + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P8_Replace_Mix]^return sourceName + "\n";^292^^^^^290^303^return MISSING_SOURCE + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P13_Insert_Block]^if  ( src == null )  {     src = MISSING_SOURCE; }^292^^^^^290^303^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P13_Insert_Block]^if  ( n == null )  {     return  ( MISSING_SOURCE )  + "\n"; }^292^^^^^290^303^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^return src + "\n";^292^^^^^290^303^return MISSING_SOURCE + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P1_Replace_Type]^short  lineNumber = n.getLineno (  ) ;^295^^^^^290^303^int lineNumber = n.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^int lineNumber = scopeRoot.getLineno (  ) ;^295^^^^^290^303^int lineNumber = n.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P11_Insert_Donor_Statement]^int columnNumber = n.getCharno (  ) ;int lineNumber = n.getLineno (  ) ;^295^^^^^290^303^int lineNumber = n.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P11_Insert_Donor_Statement]^int line = cur.getLineno (  ) ;int lineNumber = n.getLineno (  ) ;^295^^^^^290^303^int lineNumber = n.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P11_Insert_Donor_Statement]^int type = n.getType (  ) ;int lineNumber = n.getLineno (  ) ;^295^^^^^290^303^int lineNumber = n.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^int lineNumber = root.getLineno (  ) ;^295^^^^^290^303^int lineNumber = n.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P7_Replace_Invocation]^int lineNumber = n .getParent (  )  ;^295^^^^^290^303^int lineNumber = n.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P14_Delete_Statement]^^295^^^^^290^303^int lineNumber = n.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P1_Replace_Type]^short  columnNumber = n.getCharno (  ) ;^296^^^^^290^303^int columnNumber = n.getCharno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^int columnNumber = root.getCharno (  ) ;^296^^^^^290^303^int columnNumber = n.getCharno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P8_Replace_Mix]^int columnNumber = scopeRoot.getCharno (  ) ;^296^^^^^290^303^int columnNumber = n.getCharno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P11_Insert_Donor_Statement]^int line = cur.getLineno (  ) ;int columnNumber = n.getCharno (  ) ;^296^^^^^290^303^int columnNumber = n.getCharno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P11_Insert_Donor_Statement]^final Node fnName = n.getFirstChild (  ) ;int columnNumber = n.getCharno (  ) ;^296^^^^^290^303^int columnNumber = n.getCharno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P11_Insert_Donor_Statement]^int lineNumber = n.getLineno (  ) ;int columnNumber = n.getCharno (  ) ;^296^^^^^290^303^int columnNumber = n.getCharno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P11_Insert_Donor_Statement]^int type = n.getType (  ) ;int columnNumber = n.getCharno (  ) ;^296^^^^^290^303^int columnNumber = n.getCharno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P7_Replace_Invocation]^int columnNumber = n .getParent (  )  ;^296^^^^^290^303^int columnNumber = n.getCharno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P14_Delete_Statement]^^296^297^^^^290^303^int columnNumber = n.getCharno (  ) ; String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P1_Replace_Type]^char src = compiler.getSourceLine ( sourceName, lineNumber ) ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^String src = compiler.getSourceLine ( sourceName, columnNumber ) ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^String src = compiler.getSourceLine ( message, lineNumber ) ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^String src = compiler.getSourceLine ( sourceName ) ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^String src = compiler.getSourceLine (  lineNumber ) ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^String src = lineNumber.getSourceLine ( sourceName, compiler ) ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^String src = sourceName.getSourceLine ( compiler, lineNumber ) ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P7_Replace_Invocation]^String src = compiler.getInput ( sourceName, lineNumber ) ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^String src = compiler.getSourceLine ( lineNumber, sourceName ) ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P7_Replace_Invocation]^String src = compiler .getInput ( src )  ;^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P14_Delete_Statement]^^297^^^^^290^303^String src = compiler.getSourceLine ( sourceName, lineNumber ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P2_Replace_Operator]^if  ( src != null )  {^298^^^^^290^303^if  ( src == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^if  ( sourceName == null )  {^298^^^^^290^303^if  ( src == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P8_Replace_Mix]^if  ( src == false )  {^298^^^^^290^303^if  ( src == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P9_Replace_Statement]^if  ( n == null )  {^298^^^^^290^303^if  ( src == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P15_Unwrap_Block]^src = com.google.javascript.jscomp.NodeTraversal.MISSING_SOURCE;^298^299^300^^^290^303^if  ( src == null )  { src = MISSING_SOURCE; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P16_Remove_Block]^^298^299^300^^^290^303^if  ( src == null )  { src = MISSING_SOURCE; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P13_Insert_Block]^if  ( type ==  ( SCRIPT )  )  {     sourceName = getSourceName ( n ) ; }^298^^^^^290^303^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P13_Insert_Block]^if  ( n == null )  {     return  ( MISSING_SOURCE )  + "\n"; }^298^^^^^290^303^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^src = src;^299^^^^^290^303^src = MISSING_SOURCE;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P13_Insert_Block]^if  ( src == null )  {     src = MISSING_SOURCE; }^299^^^^^290^303^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P13_Insert_Block]^if  ( n == null )  {     return  ( MISSING_SOURCE )  + "\n"; }^299^^^^^290^303^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P2_Replace_Operator]^return sourceName  >  ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^301^302^^^^290^303^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P3_Replace_Literal]^return sourceName + "" + lineNumber + "" + columnNumber + "\n" + src + "\n";^301^302^^^^290^303^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^return sourceName + ":" + columnNumber + ":" + columnNumber + "\n" + src + "\n";^301^302^^^^290^303^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + sourceName + "\n";^301^302^^^^290^303^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^return sourceName + ":" + src + ":" + columnNumber + "\n" + lineNumber + "\n";^301^302^^^^290^303^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^return sourceName + ":" + columnNumber + ":" + lineNumber + "\n" + src + "\n";^301^302^^^^290^303^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^return sourceName + ":" + lineNumber + ":" + src + "\n" + columnNumber + "\n";^301^302^^^^290^303^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P5_Replace_Variable]^return src + ":" + lineNumber + ":" + columnNumber + "\n" + sourceName + "\n";^301^302^^^^290^303^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P8_Replace_Mix]^return sourceName  ;^301^302^^^^290^303^return sourceName + ":" + lineNumber + ":" + columnNumber + "\n" + src + "\n";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] formatNodePosition [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  columnNumber  lineNumber  
[P7_Replace_Invocation]^Preconditions.checkNotNull ( s.isGlobal (  )  ) ;^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Preconditions.checkState ( s .getRootNode (  )   ) ;^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( parent ) ;Preconditions.checkState ( s.isGlobal (  )  ) ;^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;Preconditions.checkState ( s.isGlobal (  )  ) ;^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;Preconditions.checkState ( s.isGlobal (  )  ) ;^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;Preconditions.checkState ( s.isGlobal (  )  ) ;^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;Preconditions.checkState ( s.isGlobal (  )  ) ;^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( scopeRoot != null ) ;Preconditions.checkState ( s.isGlobal (  )  ) ;^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( curNode != null ) ;Preconditions.checkState ( s.isGlobal (  )  ) ;^311^^^^^310^318^Preconditions.checkState ( s.isGlobal (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^sourceName ;^313^^^^^310^318^sourceName = "";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^this.sourceName = "";sourceName = "";^313^^^^^310^318^sourceName = "";^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^curNode = parent;^314^^^^^310^318^curNode = root;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^curNode =  scopeRoot;^314^^^^^310^318^curNode = root;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = node;curNode = root;^314^^^^^310^318^curNode = root;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = scopeRoot;curNode = root;^314^^^^^310^318^curNode = root;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = n;curNode = root;^314^^^^^310^318^curNode = root;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverse ( s ) ;^315^^^^^310^318^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^315^316^^^^310^318^pushScope ( s ) ; traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;pushScope ( s ) ;^315^^^^^310^318^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;pushScope ( s ) ;^315^^^^^310^318^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( refinedScope ) ;pushScope ( s ) ;^315^^^^^310^318^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;pushScope ( s ) ;^315^^^^^310^318^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;pushScope ( s ) ;^315^^^^^310^318^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^popScope (  ) ;pushScope ( s ) ;^315^^^^^310^318^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;pushScope ( s ) ;^315^^^^^310^318^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( scopeRoot, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseFunction ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseBranch ( parent, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^316^317^^^^310^318^traverseBranch ( root, null ) ; popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^t.traverse ( root ) ;traverseBranch ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^t.traverseRoots ( roots ) ;traverseBranch ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( root, null ) ;^316^^^^^310^318^traverseBranch ( root, null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^getScope (  ) ;^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;popScope (  ) ;^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;popScope (  ) ;^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;popScope (  ) ;^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;popScope (  ) ;^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;popScope (  ) ;^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;popScope (  ) ;^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;popScope (  ) ;^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;popScope (  ) ;^317^^^^^310^318^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseWithScope [RETURN_TYPE] void   Node root Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Node next = child.getNext (  ) ;Node n = s.getRootNode (  ) ;^325^^^^^324^342^Node n = s.getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^int line = cur.getLineno (  ) ;Node n = s.getRootNode (  ) ;^325^^^^^324^342^Node n = s.getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^int type = n.getType (  ) ;Node n = s.getRootNode (  ) ;^325^^^^^324^342^Node n = s.getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Node body = args.getNext (  ) ;Node n = s.getRootNode (  ) ;^325^^^^^324^342^Node n = s.getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^325^^^^^324^342^Node n = s.getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^return scopes.peek (  ) .getRootNode (  ) ;Node n = s.getRootNode (  ) ;^325^^^^^324^342^Node n = s.getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( n.getType (  )  <= Token.FUNCTION )  {^326^^^^^324^342^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( scopeRoot.getType (  )  == Token.FUNCTION )  {^326^^^^^324^342^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( n .getParent (  )   == Token.FUNCTION )  {^326^^^^^324^342^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseWithScope ( scopeRoot, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseWithScope (  s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseWithScope ( n ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseWithScope ( s, n ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseBranch ( n, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseBranch ( root, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;traverseWithScope ( n, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;traverseWithScope ( n, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseWithScope ( n, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseWithScope ( n, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseWithScope ( n, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseWithScope ( n, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseWithScope ( n, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^sourceName = getSourceName ( parent ) ;^329^^^^^324^342^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^sourceName = traverse ( n ) ;^329^^^^^324^342^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^sourceName =  getSourceName ( root ) ;^329^^^^^324^342^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^curNode = root;^330^^^^^324^342^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = node;curNode = n;^330^^^^^324^342^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = scopeRoot;curNode = n;^330^^^^^324^342^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = root;curNode = n;^330^^^^^324^342^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Node args = scopeRoot.getFirstChild (  ) .getNext (  ) ;^333^^^^^324^342^Node args = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Node args = n.getFirstChild (  )  .getParent (  )  ;^333^^^^^324^342^Node args = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Node args = n .getType (  )  .getNext (  ) ;^333^^^^^324^342^Node args = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Node args = root.getFirstChild (  ) .getNext (  ) ;^333^^^^^324^342^Node args = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Node body = scopeRoot.getNext (  ) ;^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Node body = args .getParent (  )  ;^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Node body = root.getNext (  ) ;^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Node next = child.getNext (  ) ;Node body = args.getNext (  ) ;^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^final Node body = args.getNext (  ) ;Node body = args.getNext (  ) ;^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Node args = n.getFirstChild (  ) .getNext (  ) ;Node body = args.getNext (  ) ;^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Node n = s.getRootNode (  ) ;Node body = args.getNext (  ) ;^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^final Node args = fnName.getNext (  ) ;Node body = args.getNext (  ) ;^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^sourceName = getSourceName ( scopeRoot ) ;^329^^^^^324^342^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^sourceName = traverse ( scopeRoot ) ;^329^^^^^324^342^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^329^330^^^^324^342^sourceName = getSourceName ( n ) ; curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverse ( s ) ;^331^^^^^324^342^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^331^^^^^324^342^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;pushScope ( s ) ;^331^^^^^324^342^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;pushScope ( s ) ;^331^^^^^324^342^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( refinedScope ) ;pushScope ( s ) ;^331^^^^^324^342^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;pushScope ( s ) ;^331^^^^^324^342^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;pushScope ( s ) ;^331^^^^^324^342^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^popScope (  ) ;pushScope ( s ) ;^331^^^^^324^342^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;pushScope ( s ) ;^331^^^^^324^342^pushScope ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Node args = parent.getFirstChild (  ) .getNext (  ) ;^333^^^^^324^342^Node args = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Node args = scopeRoot.getFirstChild (  )  .getParent (  )  ;^333^^^^^324^342^Node args = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^333^^^^^324^342^Node args = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^333^334^^^^324^342^Node args = n.getFirstChild (  ) .getNext (  ) ; Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^334^335^^^^324^342^Node body = args.getNext (  ) ; traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( scopeRoot, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( args, scopeRoot ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch (  n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( args ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( n, args ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseFunction ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^t.traverseRoots ( roots ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( args, n ) ;^335^^^^^324^342^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( root, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch (  n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( body ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( n, body ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseFunction ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseBranch ( scopeRoot, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^t.traverseRoots ( roots ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( body, n ) ;^336^^^^^324^342^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^getScope (  ) ;^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;popScope (  ) ;^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;popScope (  ) ;^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;popScope (  ) ;^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;popScope (  ) ;^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;popScope (  ) ;^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;popScope (  ) ;^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;popScope (  ) ;^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;popScope (  ) ;^338^^^^^324^342^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^curNode = scopeRoot;^330^^^^^324^342^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.FUNCTION )  {^326^^^^^324^342^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^329^^^^^324^342^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Node body = parent.getNext (  ) ;^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^334^^^^^324^342^Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^335^336^^^^324^342^traverseBranch ( args, n ) ; traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseWithScope ( root, s ) ;^340^^^^^324^342^traverseWithScope ( n, s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseAtScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Preconditions.checkNotNull ( node ) ;^355^^^^^354^364^Preconditions.checkNotNull ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Preconditions.checkNotNull ( root ) ;^355^^^^^354^364^Preconditions.checkNotNull ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^355^^^^^354^364^Preconditions.checkNotNull ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( s.isGlobal (  )  ) ;Preconditions.checkNotNull ( parent ) ;^355^^^^^354^364^Preconditions.checkNotNull ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;Preconditions.checkNotNull ( parent ) ;^355^^^^^354^364^Preconditions.checkNotNull ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( scopeRoot != null ) ;Preconditions.checkNotNull ( parent ) ;^355^^^^^354^364^Preconditions.checkNotNull ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( curNode != null ) ;Preconditions.checkNotNull ( parent ) ;^355^^^^^354^364^Preconditions.checkNotNull ( parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( refinedScope != null || getScope (  )  != refinedScope )  {^356^^^^^354^364^if  ( refinedScope != null && getScope (  )  != refinedScope )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( refinedScope == null && getScope (  )  != refinedScope )  {^356^^^^^354^364^if  ( refinedScope != null && getScope (  )  != refinedScope )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( refinedScope != null && getScope (  )  == refinedScope )  {^356^^^^^354^364^if  ( refinedScope != null && getScope (  )  != refinedScope )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P6_Replace_Expression]^if  ( refinedScope != null ) {^356^^^^^354^364^if  ( refinedScope != null && getScope (  )  != refinedScope )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P6_Replace_Expression]^if  (  getScope (  )  != refinedScope )  {^356^^^^^354^364^if  ( refinedScope != null && getScope (  )  != refinedScope )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( refinedScope != null && popScope (  )  != refinedScope )  {^356^^^^^354^364^if  ( refinedScope != null && getScope (  )  != refinedScope )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^if  (  popScope (  )  != refinedScope )  {^356^^^^^354^364^if  ( refinedScope != null && getScope (  )  != refinedScope )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( scopeRoot, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( node, root ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch (  parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( node ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( parent, node ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseFunction ( node, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseFunction ( scopeRoot, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( node, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( node, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( node, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( node, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( node, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( node, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( node, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( node, parent ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^curNode = scopeRoot;^357^^^^^354^364^curNode = node;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^curNode =  null;^357^^^^^354^364^curNode = node;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = scopeRoot;curNode = node;^357^^^^^354^364^curNode = node;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = root;curNode = node;^357^^^^^354^364^curNode = node;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = n;curNode = node;^357^^^^^354^364^curNode = node;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverse ( refinedScope ) ;^358^^^^^354^364^pushScope ( refinedScope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^358^^^^^354^364^pushScope ( refinedScope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;pushScope ( refinedScope ) ;^358^^^^^354^364^pushScope ( refinedScope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;pushScope ( refinedScope ) ;^358^^^^^354^364^pushScope ( refinedScope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;pushScope ( refinedScope ) ;^358^^^^^354^364^pushScope ( refinedScope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;pushScope ( refinedScope ) ;^358^^^^^354^364^pushScope ( refinedScope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( node, scopeRoot ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch (  parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( node ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( parent, node ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseFunction ( node, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseFunction ( node, scopeRoot ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( node, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( node, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( node, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( node, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( node, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( node, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( node, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( node, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^getScope (  ) ;^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;popScope (  ) ;^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;popScope (  ) ;^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;popScope (  ) ;^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;popScope (  ) ;^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;popScope (  ) ;^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;popScope (  ) ;^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;popScope (  ) ;^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;popScope (  ) ;^360^^^^^354^364^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^358^359^^^^354^364^pushScope ( refinedScope ) ; traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( scopeRoot, parent ) ;^359^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseBranch ( node, scopeRoot ) ;^362^^^^^354^364^traverseBranch ( node, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseInnerNode [RETURN_TYPE] void   Node node Node parent Scope refinedScope [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  Scope  refinedScope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Node cur = scopeRoot;^380^^^^^379^389^Node cur = curNode;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P2_Replace_Operator]^while  ( cur == null )  {^381^^^^^379^389^while  ( cur != null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P5_Replace_Variable]^while  ( root != null )  {^381^^^^^379^389^while  ( cur != null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^while  ( scopeRoot != null )  {^381^^^^^379^389^while  ( cur != null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P3_Replace_Literal]^if  ( line >=line )  {^383^^^^^379^389^if  ( line >=0 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^if  ( line >=0 - 1 )  {^383^^^^^379^389^if  ( line >=0 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P15_Unwrap_Block]^return line;^383^384^385^^^379^389^if  ( line >=0 )  { return line; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P16_Remove_Block]^^383^384^385^^^379^389^if  ( line >=0 )  { return line; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P13_Insert_Block]^if  ( scopeRoots.isEmpty (  )  )  {     return scope; }^383^^^^^379^389^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P13_Insert_Block]^if  ( roots.isEmpty (  )  )  {     return ; }^383^^^^^379^389^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P5_Replace_Variable]^cur = root.getParent (  ) ;^386^^^^^379^389^cur = cur.getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^cur =  scopeRoot.getParent (  ) ;^386^^^^^379^389^cur = cur.getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P1_Replace_Type]^short  line = cur.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P5_Replace_Variable]^int line = parent.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^int line = cur .getParent (  )  ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P11_Insert_Donor_Statement]^Node next = child.getNext (  ) ;int line = cur.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P11_Insert_Donor_Statement]^int columnNumber = n.getCharno (  ) ;int line = cur.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P11_Insert_Donor_Statement]^int lineNumber = n.getLineno (  ) ;int line = cur.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P11_Insert_Donor_Statement]^Node n = s.getRootNode (  ) ;int line = cur.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P11_Insert_Donor_Statement]^int type = n.getType (  ) ;int line = cur.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P5_Replace_Variable]^int line = root.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^int line = node.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P14_Delete_Statement]^^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P11_Insert_Donor_Statement]^cur = cur.getParent (  ) ;int line = cur.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P7_Replace_Invocation]^cur = cur .getLineno (  )  ;^386^^^^^379^389^cur = cur.getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^cur = node.getParent (  ) ;^386^^^^^379^389^cur = cur.getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P14_Delete_Statement]^^386^^^^^379^389^cur = cur.getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P11_Insert_Donor_Statement]^int line = cur.getLineno (  ) ;cur = cur.getParent (  ) ;^386^^^^^379^389^cur = cur.getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^if  ( line >=0 * 1 )  {^383^^^^^379^389^if  ( line >=0 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^cur =  parent.getParent (  ) ;^386^^^^^379^389^cur = cur.getParent (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P1_Replace_Type]^long  line = cur.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P5_Replace_Variable]^int line = scopeRoot.getLineno (  ) ;^382^^^^^379^389^int line = cur.getLineno (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P3_Replace_Literal]^return ;^388^^^^^379^389^return 0;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^return 0 >>> 4;^388^^^^^379^389^return 0;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  line  
[P8_Replace_Mix]^return src;^397^^^^^396^398^return sourceName;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return compiler.getInput ( src ) ;^404^^^^^403^405^return compiler.getInput ( sourceName ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getInput [RETURN_TYPE] CompilerInput   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return sourceName.getInput ( compiler ) ;^404^^^^^403^405^return compiler.getInput ( sourceName ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getInput [RETURN_TYPE] CompilerInput   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return compiler .getInput ( label )  ;^404^^^^^403^405^return compiler.getInput ( sourceName ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getInput [RETURN_TYPE] CompilerInput   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return compiler .getInput ( sourceName )  ;^404^^^^^403^405^return compiler.getInput ( sourceName ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getInput [RETURN_TYPE] CompilerInput   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return compiler.getInput ( message ) ;^404^^^^^403^405^return compiler.getInput ( sourceName ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getInput [RETURN_TYPE] CompilerInput   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^404^^^^^403^405^return compiler.getInput ( sourceName ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getInput [RETURN_TYPE] CompilerInput   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^CompilerInput input = getScope (  ) ;^411^^^^^410^413^CompilerInput input = getInput (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  CompilerInput  input  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^411^412^^^^410^413^CompilerInput input = getInput (  ) ; return input == null ? null : input.getModule (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  CompilerInput  input  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return input != null ? null : input.getModule (  ) ;^412^^^^^410^413^return input == null ? null : input.getModule (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  CompilerInput  input  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P6_Replace_Expression]^return input ( input.getModule (  ) ;^412^^^^^410^413^return input == null ? null : input.getModule (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  CompilerInput  input  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return input == null ? null : input .getModule (  )  ;^412^^^^^410^413^return input == null ? null : input.getModule (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  CompilerInput  input  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return input.getModule (  ) ;^412^^^^^410^413^return input == null ? null : input.getModule (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  CompilerInput  input  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^412^^^^^410^413^return input == null ? null : input.getModule (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getModule [RETURN_TYPE] JSModule   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  CompilerInput  input  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return scopeRoot;^417^^^^^416^418^return curNode;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getCurrentNode [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P4_Replace_Constructor]^NodeTraversal t = new ControlFlowAnalysis ( compiler, false )  ;^425^^^^^423^427^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P4_Replace_Constructor]^NodeTraversal t = new NodeTraversal (  cb ) ;^425^^^^^423^427^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P4_Replace_Constructor]^NodeTraversal t = new NodeTraversal ( compiler ) ;^425^^^^^423^427^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^NodeTraversal t = new NodeTraversal ( compiler, callback ) ;^425^^^^^423^427^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^NodeTraversal t = new NodeTraversal ( cb, compiler ) ;^425^^^^^423^427^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^t.formatNodeContext ( root ) ;^426^^^^^423^427^t.traverse ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^t.traverse ( n ) ;^426^^^^^423^427^t.traverse ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^426^^^^^423^427^t.traverse ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;t.traverse ( root ) ;^426^^^^^423^427^t.traverse ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;t.traverse ( root ) ;^426^^^^^423^427^t.traverse ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^t.traverseRoots ( roots ) ;t.traverse ( root ) ;^426^^^^^423^427^t.traverse ( root ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverse [RETURN_TYPE] void   AbstractCompiler compiler Node root Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P4_Replace_Constructor]^NodeTraversal t = new ControlFlowAnalysis ( compiler, false )  ;^434^^^^^432^436^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P4_Replace_Constructor]^NodeTraversal t = new NodeTraversal (  cb ) ;^434^^^^^432^436^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P4_Replace_Constructor]^NodeTraversal t = new NodeTraversal ( compiler ) ;^434^^^^^432^436^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^NodeTraversal t = new NodeTraversal ( compiler, callback ) ;^434^^^^^432^436^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^NodeTraversal t = new NodeTraversal ( cb, compiler ) ;^434^^^^^432^436^NodeTraversal t = new NodeTraversal ( compiler, cb ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^t.traverseRoots ( null ) ;^435^^^^^432^436^t.traverseRoots ( roots ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^t.formatNodeContext ( roots ) ;^435^^^^^432^436^t.traverseRoots ( roots ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^435^^^^^432^436^t.traverseRoots ( roots ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^t.traverse ( root ) ;t.traverseRoots ( roots ) ;^435^^^^^432^436^t.traverseRoots ( roots ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;t.traverseRoots ( roots ) ;^435^^^^^432^436^t.traverseRoots ( roots ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;t.traverseRoots ( roots ) ;^435^^^^^432^436^t.traverseRoots ( roots ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;t.traverseRoots ( roots ) ;^435^^^^^432^436^t.traverseRoots ( roots ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;t.traverseRoots ( roots ) ;^435^^^^^432^436^t.traverseRoots ( roots ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseRoots [RETURN_TYPE] void   AbstractCompiler compiler Node> roots Callback cb [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  NodeTraversal  t  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  cur  curNode  n  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  List  roots  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P1_Replace_Type]^short  type = n.getType (  ) ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^int type = scopeRoot.getType (  ) ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^int type = scopeRoot .getParent (  )  ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^int columnNumber = n.getCharno (  ) ;int type = n.getType (  ) ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^int line = cur.getLineno (  ) ;int type = n.getType (  ) ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^int lineNumber = n.getLineno (  ) ;int type = n.getType (  ) ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Node n = s.getRootNode (  ) ;int type = n.getType (  ) ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^int type = root.getType (  ) ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^int type = n .getParent (  )  ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^int type = parent.getType (  ) ;^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^443^^^^^428^458^int type = n.getType (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P2_Replace_Operator]^if  ( type <= Token.SCRIPT )  {^444^^^^^429^459^if  ( type == Token.SCRIPT )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P15_Unwrap_Block]^sourceName = com.google.javascript.jscomp.NodeTraversal.getSourceName(n);^444^445^446^^^429^459^if  ( type == Token.SCRIPT )  { sourceName = getSourceName ( n ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P16_Remove_Block]^^444^445^446^^^429^459^if  ( type == Token.SCRIPT )  { sourceName = getSourceName ( n ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P13_Insert_Block]^if  ( cb instanceof ScopedCallback )  {     this.scopeCallback =  (  ( ScopedCallback )   ( cb )  ) ; }^444^^^^^429^459^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P13_Insert_Block]^if  ( src == null )  {     src = MISSING_SOURCE; }^444^^^^^429^459^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^sourceName = getSourceName ( next ) ;^445^^^^^430^460^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^sourceName = traverse ( n ) ;^445^^^^^430^460^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^sourceName =  getSourceName ( parent ) ;^445^^^^^430^460^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P13_Insert_Block]^if  ( src == null )  {     src = MISSING_SOURCE; }^445^^^^^430^460^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P13_Insert_Block]^if  ( type ==  ( SCRIPT )  )  {     sourceName = getSourceName ( n ) ; }^445^^^^^430^460^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P13_Insert_Block]^if  ( n == null )  {     return  ( MISSING_SOURCE )  + "\n"; }^445^^^^^430^460^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^sourceName = getSourceName ( node ) ;^445^^^^^430^460^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^445^^^^^430^460^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^sourceName = getSourceName ( scopeRoot ) ;^445^^^^^430^460^sourceName = getSourceName ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^curNode = node;^448^^^^^433^463^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^curNode =  scopeRoot;^448^^^^^433^463^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^curNode = node;curNode = n;^448^^^^^433^463^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^curNode = scopeRoot;curNode = n;^448^^^^^433^463^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^curNode = root;curNode = n;^448^^^^^433^463^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^if  ( !callback.shouldTraverse ( this, root, parent )  )  return;^449^^^^^434^464^if  ( !callback.shouldTraverse ( this, n, parent )  )  return;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^if  ( !callback.shouldTraverse ( this, n, n )  )  return;^449^^^^^434^464^if  ( !callback.shouldTraverse ( this, n, parent )  )  return;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^if  ( !callback.shouldTraverse ( this,  parent )  )  return;^449^^^^^434^464^if  ( !callback.shouldTraverse ( this, n, parent )  )  return;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^if  ( !callback.shouldTraverse ( this, n )  )  return;^449^^^^^434^464^if  ( !callback.shouldTraverse ( this, n, parent )  )  return;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^if  ( !callback.shouldTraverse ( this, parent, n )  )  return;^449^^^^^434^464^if  ( !callback.shouldTraverse ( this, n, parent )  )  return;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^if  ( callback.shouldTraverse ( this, n, parent )  )  return;^449^^^^^434^464^if  ( !callback.shouldTraverse ( this, n, parent )  )  return;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^if  ( !callback.shouldTraverse ( null, n, parent )  )  return;^449^^^^^434^464^if  ( !callback.shouldTraverse ( this, n, parent )  )  return;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^if  ( !callback.shouldTraverse ( this, next, parent )  )  return;^449^^^^^434^464^if  ( !callback.shouldTraverse ( this, n, parent )  )  return;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^if  ( !callback.shouldTraverse ( this, n, node )  )  return;^449^^^^^434^464^if  ( !callback.shouldTraverse ( this, n, parent )  )  return;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P2_Replace_Operator]^for  ( Node child = n.getFirstChild (  ) ; child == null;  )  {^466^^^^^451^481^for  ( Node child = n.getFirstChild (  ) ; child != null;  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^for  ( Node scopeRoot = n.getFirstChild (  ) ; child != null;  )  {^466^^^^^451^481^for  ( Node child = n.getFirstChild (  ) ; child != null;  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^for  ( Node n = child.getFirstChild (  ) ; child != null;  )  {^466^^^^^451^481^for  ( Node child = n.getFirstChild (  ) ; child != null;  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^for  ( Node child = n .getType (  )  ; child != null;  )  {^466^^^^^451^481^for  ( Node child = n.getFirstChild (  ) ; child != null;  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^for  ( Node child = scopeRoot.getFirstChild (  ) ; child != null;  )  {^466^^^^^451^481^for  ( Node child = n.getFirstChild (  ) ; child != null;  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^child = node;^471^^^^^456^486^child = next;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^child =  null;^471^^^^^456^486^child = next;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^Node next = scopeRoot.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^int line = cur.getLineno (  ) ;Node next = child.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^final Node body = args.getNext (  ) ;Node next = child.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Node args = n.getFirstChild (  ) .getNext (  ) ;Node next = child.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Node n = s.getRootNode (  ) ;Node next = child.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^final Node args = fnName.getNext (  ) ;Node next = child.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Node body = args.getNext (  ) ;Node next = child.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^Node next = node.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^Node next = root.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^469^470^^^^454^484^Node next = child.getNext (  ) ; traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseBranch ( scopeRoot, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseBranch ( child, parent ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseBranch (  n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseBranch ( child ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseBranch ( n, child ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^traverseFunction ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^traverseBranch ( parent, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^470^471^^^^455^485^traverseBranch ( child, n ) ; child = next;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;traverseBranch ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( child, n ) ;^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^child =  scopeRoot;^471^^^^^456^486^child = next;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^Node next = child .getParent (  )  ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P2_Replace_Operator]^Preconditions.checkState ( n.getChildCount (  )  != 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P3_Replace_Literal]^Preconditions.checkState ( n.getChildCount (  )  == 1 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^Preconditions.checkState ( node.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^Preconditions .checkNotNull ( root )  ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^Preconditions.checkState ( n .getCharno (  )   == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^Preconditions.checkState ( next.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( parent ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( s.isGlobal (  )  ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( scopeRoot != null ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( curNode != null ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^Preconditions.checkState ( parent.getChildCount (  )  == 3 ) ;^453^^^^^438^468^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P2_Replace_Operator]^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  <= Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^Preconditions.checkState ( scopeRoot.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.this ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^Preconditions.checkNotNull ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^Preconditions.checkState ( node.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( s.isGlobal (  )  ) ;Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^Preconditions.checkState ( root.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^Preconditions.checkState ( n .getType (  )  .getType (  )  == Token.NAME ) ;^454^^^^^439^469^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^traverseFunction ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^traverseBranch ( n .getType (  )  , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^traverseBranch ( scopeRoot.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^final Node fnName = n.getFirstChild (  ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Node args = n.getFirstChild (  ) .getNext (  ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^n == parent.getFirstChild (  ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( n.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseBranch ( parent.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^traverseBranch ( next.getFirstChild (  ) , n ) ;^457^^^^^442^472^traverseBranch ( n.getFirstChild (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseBranch ( parent.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^traverseFunction ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^traverseBranch ( n.getFirstChild (  )  .getParent (  )^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^traverseBranch ( n .getType (  )  .getNext (  ) .getNext (  ) , n ) ;^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^traverseBranch ( root.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^Node args = n.getFirstChild (  ) .getNext (  ) ;traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^traverseBranch ( node.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseBranch ( next.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseBranch ( scopeRoot.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^458^^^^^443^473^traverseBranch ( n.getFirstChild (  ) .getNext (  ) .getNext (  ) , n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseFunction ( next, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseFunction ( n, scopeRoot ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseFunction (  parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseFunction ( n ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^traverseFunction ( parent, n ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P7_Replace_Invocation]^traverseBranch ( n, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^traverseBranch ( next, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;traverseFunction ( n, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseFunction ( n, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseFunction ( n, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseFunction ( n, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseFunction ( n, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseFunction ( n, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseFunction ( n, parent ) ;^462^^^^^447^477^traverseFunction ( n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^for  ( Node child = root.getFirstChild (  ) ; child != null;  )  {^466^^^^^451^481^for  ( Node child = n.getFirstChild (  ) ; child != null;  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^for  ( Node child = parent.getFirstChild (  ) ; child != null;  )  {^466^^^^^451^481^for  ( Node child = n.getFirstChild (  ) ; child != null;  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^Node next = next.getNext (  ) ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^Node next = parent .getParent (  )  ;^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^469^^^^^454^484^Node next = child.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^470^^^^^455^485^traverseBranch ( child, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^curNode = scopeRoot;^476^^^^^461^491^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^curNode = node;curNode = n;^476^^^^^461^491^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^curNode = scopeRoot;curNode = n;^476^^^^^461^491^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P11_Insert_Donor_Statement]^curNode = root;curNode = n;^476^^^^^461^491^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^callback.visit ( this, scopeRoot, parent ) ;^477^^^^^462^492^callback.visit ( this, n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^callback.visit ( this, n, root ) ;^477^^^^^462^492^callback.visit ( this, n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^callback.visit ( this,  parent ) ;^477^^^^^462^492^callback.visit ( this, n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^callback.visit ( this, n ) ;^477^^^^^462^492^callback.visit ( this, n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P5_Replace_Variable]^callback.visit ( this, parent, n ) ;^477^^^^^462^492^callback.visit ( this, n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P8_Replace_Mix]^callback.visit ( this, n, node ) ;^477^^^^^462^492^callback.visit ( this, n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P14_Delete_Statement]^^477^^^^^462^492^callback.visit ( this, n, parent ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseBranch [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  int  type  
[P2_Replace_Operator]^Preconditions.checkState ( n.getChildCount (  )  >= 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^Preconditions.checkState ( n.getChildCount (  )  == 2 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Preconditions.checkState ( node.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Preconditions .checkNotNull ( body )  ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Preconditions.checkState ( scopeRoot.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( parent ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( s.isGlobal (  )  ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( scopeRoot != null ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( curNode != null ) ;Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Preconditions.checkState ( next.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Preconditions.checkState ( n .getCharno (  )   == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Preconditions.checkState ( root.getChildCount (  )  == 3 ) ;^484^^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^484^485^^^^469^499^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ; Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^Preconditions.checkState ( n.getType (  )  <= Token.FUNCTION ) ;^485^^^^^470^500^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Preconditions.checkState ( next.getType (  )  == Token.FUNCTION ) ;^485^^^^^470^500^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Preconditions.checkNotNull ( n.getType (  )  == Token.FUNCTION ) ;^485^^^^^470^500^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Preconditions.checkState ( n.getType (  )  == Token.this ) ;^485^^^^^470^500^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^485^^^^^470^500^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P12_Insert_Condition]^if  ( n.getType (  )  == Token.FUNCTION )  { Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ; }^485^^^^^470^500^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Preconditions.checkState ( root.getType (  )  == Token.FUNCTION ) ;^485^^^^^470^500^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Preconditions.checkState ( n .getParent (  )   == Token.FUNCTION ) ;^485^^^^^470^500^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^final Node fnName = scopeRoot.getFirstChild (  ) ;^487^^^^^472^502^final Node fnName = n.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^int columnNumber = n.getCharno (  ) ;final Node fnName = n.getFirstChild (  ) ;^487^^^^^472^502^final Node fnName = n.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^final Node body = args.getNext (  ) ;final Node fnName = n.getFirstChild (  ) ;^487^^^^^472^502^final Node fnName = n.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^final Node args = fnName.getNext (  ) ;final Node fnName = n.getFirstChild (  ) ;^487^^^^^472^502^final Node fnName = n.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^final Node fnName = next.getFirstChild (  ) ;^487^^^^^472^502^final Node fnName = n.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^final Node fnName = node.getFirstChild (  ) ;^487^^^^^472^502^final Node fnName = n.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^487^^^^^472^502^final Node fnName = n.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;final Node fnName = n.getFirstChild (  ) ;^487^^^^^472^502^final Node fnName = n.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^n == parent.getFirstChild (  ) ;final Node fnName = n.getFirstChild (  ) ;^487^^^^^472^502^final Node fnName = n.getFirstChild (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^boolean anonymous = parent != null || NodeUtil.isFunctionAnonymous ( n ) ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^boolean anonymous = parent == null && NodeUtil.isFunctionAnonymous ( n ) ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^boolean anonymous = node != null && NodeUtil.isFunctionAnonymous ( n ) ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^boolean anonymous = parent != nodeull && NodeUtil.isFunctionAnonymous ( n ) ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^boolean anonymous = n != parentull && NodeUtil.isFunctionAnonymous ( n ) ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^boolean anonymous = parent != null && NodeUtil.isStatementBlock ( n ) ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^boolean anonymous = parent != null && NodeUtil .isControlStructure ( node )  ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^boolean anonymous = parent != nodeull && NodeUtil.isStatementBlock ( n ) ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^boolean anonymous = parent != nextull && NodeUtil.isFunctionAnonymous ( n ) ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^boolean anonymous = parent != scopeRootull && NodeUtil.isStatementBlock ( n ) ;^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^489^^^^^474^504^boolean anonymous = parent != null && NodeUtil.isFunctionAnonymous ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( !include )  {^491^^^^^476^506^if  ( !anonymous )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( anonymous )  {^491^^^^^476^506^if  ( !anonymous )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^traverseBranch(fnName, n);^491^492^493^494^^476^506^if  ( !anonymous )  {  traverseBranch ( fnName, n ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^491^492^493^494^^476^506^if  ( !anonymous )  {  traverseBranch ( fnName, n ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( anonymous )  {     traverseBranch ( fnName, n ) ; }^491^^^^^476^506^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( node, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( fnName, parent ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch (  n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( fnName ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( n, fnName ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseFunction ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseFunction ( fnName, scopeRoot ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;traverseBranch ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( fnName, n ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( fnName, scopeRoot ) ;^493^^^^^478^508^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^curNode = scopeRoot;^496^^^^^481^511^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^curNode =  node;^496^^^^^481^511^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = node;curNode = n;^496^^^^^481^511^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = scopeRoot;curNode = n;^496^^^^^481^511^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^curNode = root;curNode = n;^496^^^^^481^511^curNode = n;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^pushScope ( next ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverse ( n ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^pushScope ( scopeRoot ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;pushScope ( n ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;pushScope ( n ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( refinedScope ) ;pushScope ( n ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;pushScope ( n ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;pushScope ( n ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^popScope (  ) ;pushScope ( n ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;pushScope ( n ) ;^497^^^^^482^512^pushScope ( n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( include )  {^499^^^^^484^514^if  ( anonymous )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( !anonymous )  {^499^^^^^484^514^if  ( anonymous )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^traverseBranch(fnName, n);^499^500^501^502^^484^514^if  ( anonymous )  {  traverseBranch ( fnName, n ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^499^500^501^502^^484^514^if  ( anonymous )  {  traverseBranch ( fnName, n ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( !anonymous )  {     traverseBranch ( fnName, n ) ; }^499^^^^^484^514^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( root, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( fnName, scopeRoot ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch (  n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( fnName ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( n, fnName ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseFunction ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseBranch ( scopeRoot, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;traverseBranch ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( fnName, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( parent, n ) ;^501^^^^^486^516^traverseBranch ( fnName, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^final Node args = root.getNext (  ) ;^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^final Node args = scopeRoot.getNext (  ) ;^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Node next = child.getNext (  ) ;final Node args = fnName.getNext (  ) ;^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^final Node body = args.getNext (  ) ;final Node args = fnName.getNext (  ) ;^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^final Node fnName = n.getFirstChild (  ) ;final Node args = fnName.getNext (  ) ;^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Node body = args.getNext (  ) ;final Node args = fnName.getNext (  ) ;^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^final Node args = parent.getNext (  ) ;^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^final Node args = fnName .getParent (  )  ;^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^final Node args = root .getParent (  )  ;^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^504^^^^^489^519^final Node args = fnName.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^final Node body = scopeRoot.getNext (  ) ;^505^^^^^490^520^final Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^final Node body = root.getNext (  ) ;^505^^^^^490^520^final Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Node next = child.getNext (  ) ;final Node body = args.getNext (  ) ;^505^^^^^490^520^final Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^final Node fnName = n.getFirstChild (  ) ;final Node body = args.getNext (  ) ;^505^^^^^490^520^final Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^final Node args = fnName.getNext (  ) ;final Node body = args.getNext (  ) ;^505^^^^^490^520^final Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Node body = args.getNext (  ) ;final Node body = args.getNext (  ) ;^505^^^^^490^520^final Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^final Node body = next.getNext (  ) ;^505^^^^^490^520^final Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^505^^^^^490^520^final Node body = args.getNext (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( scopeRoot, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( args, node ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch (  n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( args ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( n, args ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseFunction ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseBranch ( parent, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^t.traverseRoots ( roots ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( body, n ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( args, n ) ;^508^^^^^493^523^traverseBranch ( args, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^Preconditions.checkState ( body.getNext (  )  == null || body.getType (  )  == Token.BLOCK ) ;^511^512^^^^496^526^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^Preconditions.checkState ( body.getNext (  )  != null && body.getType (  )  == Token.BLOCK ) ;^511^512^^^^496^526^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Preconditions.checkState ( node.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^511^512^^^^496^526^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^511^512^^^^496^526^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^511^512^^^^496^526^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^511^512^^^^496^526^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^511^512^^^^496^526^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getFirstChild (  ) .getType (  )  == Token.NAME ) ;Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^511^512^^^^496^526^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Preconditions.checkState ( next.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^511^512^^^^496^526^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^512^^^^^497^527^body.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( scopeRoot, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( body, node ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch (  n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( body ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^traverseBranch ( n, body ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^traverseFunction ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^traverseBranch ( node, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( n.getFirstChild (  ) , n ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseWithScope ( n, s ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, null ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( fnName, n ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( root, scopeRoot ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( node, parent ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^t.traverseRoots ( roots ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( child, n ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseFunction ( n, parent ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^traverseBranch ( args, n ) ;traverseBranch ( body, n ) ;^513^^^^^498^528^traverseBranch ( body, n ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^getScope (  ) ;^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;popScope (  ) ;^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;popScope (  ) ;^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;popScope (  ) ;^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( root ) ;popScope (  ) ;^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;popScope (  ) ;^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;popScope (  ) ;^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( scopeRoot ) ;popScope (  ) ;^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;popScope (  ) ;^515^^^^^500^530^popScope (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Node parent [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( scopes.size (  )  + scopeRoots.size (  )  == 2 )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( scopes.size (  )   >  scopeRoots.size (  )  < 2 )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^if  ( scopes.size (  )  + scopeRoots.size (  )  < 11 )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^if  ( scopes.size() - 0  + scopeRoots.size() - 0  < 2 )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( scopeRoots.size (  )  + scopes.size (  )  < 2 )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P6_Replace_Expression]^if  ( scopes.size (  )  + scopeRoots.size (  ) )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( scopes.peek (  )  + scopeRoots.size (  )  < 2 )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( scopes .descendingIterator (  )   + scopeRoots^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^if  ( scopes.peek (  )  + scopeRoots.size (  )  < 0  )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( scopeRoots.isEmpty (  )  )  {     return scopes.peek (  ) .getRootNode (  ) ; }else {     return scopeRoots.peek (  ) ; }^521^^^^^520^530^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( scopeRoots.size (  )  )  {^524^^^^^520^530^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( !sourceName.isEmpty (  )  )  {^524^^^^^520^530^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( roots.isEmpty (  )  )  {^524^^^^^520^530^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^return scopes.peek().getRootNode();^524^525^526^527^528^520^530^if  ( scopeRoots.isEmpty (  )  )  { return scopes.peek (  ) .getRootNode (  ) ; } else { return scopeRoots.peek (  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^524^525^526^527^528^520^530^if  ( scopeRoots.isEmpty (  )  )  { return scopes.peek (  ) .getRootNode (  ) ; } else { return scopeRoots.peek (  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopeRoots.pop (  ) ;^527^^^^^520^530^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopeRoots .push ( args )  ;^527^^^^^520^530^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P12_Insert_Condition]^if  ( scopeRoots.isEmpty (  )  )  { return scopeRoots.peek (  ) ; }^527^^^^^520^530^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^527^^^^^520^530^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes.peek (  ) .getType (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes.peek (  )  .isGlobal (  )  ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes.pop (  ) .getRootNode (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes .push ( body )  .getRootNode (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return scopes .push ( root )  .getRootNode (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes .push ( curNode )  .getRootNode (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopeRoots .push ( child )  ;^527^^^^^520^530^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return this;^522^^^^^520^530^return null;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopeRoots .push ( n )  ;^527^^^^^520^530^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return scopeRoots .push ( root )  ;^527^^^^^520^530^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return this.peek (  ) .getType (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return 4.peek (  ) .getRootNode (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes .push ( n )  .getRootNode (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return true;^522^^^^^520^530^return null;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes .push ( cur )  .getRootNode (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^if  ( scopes.size() + 8  + scopeRoots.size() + 8  < 2 )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^if  ( scopes.size() - 3  + scopeRoots.size() - 3  < 2 )  {^521^^^^^520^530^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return null.pop (  ) .getRootNode (  ) ;^525^^^^^520^530^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return 2.peek (  ) ;^527^^^^^520^530^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getEnclosingFunction [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^Preconditions.checkState ( curNode == null ) ;^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Preconditions.checkState ( next != null ) ;^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Preconditions.checkNotNull ( curNode != null ) ;^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( parent ) ;Preconditions.checkState ( curNode != null ) ;^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( s.isGlobal (  )  ) ;Preconditions.checkState ( curNode != null ) ;^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;Preconditions.checkState ( curNode != null ) ;^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;Preconditions.checkState ( curNode != null ) ;^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;Preconditions.checkState ( curNode != null ) ;^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( scopeRoot != null ) ;Preconditions.checkState ( curNode != null ) ;^534^^^^^533^540^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^scopeRoots.push ( n ) ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^scopeRoots .peek (  )  ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^scopeRoots.push ( next ) ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( scope ) ;scopeRoots.push ( node ) ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;scopeRoots.push ( node ) ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.clear (  ) ;scopeRoots.push ( node ) ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;scopeRoots.push ( node ) ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;scopeRoots.push ( node ) ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^return scopeRoots.peek (  ) ;scopeRoots.push ( node ) ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.push ( null ) ;scopeRoots.push ( node ) ;^535^^^^^533^540^scopeRoots.push ( node ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^cfgs .peek (  )  ;^536^^^^^533^540^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^536^^^^^533^540^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.push ( node ) ;cfgs.push ( null ) ;^536^^^^^533^540^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( scope ) ;cfgs.push ( null ) ;^536^^^^^533^540^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;cfgs.push ( null ) ;^536^^^^^533^540^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;cfgs.push ( null ) ;^536^^^^^533^540^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( scopeCallback == null )  {^537^^^^^533^540^if  ( scopeCallback != null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^if  ( scopeCallback != true )  {^537^^^^^533^540^if  ( scopeCallback != null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^scopeCallback.enterScope(this);^537^538^539^^^533^540^if  ( scopeCallback != null )  { scopeCallback.enterScope ( this ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^537^538^539^^^533^540^if  ( scopeCallback != null )  { scopeCallback.enterScope ( this ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  (  ( scopeCallback )  != null )  {     scopeCallback.exitScope ( this ) ; }^537^^^^^533^540^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^538^^^^^533^540^scopeCallback.enterScope ( this ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeCallback.exitScope ( this ) ;scopeCallback.enterScope ( this ) ;^538^^^^^533^540^scopeCallback.enterScope ( this ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Node node [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^Preconditions.checkState ( curNode == null ) ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^Preconditions.checkState ( next != null ) ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Preconditions.checkNotNull ( curNode != null ) ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Preconditions .checkNotNull ( body )  ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^544^545^^^^543^550^Preconditions.checkState ( curNode != null ) ; scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( parent ) ;Preconditions.checkState ( curNode != null ) ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( s.isGlobal (  )  ) ;Preconditions.checkState ( curNode != null ) ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( root.getParent (  )  == scopeRoot ) ;Preconditions.checkState ( curNode != null ) ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;Preconditions.checkState ( curNode != null ) ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;Preconditions.checkState ( curNode != null ) ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( scopeRoot != null ) ;Preconditions.checkState ( curNode != null ) ;^544^^^^^543^550^Preconditions.checkState ( curNode != null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^scopes .peek (  )  ;^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.push ( node ) ;scopes.push ( s ) ;^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( scope ) ;scopes.push ( s ) ;^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;scopes.push ( s ) ;^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;scopes.push ( s ) ;^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.clear (  ) ;scopes.push ( s ) ;^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^popScope (  ) ;scopes.push ( s ) ;^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;scopes.push ( s ) ;^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.push ( null ) ;scopes.push ( s ) ;^545^^^^^543^550^scopes.push ( s ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^cfgs .peek (  )  ;^546^^^^^543^550^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^546^^^^^543^550^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.push ( node ) ;cfgs.push ( null ) ;^546^^^^^543^550^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( scope ) ;cfgs.push ( null ) ;^546^^^^^543^550^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;cfgs.push ( null ) ;^546^^^^^543^550^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;cfgs.push ( null ) ;^546^^^^^543^550^cfgs.push ( null ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( scopeCallback == null )  {^547^^^^^543^550^if  ( scopeCallback != null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^if  ( scopeCallback != true )  {^547^^^^^543^550^if  ( scopeCallback != null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^scopeCallback.enterScope(this);^547^548^549^^^543^550^if  ( scopeCallback != null )  { scopeCallback.enterScope ( this ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^547^548^549^^^543^550^if  ( scopeCallback != null )  { scopeCallback.enterScope ( this ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  (  ( scopeCallback )  != null )  {     scopeCallback.exitScope ( this ) ; }^547^^^^^543^550^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^548^^^^^543^550^scopeCallback.enterScope ( this ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeCallback.exitScope ( this ) ;scopeCallback.enterScope ( this ) ;^548^^^^^543^550^scopeCallback.enterScope ( this ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] pushScope [RETURN_TYPE] void   Scope s [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  s  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( scopeCallback == null )  {^554^^^^^553^563^if  ( scopeCallback != null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^if  ( scopeCallback != false )  {^554^^^^^553^563^if  ( scopeCallback != null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^scopeCallback.exitScope(this);^554^555^556^^^553^563^if  ( scopeCallback != null )  { scopeCallback.exitScope ( this ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^554^555^556^^^553^563^if  ( scopeCallback != null )  { scopeCallback.exitScope ( this ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  (  ( scopeCallback )  != null )  {     scopeCallback.enterScope ( this ) ; }^554^^^^^553^563^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^555^^^^^553^563^scopeCallback.exitScope ( this ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeCallback.enterScope ( this ) ;scopeCallback.exitScope ( this ) ;^555^^^^^553^563^scopeCallback.exitScope ( this ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( scopeRoots.size (  )  )  {^557^^^^^553^563^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( !sourceName.isEmpty (  )  )  {^557^^^^^553^563^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( roots.isEmpty (  )  )  {^557^^^^^553^563^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^scopes.pop();^557^558^559^560^561^553^563^if  ( scopeRoots.isEmpty (  )  )  { scopes.pop (  ) ; } else { scopeRoots.pop (  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^557^558^559^560^561^553^563^if  ( scopeRoots.isEmpty (  )  )  { scopes.pop (  ) ; } else { scopeRoots.pop (  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( scopeRoots.isEmpty (  )  )  {     return scope; }^557^^^^^553^563^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( scopeRoots.isEmpty (  )  )  {     return scopes.peek (  ) .getRootNode (  ) ; }else {     return scopeRoots.peek (  ) ; }^557^^^^^553^563^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^scopeRoots.peek (  ) ;^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.push ( node ) ;scopeRoots.pop (  ) ;^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;scopeRoots.pop (  ) ;^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.clear (  ) ;scopeRoots.pop (  ) ;^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;scopeRoots.pop (  ) ;^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^popScope (  ) ;scopeRoots.pop (  ) ;^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;scopeRoots.pop (  ) ;^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^return scopeRoots.peek (  ) ;scopeRoots.pop (  ) ;^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P12_Insert_Condition]^if  ( scopeRoots.isEmpty (  )  )  { scopeRoots.pop (  ) ; }^560^^^^^553^563^scopeRoots.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^scopes.peek (  ) ;^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.push ( node ) ;scopes.pop (  ) ;^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( scope ) ;scopes.pop (  ) ;^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;scopes.pop (  ) ;^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.pop (  ) ;scopes.pop (  ) ;^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.clear (  ) ;scopes.pop (  ) ;^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;scopes.pop (  ) ;^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^popScope (  ) ;scopes.pop (  ) ;^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^return scopeRoots.peek (  ) ;scopes.pop (  ) ;^558^^^^^553^563^scopes.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^cfgs.peek (  ) ;^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^return cfgs.peek (  ) ;cfgs.pop (  ) ;^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;cfgs.pop (  ) ;^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;cfgs.pop (  ) ;^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;cfgs.pop (  ) ;^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;cfgs.pop (  ) ;^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^popScope (  ) ;cfgs.pop (  ) ;^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;cfgs.pop (  ) ;^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.push ( null ) ;cfgs.pop (  ) ;^562^^^^^553^563^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] popScope [RETURN_TYPE] void   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P6_Replace_Expression]^Scope scope  =  scopes.peek (  ) ;^567^^^^^566^580^Scope scope = scopes.isEmpty (  )  ? null : scopes.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P6_Replace_Expression]^Scope scope  =  null ;^567^^^^^566^580^Scope scope = scopes.isEmpty (  )  ? null : scopes.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Scope scope = scopes.size (  )  ? null : scopes.peek (  ) ;^567^^^^^566^580^Scope scope = scopes.isEmpty (  )  ? null : scopes.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Scope scope = scopes.isEmpty (  )  ? null : scopes.pop (  ) ;^567^^^^^566^580^Scope scope = scopes.isEmpty (  )  ? null : scopes.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^567^^^^^566^580^Scope scope = scopes.isEmpty (  )  ? null : scopes.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Scope scope = scopes.isEmpty (  )  ? null : scopes .push ( n )  ;^567^^^^^566^580^Scope scope = scopes.isEmpty (  )  ? null : scopes.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( scopeRootsRoots.isEmpty (  )  )  {^568^^^^^566^580^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( scope.isEmpty (  )  )  {^568^^^^^566^580^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( scopeRoots.size (  )  )  {^568^^^^^566^580^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( !sourceName.isEmpty (  )  )  {^568^^^^^566^580^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( roots.isEmpty (  )  )  {^568^^^^^566^580^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^return scope;^568^569^570^^^566^580^if  ( scopeRoots.isEmpty (  )  )  { return scope; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^568^569^570^^^566^580^if  ( scopeRoots.isEmpty (  )  )  { return scope; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( line >= 0 )  {     return line; }^568^^^^^566^580^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( scopeRoots.isEmpty (  )  )  {     scopes.pop (  ) ; }else {     scopeRoots.pop (  ) ; }^568^^^^^566^580^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( roots.isEmpty (  )  )  {     return ; }^568^^^^^566^580^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^Iterator<Node> it = scopeRoots.clear (  ) ;^572^^^^^566^580^Iterator<Node> it = scopeRoots.descendingIterator (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^Iterator<Node> it = 1.clear (  ) ;^572^^^^^566^580^Iterator<Node> it = scopeRoots.descendingIterator (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^572^^^^^566^580^Iterator<Node> it = scopeRoots.descendingIterator (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^while  ( it .next (  )   )  {^573^^^^^566^580^while  ( it.hasNext (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^scope = scopeCreator.createScope ( it.next (  )  ) ;^574^^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^scope = it.createScope ( scopeCreator.next (  ) , scope ) ;^574^^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^scope = scopeCreatorCreator.createScope ( it.next (  ) , scope ) ;^574^^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^scope =  scopeCreator.createScope ( null.next (  ) , scope ) ;^574^^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^scope = scopeCreator.createScope ( 0.next (  ) , scope ) ;^574^^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^scope = scopeCreator.createScope ( 3 .hasNext (  )  , scope ) ;^574^^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^574^575^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ; scopes.push ( scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^while  ( it.hasNext (  )  )  { scope = scopeCreator.createScope ( it.next (  ) , scope ) ;scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^574^^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^scope = scopeCreator.createScope ( it .hasNext (  )  , scope ) ;^574^^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^scopes .peek (  )  ;^575^^^^^566^580^scopes.push ( scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^575^^^^^566^580^scopes.push ( scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.push ( node ) ;scopes.push ( scope ) ;^575^^^^^566^580^scopes.push ( scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;scopes.push ( scope ) ;^575^^^^^566^580^scopes.push ( scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;scopes.push ( scope ) ;^575^^^^^566^580^scopes.push ( scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.push ( null ) ;scopes.push ( scope ) ;^575^^^^^566^580^scopes.push ( scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^573^574^^^^566^580^while  ( it.hasNext (  )  )  { scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^574^^^^^566^580^scope = scopeCreator.createScope ( it.next (  ) , scope ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^scopeRoots.peek (  ) ;^577^^^^^566^580^scopeRoots.clear (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^577^^^^^566^580^scopeRoots.clear (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.push ( node ) ;scopeRoots.clear (  ) ;^577^^^^^566^580^scopeRoots.clear (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;scopeRoots.clear (  ) ;^577^^^^^566^580^scopeRoots.clear (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;scopeRoots.clear (  ) ;^577^^^^^566^580^scopeRoots.clear (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;scopeRoots.clear (  ) ;^577^^^^^566^580^scopeRoots.clear (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^return scopeRoots.peek (  ) ;scopeRoots.clear (  ) ;^577^^^^^566^580^scopeRoots.clear (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P12_Insert_Condition]^if  ( scopeRoots.isEmpty (  )  )  { scopeRoots.clear (  ) ; }^577^^^^^566^580^scopeRoots.clear (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScope [RETURN_TYPE] Scope   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  Scope  scope  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  Iterator  it  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^if  ( cfgs.peek (  )  != null )  {^584^^^^^583^591^if  ( cfgs.peek (  )  == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( cfgs.pop (  )  == null )  {^584^^^^^583^591^if  ( cfgs.peek (  )  == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^if  ( cfgs.pop (  )  == this )  {^584^^^^^583^591^if  ( cfgs.peek (  )  == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^com.google.javascript.jscomp.ControlFlowAnalysis cfa = new com.google.javascript.jscomp.ControlFlowAnalysis(compiler, false); cfa.process(null, getScopeRoot()); cfgs.pop(); cfgs.push(cfa.getCfg());^584^585^586^587^588^583^591^if  ( cfgs.peek (  )  == null )  { ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, false ) ; cfa.process ( null, getScopeRoot (  )  ) ; cfgs.pop (  ) ; cfgs.push ( cfa.getCfg (  )  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^584^585^586^587^588^583^591^if  ( cfgs.peek (  )  == null )  { ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, false ) ; cfa.process ( null, getScopeRoot (  )  ) ; cfgs.pop (  ) ; cfgs.push ( cfa.getCfg (  )  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, true ) ;^585^^^^^583^591^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, false ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  (  ( cfgs.peek (  )  )  == null )  {     ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, false ) ;     cfa.process ( null, getScopeRoot (  )  ) ;     cfgs.pop (  ) ;     cfgs.push ( cfa.getCfg (  )  ) ; }^585^^^^^583^591^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^cfa .getCfg (  )  ;^586^^^^^583^591^cfa.process ( null, getScopeRoot (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^cfa.process ( null, getScopeDepth (  )  ) ;^586^^^^^583^591^cfa.process ( null, getScopeRoot (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^586^587^^^^583^591^cfa.process ( null, getScopeRoot (  )  ) ; cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^586^^^^^583^591^cfa.process ( null, getScopeRoot (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^cfgs.peek (  ) ;^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^return cfgs.peek (  ) ;cfgs.pop (  ) ;^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( n ) ;cfgs.pop (  ) ;^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^pushScope ( s ) ;cfgs.pop (  ) ;^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopeRoots.pop (  ) ;cfgs.pop (  ) ;^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.push ( s ) ;cfgs.pop (  ) ;^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^popScope (  ) ;cfgs.pop (  ) ;^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^scopes.pop (  ) ;cfgs.pop (  ) ;^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P11_Insert_Donor_Statement]^cfgs.push ( null ) ;cfgs.pop (  ) ;^587^^^^^583^591^cfgs.pop (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^cfgs .peek (  )  ;^588^^^^^583^591^cfgs.push ( cfa.getCfg (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^588^^^^^583^591^cfgs.push ( cfa.getCfg (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( cfgs .push ( args )   == null )  {^584^^^^^583^591^if  ( cfgs.peek (  )  == null )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return cfgs.pop (  ) ;^590^^^^^583^591^return cfgs.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return cfgs .push ( node )  ;^590^^^^^583^591^return cfgs.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return 4.peek (  ) ;^590^^^^^583^591^return cfgs.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^590^^^^^583^591^return cfgs.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getControlFlowGraph [RETURN_TYPE] ControlFlowGraph   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^if  ( null.isEmpty (  )  )  {^595^^^^^594^600^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^if  ( scopeRoots.size (  )  )  {^595^^^^^594^600^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( !sourceName.isEmpty (  )  )  {^595^^^^^594^600^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P9_Replace_Statement]^if  ( roots.isEmpty (  )  )  {^595^^^^^594^600^if  ( scopeRoots.isEmpty (  )  )  {^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P15_Unwrap_Block]^return scopes.peek().getRootNode();^595^596^597^598^599^594^600^if  ( scopeRoots.isEmpty (  )  )  { return scopes.peek (  ) .getRootNode (  ) ; } else { return scopeRoots.peek (  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P16_Remove_Block]^^595^596^597^598^599^594^600^if  ( scopeRoots.isEmpty (  )  )  { return scopes.peek (  ) .getRootNode (  ) ; } else { return scopeRoots.peek (  ) ; }^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  ( scopeRoots.isEmpty (  )  )  {     scopes.pop (  ) ; }else {     scopeRoots.pop (  ) ; }^595^^^^^594^600^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P13_Insert_Block]^if  (  (  ( scopes.size (  )  )  +  ( scopeRoots.size (  )  )  )  < 2 )  {     return null; }else {     if  ( scopeRoots.isEmpty (  )  )  {         return scopes.peek (  ) .getRootNode (  ) ;     }else {         return scopeRoots.peek (  ) ;     } }^595^^^^^594^600^[Delete]^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopeRoots.pop (  ) ;^598^^^^^594^600^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopeRoots .push ( parent )  ;^598^^^^^594^600^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P12_Insert_Condition]^if  ( scopeRoots.isEmpty (  )  )  { return scopeRoots.peek (  ) ; }^598^^^^^594^600^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^598^^^^^594^600^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes.peek (  ) .getType (  ) ;^596^^^^^594^600^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes.peek (  )  .isGlobal (  )  ;^596^^^^^594^600^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes.pop (  ) .getRootNode (  ) ;^596^^^^^594^600^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes .push ( root )  .getRootNode (  ) ;^596^^^^^594^600^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return 3.peek (  ) .getRootNode (  ) ;^596^^^^^594^600^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^596^^^^^594^600^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return scopes .push ( n )  .getRootNode (  ) ;^596^^^^^594^600^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return scopeRoots .push ( next )  ;^598^^^^^594^600^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes .push ( node )  .getRootNode (  ) ;^596^^^^^594^600^return scopes.peek (  ) .getRootNode (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return 2.peek (  ) ;^598^^^^^594^600^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return scopeRoots .push ( fnName )  ;^598^^^^^594^600^return scopeRoots.peek (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeRoot [RETURN_TYPE] Node   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return getScopeDepth (  )  < 1;^606^^^^^605^607^return getScopeDepth (  )  <= 1;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] inGlobalScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^return getScopeDepth (  )  <= 2;^606^^^^^605^607^return getScopeDepth (  )  <= 1;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] inGlobalScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return getScopeRoot (  )  <= 1;^606^^^^^605^607^return getScopeDepth (  )  <= 1;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] inGlobalScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return getScopeRoot (  )   ;^606^^^^^605^607^return getScopeDepth (  )  <= 1;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] inGlobalScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^606^^^^^605^607^return getScopeDepth (  )  <= 1;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] inGlobalScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return scopes.size (  &&  )  + scopeRoots.size (  ) ;^610^^^^^609^611^return scopes.size (  )  + scopeRoots.size (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeDepth [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^return scopes.size() - 6  + scopeRoots.size() - 6 ;^610^^^^^609^611^return scopes.size (  )  + scopeRoots.size (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeDepth [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return scopeRoots.size (  )  + scopes.size (  ) ;^610^^^^^609^611^return scopes.size (  )  + scopeRoots.size (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeDepth [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes.peek (  )  + scopeRoots.size (  ) ;^610^^^^^609^611^return scopes.size (  )  + scopeRoots.size (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeDepth [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return scopes .descendingIterator (  )   + scopeRoots^610^^^^^609^611^return scopes.size (  )  + scopeRoots.size (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeDepth [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P12_Insert_Condition]^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  { return scopes.size (  )  + scopeRoots.size (  ) ; }^610^^^^^609^611^return scopes.size (  )  + scopeRoots.size (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeDepth [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^610^^^^^609^611^return scopes.size (  )  + scopeRoots.size (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeDepth [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^return scopes.size() - 0  + scopeRoots.size() - 0 ;^610^^^^^609^611^return scopes.size (  )  + scopeRoots.size (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeDepth [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return scopes.size (  )  + null.size (  ) ;^610^^^^^609^611^return scopes.size (  )  + scopeRoots.size (  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getScopeDepth [RETURN_TYPE] int   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return ! ( scopes.isEmpty (  )  || scopeRoots.isEmpty (  )  ) ;^614^^^^^613^615^return ! ( scopes.isEmpty (  )  && scopeRoots.isEmpty (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] hasScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return ! ( scopeRoots.isEmpty (  )  && scopes.isEmpty (  )  ) ;^614^^^^^613^615^return ! ( scopes.isEmpty (  )  && scopeRoots.isEmpty (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] hasScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^return ! ( scopes.size (  )  && scopeRoots.isEmpty (  )  ) ;^614^^^^^613^615^return ! ( scopes.isEmpty (  )  && scopeRoots.isEmpty (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] hasScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P12_Insert_Condition]^if  ( scopes.size (  )  + scopeRoots.size (  )  < 2 )  { return ! ( scopes.isEmpty (  )  && scopeRoots.isEmpty (  )  ) ; }^614^^^^^613^615^return ! ( scopes.isEmpty (  )  && scopeRoots.isEmpty (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] hasScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^614^^^^^613^615^return ! ( scopes.isEmpty (  )  && scopeRoots.isEmpty (  )  ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] hasScope [RETURN_TYPE] boolean   [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^JSError error = JSError.make ( getSourceName (  ) , root, diagnosticType, arguments ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P5_Replace_Variable]^JSError error = JSError.make ( getSourceName (  ) , n, NODE_TRAVERSAL_ERROR, arguments ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P5_Replace_Variable]^JSError error = JSError.make ( getSourceName (  ) ,  diagnosticType, arguments ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P5_Replace_Variable]^JSError error = JSError.make ( getSourceName (  ) , n,  arguments ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P5_Replace_Variable]^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P5_Replace_Variable]^JSError error = JSError.make ( getSourceName (  ) , arguments, diagnosticType, n ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P5_Replace_Variable]^JSError error = JSError.make ( getSourceName (  ) , diagnosticType, n, arguments ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P5_Replace_Variable]^JSError error = JSError.make ( getSourceName (  ) , n, arguments, diagnosticType ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P7_Replace_Invocation]^JSError error = JSError.make ( getScope (  ) , n, diagnosticType, arguments ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P5_Replace_Variable]^JSError error = JSError.make ( getSourceName (  ) , scopeRoot, diagnosticType, arguments ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P8_Replace_Mix]^JSError error = JSError.make ( getSourceName (  ) , next, diagnosticType, arguments ) ;^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P14_Delete_Statement]^^620^621^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ; compiler.report ( error ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P14_Delete_Statement]^^620^^^^^618^622^JSError error = JSError.make ( getSourceName (  ) , n, diagnosticType, arguments ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P7_Replace_Invocation]^compiler.getInput ( error ) ;^621^^^^^618^622^compiler.report ( error ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P7_Replace_Invocation]^compiler .report ( parent , NODE_TRAVERSAL_ERROR , arguments )  ;^621^^^^^618^622^compiler.report ( error ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P14_Delete_Statement]^^621^^^^^618^622^compiler.report ( error ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType diagnosticType  arguments [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  src  String[]  arguments  Deque  cfgs  scopeRoots  scopes  JSError  error  
[P1_Replace_Type]^char name =  ( char )  n.getProp ( Node.SOURCENAME_PROP ) ;^625^^^^^624^627^String name =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  name  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P7_Replace_Invocation]^String name =  ( String )  n .getParent (  )  ;^625^^^^^624^627^String name =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  name  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^String nodeame =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^625^^^^^624^627^String name =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  name  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^String nextame =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^625^^^^^624^627^String name =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  name  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P14_Delete_Statement]^^625^626^^^^624^627^String name =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ; return name == null ? "" : name;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  name  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P2_Replace_Operator]^return name != null ? "" : name;^626^^^^^624^627^return name == null ? "" : name;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  name  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P5_Replace_Variable]^return src == null ? "" : name;^626^^^^^624^627^return name == null ? "" : name;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  name  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P6_Replace_Expression]^return name ( name;^626^^^^^624^627^return name == null ? "" : name;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  name  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P8_Replace_Mix]^return   "" ;^626^^^^^624^627^return name == null ? "" : name;^[CLASS] NodeTraversal AbstractPostOrderCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  anonymous  include  DiagnosticType  NODE_TRAVERSAL_ERROR  diagnosticType  Node  args  body  child  cur  curNode  fnName  n  next  node  parent  root  scopeRoot  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  name  sourceName  src  Deque  cfgs  scopeRoots  scopes  
[P3_Replace_Literal]^return false;^131^^^^^129^132^return true;^[CLASS] AbstractPostOrderCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P2_Replace_Operator]^return parent == null && parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P2_Replace_Operator]^return parent != null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P2_Replace_Operator]^return parent == null || parent.getType (  )  == Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P2_Replace_Operator]^return parent == null || parent.getType (  )  != Token.FUNCTION || n != parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P5_Replace_Variable]^return n == parentull || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P7_Replace_Invocation]^return parent == null || parent .getFirstChild (  )   != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P8_Replace_Mix]^return false ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P5_Replace_Variable]^return n == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P14_Delete_Statement]^^144^145^^^^140^146^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P5_Replace_Variable]^n == n.getFirstChild (  ) ;^145^^^^^140^146^n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P7_Replace_Invocation]^n == parent .getType (  )  ;^145^^^^^140^146^n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P14_Delete_Statement]^^145^^^^^140^146^n == parent.getFirstChild (  ) ;^[CLASS] AbstractShallowCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P2_Replace_Operator]^return parent == null && NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] AbstractShallowStatementCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P2_Replace_Operator]^return parent != null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] AbstractShallowStatementCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P5_Replace_Variable]^return n == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] AbstractShallowStatementCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P7_Replace_Invocation]^return parent == null || NodeUtil.isStatementBlock ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] AbstractShallowStatementCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P7_Replace_Invocation]^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil .isControlStructure ( parent )  ;^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] AbstractShallowStatementCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P14_Delete_Statement]^^157^158^^^^155^159^return parent == null || NodeUtil.isControlStructure ( parent ) || NodeUtil.isStatementBlock ( parent ) ;^[CLASS] AbstractShallowStatementCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P5_Replace_Variable]^|| NodeUtil.isStatementBlock ( n ) ;^158^^^^^155^159^|| NodeUtil.isStatementBlock ( parent ) ;^[CLASS] AbstractShallowStatementCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P14_Delete_Statement]^^158^^^^^155^159^|| NodeUtil.isStatementBlock ( parent ) ;^[CLASS] AbstractShallowStatementCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P8_Replace_Mix]^private  Set<Integer> nodeTypes;^168^^^^^163^173^private final Set<Integer> nodeTypes;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P8_Replace_Mix]^private  boolean include;^169^^^^^164^174^private final boolean include;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[P3_Replace_Literal]^this ( nodeTypes, false ) ;^176^^^^^175^177^this ( nodeTypes, true ) ;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] Set)   Integer> nodeTypes [VARIABLES] Set  nodeTypes  boolean  include  
[P14_Delete_Statement]^^176^^^^^175^177^this ( nodeTypes, true ) ;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] Set)   Integer> nodeTypes [VARIABLES] Set  nodeTypes  boolean  include  
[P8_Replace_Mix]^this.nodeTypes =  null;^186^^^^^184^188^this.nodeTypes = nodeTypes;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] Set,boolean)   Integer> nodeTypes boolean include [VARIABLES] Set  nodeTypes  boolean  include  
[P8_Replace_Mix]^this.include =  null;^187^^^^^184^188^this.include = include;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] <init> [RETURN_TYPE] Set,boolean)   Integer> nodeTypes boolean include [VARIABLES] Set  nodeTypes  boolean  include  
[P2_Replace_Operator]^return include != nodeTypes.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  Node  n  parent  
[P5_Replace_Variable]^return include == parentodeTypes.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  Node  n  parent  
[P5_Replace_Variable]^return include == nodeTypesodeTypes.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  Node  n  parent  
[P5_Replace_Variable]^return n == includeodeTypes.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  Node  n  parent  
[P5_Replace_Variable]^return include == n.contains ( nodeTypes.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  Node  n  parent  
[P8_Replace_Mix]^return include  ||  nodeTypes.contains ( n.getType (  )  ) ;^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  Node  n  parent  
[P14_Delete_Statement]^^192^^^^^190^193^return include == nodeTypes.contains ( n.getType (  )  ) ;^[CLASS] AbstractNodeTypePruningCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  nodeTypes  boolean  include  NodeTraversal  nodeTraversal  Node  n  parent  
