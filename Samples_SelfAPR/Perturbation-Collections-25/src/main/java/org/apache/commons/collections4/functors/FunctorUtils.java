[P14_Delete_Statement]^^37^^^^^36^38^super (  ) ;^[CLASS] FunctorUtils  [METHOD] <init> [RETURN_TYPE] FunctorUtils()   [VARIABLES] boolean  
[P2_Replace_Operator]^if  ( predicates != null )  {^50^^^^^49^54^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P8_Replace_Mix]^if  ( predicates == this )  {^50^^^^^49^54^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P9_Replace_Statement]^if  ( closures == null )  {^50^^^^^49^54^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P9_Replace_Statement]^if  ( predicates[i] == null )  {^50^^^^^49^54^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^50^^^^^49^54^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P9_Replace_Statement]^if  ( transformers == null )  {^50^^^^^49^54^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P15_Unwrap_Block]^return null;^50^51^52^^^49^54^if  ( predicates == null )  { return null; }^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P16_Remove_Block]^^50^51^52^^^49^54^if  ( predicates == null )  { return null; }^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P13_Insert_Block]^if  ( closures == null )  {     return null; }^50^^^^^49^54^[Delete]^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P13_Insert_Block]^if  ( transformers == null )  {     return null; }^50^^^^^49^54^[Delete]^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P8_Replace_Mix]^return false;^51^^^^^49^54^return null;^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P8_Replace_Mix]^return true;^51^^^^^49^54^return null;^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P14_Delete_Statement]^^53^^^^^49^54^return  ( Predicate<T>[] )  predicates.clone (  ) ;^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[P2_Replace_Operator]^if  ( predicates != null )  {^79^^^^^78^88^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P8_Replace_Mix]^if  ( predicates == this )  {^79^^^^^78^88^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P9_Replace_Statement]^if  ( closures == null )  {^79^^^^^78^88^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P9_Replace_Statement]^if  ( predicates[i] == null )  {^79^^^^^78^88^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^79^^^^^78^88^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P9_Replace_Statement]^if  ( transformers == null )  {^79^^^^^78^88^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The predicate array must not be null");^79^80^81^^^78^88^if  ( predicates == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P16_Remove_Block]^^79^80^81^^^78^88^if  ( predicates == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^79^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^79^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^79^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^79^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^79^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^79^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^79^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The predicate collection must not be null" )   ;^80^^^^^78^88^throw new IllegalArgumentException  (" ")  ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^80^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^80^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^80^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^80^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^if  ( predicates[i] != null )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P6_Replace_Expression]^if  ( "The predicate array must not contain a null predicate, index " + i + " was null" )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P6_Replace_Expression]^if  ( "The predicate array must not contain a null predicate, index " + i )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P8_Replace_Mix]^if  ( predicates[i] == this )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P9_Replace_Statement]^if  ( closures == null )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P9_Replace_Statement]^if  ( predicates == null )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P9_Replace_Statement]^if  ( closures[i] == null )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P9_Replace_Statement]^if  ( transformers[i] == null )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("The predicate array must not contain a null predicate, index " + i) + " was null"));^83^84^85^86^^78^88^if  ( predicates[i] == null )  { throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P16_Remove_Block]^^83^84^85^86^^78^88^if  ( predicates[i] == null )  { throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^83^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^83^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^83^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^83^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^83^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^83^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^83^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  <  i  <  " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "   instanceof   i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "dicate array must not contain" + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was nullwas nul" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  )  ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^84^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^84^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^84^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^84^^^^^78^88^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  ^  i  ^  " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  &  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index ll predic" + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " waswas null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ; ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^for  <=  ( int i = 0; i < predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^for  |  ( int i = 0; i < predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^for  ( int i = 7; i < predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  |  i  |  " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index dicate array must" + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  >>  i  >>  " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  <  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "icate array m" + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + "n" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  ||  i  ||  " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  <=  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "predicate array must " + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null w" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "   instanceof   i   instanceof   " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  >>  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index array " + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was nullwas nu" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  >  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index ot contai" + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  <<  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "null pred" + i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was n" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[P2_Replace_Operator]^if  ( predicates != null )  {^97^^^^^96^113^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P8_Replace_Mix]^if  ( predicates == false )  {^97^^^^^96^113^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( closures == null )  {^97^^^^^96^113^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( predicates[i] == null )  {^97^^^^^96^113^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^97^^^^^96^113^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( transformers == null )  {^97^^^^^96^113^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The predicate collection must not be null");^97^98^99^^^96^113^if  ( predicates == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P16_Remove_Block]^^97^98^99^^^96^113^if  ( predicates == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^97^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^97^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^97^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^97^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^97^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^97^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^97^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The closure array must not be null" )   ;^98^^^^^96^113^throw new IllegalArgumentException  (" ")  ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^98^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^98^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^98^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^98^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^98^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^final Predicate<? super T>[] preds = new Predicate[predicates.size() - 0 ];^102^^^^^96^113^final Predicate<? super T>[] preds = new Predicate[predicates.size (  ) ];^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^final Predicate<? super T>[] preds = new Predicate[predicates.size() + 1 ];^102^^^^^96^113^final Predicate<? super T>[] preds = new Predicate[predicates.size (  ) ];^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P14_Delete_Statement]^^102^103^^^^96^113^final Predicate<? super T>[] preds = new Predicate[predicates.size (  ) ]; int i = 0;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P1_Replace_Type]^long  i = 0;^103^^^^^96^113^int i = 0;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^int i = i;^103^^^^^96^113^int i = 0;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^if  ( preds[i] != null )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P6_Replace_Expression]^if  ( "The predicate collection must not contain a null predicate, index " + i + " was null" )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P6_Replace_Expression]^if  ( "The predicate collection must not contain a null predicate, index " + i )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P8_Replace_Mix]^if  ( preds[i] == true )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( closures == null )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( predicates[i] == null )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( transformers == null )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( predicates == null )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( closures[i] == null )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P9_Replace_Statement]^if  ( transformers[i] == null )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("The predicate collection must not contain a null predicate, index " + i) + " was null"));^106^107^108^109^^96^113^if  ( preds[i] == null )  { throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P16_Remove_Block]^^106^107^108^109^^96^113^if  ( preds[i] == null )  { throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^106^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^106^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^106^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^106^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^106^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^106^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^106^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  !=  i  !=  " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  ||  i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "collection must not contain a null predihe predicate collection must not contain a null predicate, index " + i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " wawas null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  )  ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^107^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^107^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^107^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^107^^^^^96^113^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  <  i  <  " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  >>  i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ull predicate, index" + i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P8_Replace_Mix]^preds[i]  =  preds[i] ;^105^^^^^96^113^preds[i] = predicate;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  >=  i  >=  " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "   instanceof   i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "on must not conthe predicate collection must not contain a null predicate, index " + i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was nullwas nul" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  ||  i  ||  " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  ^  i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The " + i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was nulll" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[P2_Replace_Operator]^if  ( closures != null )  {^123^^^^^122^127^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P8_Replace_Mix]^if  ( closures == false )  {^123^^^^^122^127^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P9_Replace_Statement]^if  ( predicates[i] == null )  {^123^^^^^122^127^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^123^^^^^122^127^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P9_Replace_Statement]^if  ( transformers == null )  {^123^^^^^122^127^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P9_Replace_Statement]^if  ( predicates == null )  {^123^^^^^122^127^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P9_Replace_Statement]^if  ( closures[i] == null )  {^123^^^^^122^127^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P9_Replace_Statement]^if  ( transformers[i] == null )  {^123^^^^^122^127^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P15_Unwrap_Block]^return null;^123^124^125^^^122^127^if  ( closures == null )  { return null; }^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P16_Remove_Block]^^123^124^125^^^122^127^if  ( closures == null )  { return null; }^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P13_Insert_Block]^if  ( predicates == null )  {     return null; }^123^^^^^122^127^[Delete]^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P13_Insert_Block]^if  ( transformers == null )  {     return null; }^123^^^^^122^127^[Delete]^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P8_Replace_Mix]^return false;^124^^^^^122^127^return null;^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P8_Replace_Mix]^return this;^124^^^^^122^127^return null;^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P14_Delete_Statement]^^126^^^^^122^127^return  ( Closure<E>[] )  closures.clone (  ) ;^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[P2_Replace_Operator]^if  ( closures != null )  {^135^^^^^134^144^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P8_Replace_Mix]^if  ( closures == this )  {^135^^^^^134^144^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( predicates[i] == null )  {^135^^^^^134^144^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^135^^^^^134^144^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( transformers == null )  {^135^^^^^134^144^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( predicates == null )  {^135^^^^^134^144^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( closures[i] == null )  {^135^^^^^134^144^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( transformers[i] == null )  {^135^^^^^134^144^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The closure array must not be null");^135^136^137^^^134^144^if  ( closures == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P16_Remove_Block]^^135^136^137^^^134^144^if  ( closures == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^135^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^135^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^135^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^135^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^135^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^135^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^135^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The predicate collection must not be null" )   ;^136^^^^^134^144^throw new IllegalArgumentException  (" ")  ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^136^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^136^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^136^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^136^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^if  ( closures[i] != null )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P6_Replace_Expression]^if  ( "The closure array must not contain a null closure, index " + i + " was null" )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P6_Replace_Expression]^if  ( "The closure array must not contain a null closure, index " + i )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P8_Replace_Mix]^if  ( closures[i] == true )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( closures == null )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( predicates[i] == null )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P9_Replace_Statement]^if  ( transformers[i] == null )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("The closure array must not contain a null closure, index " + i) + " was null"));^139^140^141^142^^134^144^if  ( closures[i] == null )  { throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P16_Remove_Block]^^139^140^141^142^^134^144^if  ( closures[i] == null )  { throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^139^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^139^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^139^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^139^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^139^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^139^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^139^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  &&  i  &&  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  >  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not che closure array must not contain a null closure, index " + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " waswas null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  )  ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^140^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^140^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^140^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^140^^^^^134^144^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  !=  i  !=  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  <=  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index not contain a null closure, in" + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null w" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^for  >=  ( int i = 0; i < closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^for  >  ( int i = 0; i < closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P8_Replace_Mix]^if  ( closures[i] == false )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  <=  i  <=  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  <  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "hhe closure array must not contain a null closure, index " + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was nullwas nu" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "he closurhe closure array must not contain a null closure, index " + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " wwas null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ; ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  <  i  <  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  >=  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index t contain a " + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " wawas null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  ^  i  ^  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  <<  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index rray mus" + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was nullwa" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "   instanceof   i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ust not contain a null" + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null was" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^for  ( int i = -8; i < closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  &  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index The c" + i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[P2_Replace_Operator]^if  ( transformers != null )  {^169^^^^^168^173^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P8_Replace_Mix]^if  ( transformers == true )  {^169^^^^^168^173^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P9_Replace_Statement]^if  ( closures == null )  {^169^^^^^168^173^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^169^^^^^168^173^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P9_Replace_Statement]^if  ( predicates == null )  {^169^^^^^168^173^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P9_Replace_Statement]^if  ( transformers[i] == null )  {^169^^^^^168^173^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P15_Unwrap_Block]^return null;^169^170^171^^^168^173^if  ( transformers == null )  { return null; }^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P16_Remove_Block]^^169^170^171^^^168^173^if  ( transformers == null )  { return null; }^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P13_Insert_Block]^if  ( predicates == null )  {     return null; }^169^^^^^168^173^[Delete]^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P13_Insert_Block]^if  ( closures == null )  {     return null; }^169^^^^^168^173^[Delete]^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P8_Replace_Mix]^return false;^170^^^^^168^173^return null;^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P8_Replace_Mix]^return true;^170^^^^^168^173^return null;^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P14_Delete_Statement]^^172^173^^^^168^173^return  ( Transformer<I, O>[] )  transformers.clone (  ) ; }^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[P2_Replace_Operator]^if  ( transformers != null )  {^181^^^^^180^190^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P8_Replace_Mix]^if  ( transformers == false )  {^181^^^^^180^190^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P9_Replace_Statement]^if  ( closures == null )  {^181^^^^^180^190^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^181^^^^^180^190^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P9_Replace_Statement]^if  ( predicates == null )  {^181^^^^^180^190^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P9_Replace_Statement]^if  ( transformers[i] == null )  {^181^^^^^180^190^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The transformer array must not be null");^181^182^183^^^180^190^if  ( transformers == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P16_Remove_Block]^^181^182^183^^^180^190^if  ( transformers == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^181^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^181^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^181^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^181^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^181^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^181^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^181^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The predicate collection must not be null" )   ;^182^^^^^180^190^throw new IllegalArgumentException  (" ")  ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^182^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^182^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^182^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^182^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^if  ( transformers[i] != null )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P6_Replace_Expression]^if  ( "The transformer array must not contain a null transformer, index " + i + " was null" )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P6_Replace_Expression]^if  ( "The transformer array must not contain a null transformer, index " + i )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P8_Replace_Mix]^if  ( transformers[i] == this )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P9_Replace_Statement]^if  ( closures == null )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P9_Replace_Statement]^if  ( predicates[i] == null )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P9_Replace_Statement]^if  ( preds[i] == null )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P9_Replace_Statement]^if  ( transformers == null )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P9_Replace_Statement]^if  ( closures[i] == null )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("The transformer array must not contain a null transformer, index " + i) + " was null"));^185^186^187^188^^180^190^if  ( transformers[i] == null )  { throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P16_Remove_Block]^^185^186^187^188^^180^190^if  ( transformers[i] == null )  { throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ; }^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate collection must not be null" ) ; }^185^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^185^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^185^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( predicates == null )  {     throw new IllegalArgumentException ( "The predicate array must not be null" ) ; }^185^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "The closure array must not be null" ) ; }^185^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^185^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  ( transformers == null )  {     throw new IllegalArgumentException ( "The transformer array must not be null" ) ; }^185^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  <  i  <  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  &  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ansformer, indexhe transformer array must not contain a null transformer, index " + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was nulla" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  )  ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( predicates[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate array must not contain a null predicate, index " + i )  + " was null" )  ) ; }^186^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( closures[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The closure array must not contain a null closure, index " + i )  + " was null" )  ) ; }^186^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( preds[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The predicate collection must not contain a null predicate, index " + i )  + " was null" )  ) ; }^186^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P13_Insert_Block]^if  (  ( transformers[i] )  == null )  {     throw new IllegalArgumentException (  (  ( "The transformer array must not contain a null transformer, index " + i )  + " was null" )  ) ; }^186^^^^^180^190^[Delete]^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  >>  i  >>  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index The " + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was " ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i == transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^for  &&  ( int i = 0; i < transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^for  &  ( int i = 0; i < transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^for  ( int i = -1; i < transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P8_Replace_Mix]^if  ( transformers[i] == true )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  >  i  >  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  >=  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "sformhe transformer array must not contain a null transformer, index " + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + "" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  <<  i  <<  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  >  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index  a null trans" + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was nullas" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  !=  i  !=  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  <  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "er array must " + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "   instanceof   i   instanceof   " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ansformer array m" + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was nu" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ; ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  &&  i  &&  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index  must not contain a " + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null wa" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^for  ( int i = 1; i < transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  |  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "l transfo" + i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + "nuwas null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
