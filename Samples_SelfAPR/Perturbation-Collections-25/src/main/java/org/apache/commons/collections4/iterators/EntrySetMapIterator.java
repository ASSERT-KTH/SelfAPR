[P8_Replace_Mix]^private  Map<K, V> map;^42^^^^^37^47^private final Map<K, V> map;^[CLASS] EntrySetMapIterator   [VARIABLES] 
[P3_Replace_Literal]^private boolean canRemove = true;^45^^^^^40^50^private boolean canRemove = false;^[CLASS] EntrySetMapIterator   [VARIABLES] 
[P14_Delete_Statement]^^53^^^^^52^56^super (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] <init> [RETURN_TYPE] Map)   Map<K, V> map [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P8_Replace_Mix]^this.map =  null;^54^^^^^52^56^this.map = map;^[CLASS] EntrySetMapIterator  [METHOD] <init> [RETURN_TYPE] Map)   Map<K, V> map [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P8_Replace_Mix]^this.iterator =  null.entrySet (  ) .iterator (  ) ;^55^^^^^52^56^this.iterator = map.entrySet (  ) .iterator (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] <init> [RETURN_TYPE] Map)   Map<K, V> map [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P11_Insert_Donor_Statement]^iterator = map.entrySet (  ) .iterator (  ) ;this.iterator = map.entrySet (  ) .iterator (  ) ;^55^^^^^52^56^this.iterator = map.entrySet (  ) .iterator (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] <init> [RETURN_TYPE] Map)   Map<K, V> map [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^55^^^^^52^56^this.iterator = map.entrySet (  ) .iterator (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] <init> [RETURN_TYPE] Map)   Map<K, V> map [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P7_Replace_Invocation]^return iterator.next (  ) ;^65^^^^^64^66^return iterator.hasNext (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^65^^^^^64^66^return iterator.hasNext (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P7_Replace_Invocation]^last = iterator.hasNext (  ) ;^75^^^^^74^78^last = iterator.next (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P8_Replace_Mix]^last  =  last ;^75^^^^^74^78^last = iterator.next (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^75^^^^^74^78^last = iterator.next (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P11_Insert_Donor_Statement]^iterator.remove (  ) ;last = iterator.next (  ) ;^75^^^^^74^78^last = iterator.next (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P11_Insert_Donor_Statement]^return iterator.hasNext (  ) ;last = iterator.next (  ) ;^75^^^^^74^78^last = iterator.next (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P3_Replace_Literal]^canRemove = false;^76^^^^^74^78^canRemove = true;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P11_Insert_Donor_Statement]^canRemove = false;canRemove = true;^76^^^^^74^78^canRemove = true;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P5_Replace_Variable]^return this.getKey (  ) ;^77^^^^^74^78^return last.getKey (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P7_Replace_Invocation]^return last.getValue (  ) ;^77^^^^^74^78^return last.getKey (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P8_Replace_Mix]^return this.getValue (  ) ;^77^^^^^74^78^return last.getKey (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^77^^^^^74^78^return last.getKey (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^if  ( canRemove != false )  {^92^^^^^91^98^if  ( canRemove == false )  {^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P3_Replace_Literal]^if  ( canRemove == true )  {^92^^^^^91^98^if  ( canRemove == false )  {^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Iterator remove() can only be called once after next()");^92^93^94^^^91^98^if  ( canRemove == false )  { throw new IllegalStateException  (" ")  ; }^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P16_Remove_Block]^^92^93^94^^^91^98^if  ( canRemove == false )  { throw new IllegalStateException  (" ")  ; }^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^92^^^^^91^98^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator setValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^92^^^^^91^98^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getKey (  )  can only be called after next (  )  and before remove (  ) " ) ; }^92^^^^^91^98^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " )   ;^93^^^^^91^98^throw new IllegalStateException  (" ")  ;^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^93^^^^^91^98^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator setValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^93^^^^^91^98^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getKey (  )  can only be called after next (  )  and before remove (  ) " ) ; }^93^^^^^91^98^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( canRemove )  == false )  {     throw new IllegalStateException ( "Iterator remove (  )  can only be called once after next (  ) " ) ; }^93^^^^^91^98^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P7_Replace_Invocation]^iterator.next (  ) ;^95^^^^^91^98^iterator.remove (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^95^96^^^^91^98^iterator.remove (  ) ; last = null;^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P11_Insert_Donor_Statement]^last = iterator.next (  ) ;iterator.remove (  ) ;^95^^^^^91^98^iterator.remove (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P11_Insert_Donor_Statement]^return iterator.hasNext (  ) ;iterator.remove (  ) ;^95^^^^^91^98^iterator.remove (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P8_Replace_Mix]^last = true;^96^^^^^91^98^last = null;^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P3_Replace_Literal]^canRemove = true;^97^^^^^91^98^canRemove = false;^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P11_Insert_Donor_Statement]^canRemove = true;canRemove = false;^97^^^^^91^98^canRemove = false;^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P12_Insert_Condition]^if  ( canRemove == false )  { canRemove = false; }^97^^^^^91^98^canRemove = false;^[CLASS] EntrySetMapIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^if  ( last != null )  {^109^^^^^108^113^if  ( last == null )  {^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P8_Replace_Mix]^if  ( last == false )  {^109^^^^^108^113^if  ( last == null )  {^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Iterator getKey() can only be called after next() and before remove()");^109^110^111^^^108^113^if  ( last == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P16_Remove_Block]^^109^110^111^^^108^113^if  ( last == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^109^^^^^108^113^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator setValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^109^^^^^108^113^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( canRemove )  == false )  {     throw new IllegalStateException ( "Iterator remove (  )  can only be called once after next (  ) " ) ; }^109^^^^^108^113^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " )   ;^110^^^^^108^113^throw new IllegalStateException  (" ")  ;^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^110^^^^^108^113^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator setValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^110^^^^^108^113^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getKey (  )  can only be called after next (  )  and before remove (  ) " ) ; }^110^^^^^108^113^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( canRemove )  == false )  {     throw new IllegalStateException ( "Iterator remove (  )  can only be called once after next (  ) " ) ; }^110^^^^^108^113^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P7_Replace_Invocation]^return last.getValue (  ) ;^112^^^^^108^113^return last.getKey (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^112^^^^^108^113^return last.getKey (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^if  ( last != null )  {^123^^^^^122^127^if  ( last == null )  {^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P8_Replace_Mix]^if  ( last == false )  {^123^^^^^122^127^if  ( last == null )  {^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Iterator getValue() can only be called after next() and before remove()");^123^124^125^^^122^127^if  ( last == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P16_Remove_Block]^^123^124^125^^^122^127^if  ( last == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator setValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^123^^^^^122^127^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getKey (  )  can only be called after next (  )  and before remove (  ) " ) ; }^123^^^^^122^127^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( canRemove )  == false )  {     throw new IllegalStateException ( "Iterator remove (  )  can only be called once after next (  ) " ) ; }^123^^^^^122^127^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Iterator getKey (  )  can only be called after next (  )  and before remove (  ) " )   ;^124^^^^^122^127^throw new IllegalStateException  (" ")  ;^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^124^^^^^122^127^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator setValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^124^^^^^122^127^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getKey (  )  can only be called after next (  )  and before remove (  ) " ) ; }^124^^^^^122^127^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( canRemove )  == false )  {     throw new IllegalStateException ( "Iterator remove (  )  can only be called once after next (  ) " ) ; }^124^^^^^122^127^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P7_Replace_Invocation]^return last.getKey (  ) ;^126^^^^^122^127^return last.getValue (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^126^^^^^122^127^return last.getValue (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^if  ( last != null )  {^140^^^^^139^144^if  ( last == null )  {^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P8_Replace_Mix]^if  ( last == false )  {^140^^^^^139^144^if  ( last == null )  {^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Iterator setValue() can only be called after next() and before remove()");^140^141^142^^^139^144^if  ( last == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P16_Remove_Block]^^140^141^142^^^139^144^if  ( last == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^140^^^^^139^144^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getKey (  )  can only be called after next (  )  and before remove (  ) " ) ; }^140^^^^^139^144^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P13_Insert_Block]^if  (  ( canRemove )  == false )  {     throw new IllegalStateException ( "Iterator remove (  )  can only be called once after next (  ) " ) ; }^140^^^^^139^144^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " )   ;^141^^^^^139^144^throw new IllegalStateException  (" ")  ;^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^141^^^^^139^144^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator setValue (  )  can only be called after next (  )  and before remove (  ) " ) ; }^141^^^^^139^144^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P13_Insert_Block]^if  (  ( last )  == null )  {     throw new IllegalStateException ( "Iterator getKey (  )  can only be called after next (  )  and before remove (  ) " ) ; }^141^^^^^139^144^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P13_Insert_Block]^if  (  ( canRemove )  == false )  {     throw new IllegalStateException ( "Iterator remove (  )  can only be called once after next (  ) " ) ; }^141^^^^^139^144^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P5_Replace_Variable]^return value.setValue ( last ) ;^143^^^^^139^144^return last.setValue ( value ) ;^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P7_Replace_Invocation]^return last .getValue (  )  ;^143^^^^^139^144^return last.setValue ( value ) ;^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P14_Delete_Statement]^^143^^^^^139^144^return last.setValue ( value ) ;^[CLASS] EntrySetMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  V  value  
[P8_Replace_Mix]^iterator ;^151^^^^^150^154^iterator = map.entrySet (  ) .iterator (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P11_Insert_Donor_Statement]^this.iterator = map.entrySet (  ) .iterator (  ) ;iterator = map.entrySet (  ) .iterator (  ) ;^151^^^^^150^154^iterator = map.entrySet (  ) .iterator (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^151^152^^^^150^154^iterator = map.entrySet (  ) .iterator (  ) ; last = null;^[CLASS] EntrySetMapIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^151^^^^^150^154^iterator = map.entrySet (  ) .iterator (  ) ;^[CLASS] EntrySetMapIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P8_Replace_Mix]^last = false;^152^^^^^150^154^last = null;^[CLASS] EntrySetMapIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P3_Replace_Literal]^canRemove = true;^153^^^^^150^154^canRemove = false;^[CLASS] EntrySetMapIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P11_Insert_Donor_Statement]^canRemove = true;canRemove = false;^153^^^^^150^154^canRemove = false;^[CLASS] EntrySetMapIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P12_Insert_Condition]^if  ( canRemove == false )  { canRemove = false; }^153^^^^^150^154^canRemove = false;^[CLASS] EntrySetMapIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^if  ( last == null )  {^163^^^^^162^167^if  ( last != null )  {^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P6_Replace_Expression]^if  ( (("MapIterator[" + getKey()) + "=") + getValue() + "]" )  {^163^^^^^162^167^if  ( last != null )  {^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P6_Replace_Expression]^if  (  ( "MapIterator[" +  ( getKey (  )  )  )  + "=" + getValue (  ) )  {^163^^^^^162^167^if  ( last != null )  {^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P6_Replace_Expression]^if  ( "MapIterator[" +  ( getKey (  )  )  + "=" )  {^163^^^^^162^167^if  ( last != null )  {^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P6_Replace_Expression]^if  ( "MapIterator[" + getKey (  ) )  {^163^^^^^162^167^if  ( last != null )  {^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P8_Replace_Mix]^if  ( last != false )  {^163^^^^^162^167^if  ( last != null )  {^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P15_Unwrap_Block]^return ((("MapIterator[" + (getKey())) + "=") + (getValue())) + "]";^163^164^165^^^162^167^if  ( last != null )  { return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]"; }^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P16_Remove_Block]^^163^164^165^^^162^167^if  ( last != null )  { return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]"; }^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^return "MapIterator[" + getKey (  >=  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^return "MapIterator[" + getKey (  ==  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^return "MapIterator[" + getKey (  <  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^return "MapIterator["  >  getKey (  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P3_Replace_Literal]^return "MapIterator[MapIterat" + getKey (  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P3_Replace_Literal]^return "MapIterator[" + getKey (  )  + "" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P7_Replace_Invocation]^return "MapIterator[" + getValue (  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P7_Replace_Invocation]^return "MapIterator[" + getKey (  )  + "=" + getKey (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P13_Insert_Block]^if  (  ( last )  != null )  {     return  (  (  ( "MapIterator[" +  ( getKey (  )  )  )  + "=" )  +  ( getValue (  )  )  )  + "]"; }^164^^^^^162^167^[Delete]^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P14_Delete_Statement]^^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^return "MapIterator[" + getKey (  <<  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^return "MapIterator[" + getKey (  !=  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P2_Replace_Operator]^return "MapIterator["  &&  getKey (  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P3_Replace_Literal]^return "MapIterator[erator" + getKey (  )  + "=" + getValue (  )  + "]";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P3_Replace_Literal]^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "";^164^^^^^162^167^return "MapIterator[" + getKey (  )  + "=" + getValue (  )  + "]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
[P3_Replace_Literal]^return "MapIterato";^166^^^^^162^167^return "MapIterator[]";^[CLASS] EntrySetMapIterator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Iterator  iterator  Entry  last  boolean  canRemove  Map  map  
