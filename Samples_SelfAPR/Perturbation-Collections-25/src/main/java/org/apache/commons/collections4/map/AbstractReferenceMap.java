[P1_Replace_Type]^public final  short  value;^91^^^^^86^96^public final int value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P3_Replace_Literal]^HARD ( -8 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P3_Replace_Literal]^HARD ( 0 ) , SOFT ( -3 ) , WEAK ( 2 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P8_Replace_Mix]^HARD ( 0 ) , SOFT ( 1 - 1 ) , WEAK ( 2 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P3_Replace_Literal]^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 9 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P8_Replace_Mix]^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 1 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P12_Insert_Condition]^if  ( type == ReferenceStrength.WEAK )  { private ReferenceStrength keyType; }^121^^^^^116^126^private ReferenceStrength keyType;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P12_Insert_Condition]^if  ( type == ReferenceStrength.SOFT )  { private ReferenceStrength keyType; }^121^^^^^116^126^private ReferenceStrength keyType;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P8_Replace_Mix]^private  AbstractReferenceMap<K, V> parent;^594^^^^^589^599^private final AbstractReferenceMap<K, V> parent;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P1_Replace_Type]^long  index;^761^^^^^756^766^int index;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P8_Replace_Mix]^short  index;^761^^^^^756^766^int index;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P1_Replace_Type]^long  expectedModCount;^771^^^^^766^776^int expectedModCount;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P1_Replace_Type]^private final  long  hash;^943^^^^^938^948^private final int hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P8_Replace_Mix]^private final  short  hash;^943^^^^^938^948^private final int hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P1_Replace_Type]^private final  long  hash;^961^^^^^956^966^private final int hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P8_Replace_Mix]^private   long  hash;^961^^^^^956^966^private final int hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[P5_Replace_Variable]^this.value = index;^113^^^^^112^114^this.value = value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^this.hash = hash;this.value = value;^113^^^^^112^114^this.value = value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^value = null;this.value = value;^113^^^^^112^114^this.value = value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^this.valueType = valueType;this.value = value;^113^^^^^112^114^this.value = value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^nextValue = null;this.value = value;^113^^^^^112^114^this.value = value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^currentValue = nextValue;this.value = value;^113^^^^^112^114^this.value = value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^this.purgeValues = purgeValues;this.value = value;^113^^^^^112^114^this.value = value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^this.parent = parent;this.value = value;^113^^^^^112^114^this.value = value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P14_Delete_Statement]^^144^^^^^143^145^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap()   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super ( r, q ) ;super (  ) ;^144^^^^^143^145^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap()   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;super (  ) ;^144^^^^^143^145^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap()   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super ( parent ) ;super (  ) ;^144^^^^^143^145^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap()   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;super (  ) ;^144^^^^^143^145^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap()   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;super (  ) ;^144^^^^^143^145^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap()   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^init (  ) ;super (  ) ;^144^^^^^143^145^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap()   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[P5_Replace_Variable]^super ( value, loadFactor ) ;^167^^^^^164^171^super ( capacity, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P5_Replace_Variable]^super (  loadFactor ) ;^167^^^^^164^171^super ( capacity, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P5_Replace_Variable]^super ( capacity ) ;^167^^^^^164^171^super ( capacity, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P5_Replace_Variable]^super ( loadFactor, capacity ) ;^167^^^^^164^171^super ( capacity, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P14_Delete_Statement]^^167^^^^^164^171^super ( capacity, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^out.writeFloat ( loadFactor ) ;super ( capacity, loadFactor ) ;^167^^^^^164^171^super ( capacity, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P5_Replace_Variable]^this.keyType = valueType;^168^^^^^164^171^this.keyType = keyType;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^this.valueType = valueType;this.keyType = keyType;^168^^^^^164^171^this.keyType = keyType;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P5_Replace_Variable]^this.valueType = keyType;^169^^^^^164^171^this.valueType = valueType;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^this.value = value;this.valueType = valueType;^169^^^^^164^171^this.valueType = valueType;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^this.keyType = keyType;this.valueType = valueType;^169^^^^^164^171^this.valueType = valueType;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P8_Replace_Mix]^this.purgeValues =  null;^170^^^^^164^171^this.purgeValues = purgeValues;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^this.value = value;this.purgeValues = purgeValues;^170^^^^^164^171^this.purgeValues = purgeValues;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^this.purgeValues = in.readBoolean (  ) ;this.purgeValues = purgeValues;^170^^^^^164^171^this.purgeValues = purgeValues;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[P14_Delete_Statement]^^512^^^^^511^513^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super ( r, q ) ;super ( parent ) ;^512^^^^^511^513^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;super ( parent ) ;^512^^^^^511^513^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;super ( parent ) ;^512^^^^^511^513^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;super ( parent ) ;^512^^^^^511^513^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P14_Delete_Statement]^^538^^^^^537^539^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, ?> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super ( r, q ) ;super ( parent ) ;^538^^^^^537^539^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, ?> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;super ( parent ) ;^538^^^^^537^539^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, ?> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;super ( parent ) ;^538^^^^^537^539^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, ?> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;super ( parent ) ;^538^^^^^537^539^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, ?> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P14_Delete_Statement]^^564^^^^^563^565^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<?, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super ( r, q ) ;super ( parent ) ;^564^^^^^563^565^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<?, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;super ( parent ) ;^564^^^^^563^565^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<?, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;super ( parent ) ;^564^^^^^563^565^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<?, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;super ( parent ) ;^564^^^^^563^565^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<?, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  AbstractHashedMap  parent  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  capacity  expectedModCount  hash  index  value  
[P5_Replace_Variable]^super ( next, value, null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^super (  hashCode, null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^super ( next,  null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^super ( hashCode, next, null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^607^608^^^^605^611^super ( next, hashCode, null, null ) ; this.parent = parent;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^this.parent =  null;^608^^^^^605^611^this.parent = parent;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.value = value;this.parent = parent;^608^^^^^605^611^this.parent = parent;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.hash = hash;this.parent = parent;^608^^^^^605^611^this.parent = parent;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType, nextKey, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType, key, value ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType,  hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType, key ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference (  key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( hashCode.keyType, key, parent ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( key.keyType, parent, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType, hashCode, key ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( parent, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^this.key =  toReference ( null.keyType, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^value = toReference ( parent.valueType, obj, hashCode ) ;this.key = toReference ( parent.keyType, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.value = toReference ( parent.valueType, value, hashCode ) ;this.key = toReference ( parent.keyType, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType, key, index ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( WEAK, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType.keyType, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.key = toReference ( hashCode, key, parent.keyType ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^this.key = toReference ( 2.keyType, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^609^610^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ; this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( parent.valueType, nextValue, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( parent.valueType, value, index ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( keyType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( parent.valueType,  hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( parent.valueType, value ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference (  value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( hashCode.valueType, value, parent ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( value.valueType, parent, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( value, parent.valueType, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^this.value =  toReference ( null.valueType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^value = toReference ( parent.valueType, obj, hashCode ) ;this.value = toReference ( parent.valueType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.key = toReference ( parent.keyType, key, hashCode ) ;this.value = toReference ( parent.valueType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( parent.valueType, hashCode, value ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.value = toReference ( hashCode, value, parent.valueType ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^this.value = toReference ( parent.valueType, value, value ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^774^775^^^^773^780^super (  ) ; this.parent = parent;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( r, q ) ;super (  ) ;^774^^^^^773^780^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;super (  ) ;^774^^^^^773^780^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( parent ) ;super (  ) ;^774^^^^^773^780^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;super (  ) ;^774^^^^^773^780^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;super (  ) ;^774^^^^^773^780^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^init (  ) ;super (  ) ;^774^^^^^773^780^super (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^this.parent =  null;^775^^^^^773^780^this.parent = parent;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.value = value;this.parent = parent;^775^^^^^773^780^this.parent = parent;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.hash = hash;this.parent = parent;^775^^^^^773^780^this.parent = parent;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^index = parent.size (  )  == 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^index = parent.size (  )  != 4 ? parent.data.length : 4;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^index = parent.size (  )  != -5 ? parent.data.length : -5;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^index = parent.size() - 2  != 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^index  =  0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^index  =  parent.data.length ;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^index = parent.get (  )  != 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^index = parent.size (  )  != 0  ? parent.data.length : 0 ;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^index = parent.size() - 3  != 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^expectedModCount =  0.modCount;^779^^^^^773^780^expectedModCount = parent.modCount;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^856^^^^^855^857^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( r, q ) ;super ( parent ) ;^856^^^^^855^857^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;super ( parent ) ;^856^^^^^855^857^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;super ( parent ) ;^856^^^^^855^857^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;super ( parent ) ;^856^^^^^855^857^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^872^^^^^871^873^super (  ( AbstractReferenceMap<K, Object> )  parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, ?> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ( AbstractReferenceMap<Object, V> )  parent ) ;super (  ( AbstractReferenceMap<K, Object> )  parent ) ;^872^^^^^871^873^super (  ( AbstractReferenceMap<K, Object> )  parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, ?> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^887^^^^^886^888^super (  ( AbstractReferenceMap<Object, V> )  parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<?, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ( AbstractReferenceMap<K, Object> )  parent ) ;super (  ( AbstractReferenceMap<Object, V> )  parent ) ;^887^^^^^886^888^super (  ( AbstractReferenceMap<Object, V> )  parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<?, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^901^^^^^900^902^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( r, q ) ;super ( parent ) ;^901^^^^^900^902^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;super ( parent ) ;^901^^^^^900^902^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;super ( parent ) ;^901^^^^^900^902^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;super ( parent ) ;^901^^^^^900^902^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^super (  q ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^super ( r ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^super ( q, r ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^946^947^^^^945^948^super ( r, q ) ; this.hash = hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;super ( r, q ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( parent ) ;super ( r, q ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;super ( r, q ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;super ( r, q ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.hash = value;^947^^^^^945^948^this.hash = hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.value = value;this.hash = hash;^947^^^^^945^948^this.hash = hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.parent = parent;this.hash = hash;^947^^^^^945^948^this.hash = hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^super (  q ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^super ( r ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^super ( q, r ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^964^^^^^963^966^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;super ( r, q ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( parent ) ;super ( r, q ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;super ( r, q ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;super ( r, q ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^this.hash = value;^965^^^^^963^966^this.hash = hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.value = value;this.hash = hash;^965^^^^^963^966^this.hash = hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.parent = parent;this.hash = hash;^965^^^^^963^966^this.hash = hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return valueType;^102^^^^^99^110^return HARD;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return keyType;^102^^^^^99^110^return HARD;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return valueType;^104^^^^^99^110^return SOFT;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return valueType;^106^^^^^99^110^return WEAK;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  )   ;^108^^^^^99^110^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^108^^^^^99^110^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^108^^^^^99^110^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^108^^^^^99^110^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^108^^^^^99^110^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^queue ;^178^^^^^177^179^queue = new ReferenceQueue<Object> (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] init [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^entrySet = new ReferenceEntrySet<K, V> ( this ) ;queue = new ReferenceQueue<Object> (  ) ;^178^^^^^177^179^queue = new ReferenceQueue<Object> (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] init [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^values = new ReferenceValues<V> ( this ) ;queue = new ReferenceQueue<Object> (  ) ;^178^^^^^177^179^queue = new ReferenceQueue<Object> (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] init [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^keySet = new ReferenceKeySet<K> ( this ) ;queue = new ReferenceQueue<Object> (  ) ;^178^^^^^177^179^queue = new ReferenceQueue<Object> (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] init [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^purgeBeforeWrite (  ) ;^189^^^^^188^191^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] size [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^189^190^191^^^188^191^purgeBeforeRead (  ) ; return super.size (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] size [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeWrite (  ) ;purgeBeforeRead (  ) ;^189^^^^^188^191^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] size [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;purgeBeforeRead (  ) ;^189^^^^^188^191^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] size [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return super.size() + 7 ;^190^^^^^188^191^return super.size (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] size [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return super.remove (  ) ;^190^^^^^188^191^return super.size (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] size [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return super.size() - 4 ;^190^^^^^188^191^return super.size (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] size [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^190^^^^^188^191^return super.size (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] size [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^purgeBeforeWrite (  ) ;^200^^^^^199^202^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^200^201^202^^^199^202^purgeBeforeRead (  ) ; return super.isEmpty (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeWrite (  ) ;purgeBeforeRead (  ) ;^200^^^^^199^202^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;purgeBeforeRead (  ) ;^200^^^^^199^202^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return super.remove (  ) ;^201^^^^^199^202^return super.isEmpty (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return super .remove ( 0 )  ;^201^^^^^199^202^return super.isEmpty (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^201^^^^^199^202^return super.isEmpty (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^purgeBeforeWrite (  ) ;^212^^^^^211^218^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^212^213^214^215^216^211^218^purgeBeforeRead (  ) ; final Entry<K, V> entry = getEntry ( key ) ; if  ( entry == null )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeWrite (  ) ;purgeBeforeRead (  ) ;^212^^^^^211^218^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;purgeBeforeRead (  ) ;^212^^^^^211^218^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^final Entry<K, V> entry = get ( key ) ;^213^^^^^211^218^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final HashEntry<K, V> current = currentEntry (  ) ;final Entry<K, V> entry = getEntry ( key ) ;^213^^^^^211^218^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^HashEntry<K, V> entry = data[index];final Entry<K, V> entry = getEntry ( key ) ;^213^^^^^211^218^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final Map.Entry<?, ?> entry =  ( Map.Entry<?, ?> ) obj;final Entry<K, V> entry = getEntry ( key ) ;^213^^^^^211^218^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^213^^^^^211^218^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return super.getEntry ( key ) ;final Entry<K, V> entry = getEntry ( key ) ;^213^^^^^211^218^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( entry != null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( entry == this )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return false;^214^215^216^^^211^218^if  ( entry == null )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^214^215^216^^^211^218^if  ( entry == null )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entryKey == null )  ||  ( entryValue == null )  )  {     return false; }^214^^^^^211^218^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     break; }^214^^^^^211^218^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( obj instanceof Entry )  == false )  {     return false; }^214^^^^^211^218^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( value == null )  {     return false; }^214^^^^^211^218^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     return null; }^214^^^^^211^218^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^214^^^^^211^218^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return null; }^214^^^^^211^218^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return true;^215^^^^^211^218^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^return entry.getValue (  )  == null;^217^^^^^211^218^return entry.getValue (  )  != null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return entry.getValue (  )  ;^217^^^^^211^218^return entry.getValue (  )  != null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return null.getValue (  )  != null;^217^^^^^211^218^return entry.getValue (  )  != null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^217^^^^^211^218^return entry.getValue (  )  != null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^purgeBeforeWrite (  ) ;^228^^^^^227^233^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^228^229^230^231^^227^233^purgeBeforeRead (  ) ; if  ( value == null )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeWrite (  ) ;purgeBeforeRead (  ) ;^228^^^^^227^233^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;purgeBeforeRead (  ) ;^228^^^^^227^233^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( value != null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( value == true )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return false;^229^230^231^^^227^233^if  ( value == null )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^229^230^231^^^227^233^if  ( value == null )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entryKey == null )  ||  ( entryValue == null )  )  {     return false; }^229^^^^^227^233^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     break; }^229^^^^^227^233^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     return null; }^229^^^^^227^233^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^229^^^^^227^233^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return null; }^229^^^^^227^233^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return false; }^229^^^^^227^233^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return true;^230^^^^^227^233^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return super.AbstractHashedMap ( value ) ;^232^^^^^227^233^return super.containsValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return super .containsKey ( value )  ;^232^^^^^227^233^return super.containsValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^232^^^^^227^233^return super.containsValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^purgeBeforeWrite (  ) ;^243^^^^^242^249^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^243^244^245^246^247^242^249^purgeBeforeRead (  ) ; final Entry<K, V> entry = getEntry ( key ) ; if  ( entry == null )  { return null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeWrite (  ) ;purgeBeforeRead (  ) ;^243^^^^^242^249^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;purgeBeforeRead (  ) ;^243^^^^^242^249^purgeBeforeRead (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^final Entry<K, V> entry = get ( key ) ;^244^^^^^242^249^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final HashEntry<K, V> current = currentEntry (  ) ;final Entry<K, V> entry = getEntry ( key ) ;^244^^^^^242^249^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^HashEntry<K, V> entry = data[index];final Entry<K, V> entry = getEntry ( key ) ;^244^^^^^242^249^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final Map.Entry<?, ?> entry =  ( Map.Entry<?, ?> ) obj;final Entry<K, V> entry = getEntry ( key ) ;^244^^^^^242^249^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^244^^^^^242^249^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return super.getEntry ( key ) ;final Entry<K, V> entry = getEntry ( key ) ;^244^^^^^242^249^final Entry<K, V> entry = getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( entry != null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( entry == true )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return null;^245^246^247^^^242^249^if  ( entry == null )  { return null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^245^246^247^^^242^249^if  ( entry == null )  { return null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entryKey == null )  ||  ( entryValue == null )  )  {     return false; }^245^^^^^242^249^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     break; }^245^^^^^242^249^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( value == null )  {     return false; }^245^^^^^242^249^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     return null; }^245^^^^^242^249^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^245^^^^^242^249^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( parent.purgeValues )  {     value = null; }^245^^^^^242^249^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return false; }^245^^^^^242^249^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return this;^246^^^^^242^249^return null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return true;^246^^^^^242^249^return null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return entry .getValue (  )  ;^248^^^^^242^249^return entry.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^248^^^^^242^249^return entry.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( key != null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( nextKey == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( key == true )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( obj == this )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^throw new java.lang.NullPointerException("null keys not allowed");^263^264^265^^^262^272^if  ( key == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^263^264^265^^^262^272^if  ( key == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^263^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^263^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^263^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^263^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( value == null )  {     throw new NullPointerException ( "null values not allowed" ) ; }^263^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^throw throw  new NullPointerException ( "null values not allowed" )   ;^264^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     throw new NullPointerException ( "null keys not allowed" ) ; }^264^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( value == null )  {     throw new NullPointerException ( "null values not allowed" ) ; }^264^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NullPointerException  (" ")  ;^264^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NullPointerException  (" ")  ;^264^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new NullPointerException  (" ")  ;^264^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NullPointerException  (" ")  ;^264^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( value != null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( nextValue == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( value == false )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^throw new java.lang.NullPointerException("null values not allowed");^266^267^268^^^262^272^if  ( value == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^266^267^268^^^262^272^if  ( value == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     throw new NullPointerException ( "null keys not allowed" ) ; }^266^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^266^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^266^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^266^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^266^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^throw throw  new NullPointerException ( "null keys not allowed" )   ;^267^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     throw new NullPointerException ( "null keys not allowed" ) ; }^267^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( value == null )  {     throw new NullPointerException ( "null values not allowed" ) ; }^267^^^^^262^272^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NullPointerException  (" ")  ;^267^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NullPointerException  (" ")  ;^267^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new NullPointerException  (" ")  ;^267^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NullPointerException  (" ")  ;^267^^^^^262^272^throw new NullPointerException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^purgeBeforeRead (  ) ;^270^^^^^262^272^purgeBeforeWrite (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^270^271^272^^^262^272^purgeBeforeWrite (  ) ; return super.put ( key, value ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeRead (  ) ;purgeBeforeWrite (  ) ;^270^^^^^262^272^purgeBeforeWrite (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;purgeBeforeWrite (  ) ;^270^^^^^262^272^purgeBeforeWrite (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return super.put (  value ) ;^271^^^^^262^272^return super.put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return super.put ( key ) ;^271^^^^^262^272^return super.put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return super .purge (  )  ;^271^^^^^262^272^return super.put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^271^^^^^262^272^return super.put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( key != null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( key == true )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( obj == this )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return null;^282^283^284^^^281^287^if  ( key == null )  { return null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^282^283^284^^^281^287^if  ( key == null )  { return null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     break; }^282^^^^^281^287^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( value == null )  {     return false; }^282^^^^^281^287^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^282^^^^^281^287^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( parent.purgeValues )  {     value = null; }^282^^^^^281^287^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return null; }^282^^^^^281^287^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return false; }^282^^^^^281^287^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return this;^283^^^^^281^287^return null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return false;^283^^^^^281^287^return null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^purgeBeforeRead (  ) ;^285^^^^^281^287^purgeBeforeWrite (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^285^286^287^^^281^287^purgeBeforeWrite (  ) ; return super.remove ( key ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeRead (  ) ;purgeBeforeWrite (  ) ;^285^^^^^281^287^purgeBeforeWrite (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;purgeBeforeWrite (  ) ;^285^^^^^281^287^purgeBeforeWrite (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return super.put ( key ) ;^286^^^^^281^287^return super.remove ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^286^^^^^281^287^return super.remove ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^super.remove (  ) ;^294^^^^^293^296^super.clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^super .getEntry ( null )  ;^294^^^^^293^296^super.clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^294^^^^^293^296^super.clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( r, q ) ;super.clear (  ) ;^294^^^^^293^296^super.clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( parent ) ;super.clear (  ) ;^294^^^^^293^296^super.clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;super.clear (  ) ;^294^^^^^293^296^super.clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return super.isEmpty (  ) ;super.clear (  ) ;^294^^^^^293^296^super.clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;super.clear (  ) ;^294^^^^^293^296^super.clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^while  ( queue.poll (  )  == null )  {}^295^^^^^293^296^while  ( queue.poll (  )  != null )  {}^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^while  ( queue.ReferenceQueue (  )  != null )  {}^295^^^^^293^296^while  ( queue.poll (  )  != null )  {}^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^while  ( null.poll (  )  != null )  {}^295^^^^^293^296^while  ( queue.poll (  )  != null )  {}^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return return  new ReferenceKeySet<K> ( this )  ;^307^^^^^306^308^return new ReferenceMapIterator<K, V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] mapIterator [RETURN_TYPE] MapIterator   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return  new ReferenceKeySet<K> ( this )  ;^307^^^^^306^308^return new ReferenceMapIterator<K, V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] mapIterator [RETURN_TYPE] MapIterator   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( entrySet != null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( parent == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( parent == false )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^entrySet = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);^319^320^321^^^318^323^if  ( entrySet == null )  { entrySet = new ReferenceEntrySet<K, V> ( this ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^319^320^321^^^318^323^if  ( entrySet == null )  { entrySet = new ReferenceEntrySet<K, V> ( this ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^319^^^^^318^323^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( keySet )  == null )  {     keySet = new ReferenceKeySet<K> ( this ) ; }^319^^^^^318^323^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( values )  == null )  {     values = new ReferenceValues<V> ( this ) ; }^319^^^^^318^323^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^entrySet = entrySet =  new ReferenceKeySet<K> ( this )  ;^320^^^^^318^323^entrySet = new ReferenceEntrySet<K, V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^entrySet =  new ReferenceKeySet<K> ( this )  ;^320^^^^^318^323^entrySet = new ReferenceEntrySet<K, V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^values = new ReferenceValues<V> ( this ) ;entrySet = new ReferenceEntrySet<K, V> ( this ) ;^320^^^^^318^323^entrySet = new ReferenceEntrySet<K, V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^keySet = new ReferenceKeySet<K> ( this ) ;entrySet = new ReferenceEntrySet<K, V> ( this ) ;^320^^^^^318^323^entrySet = new ReferenceEntrySet<K, V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^queue = new ReferenceQueue<Object> (  ) ;entrySet = new ReferenceEntrySet<K, V> ( this ) ;^320^^^^^318^323^entrySet = new ReferenceEntrySet<K, V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^320^^^^^318^323^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( keySet )  == null )  {     keySet = new ReferenceKeySet<K> ( this ) ; }^320^^^^^318^323^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( values )  == null )  {     values = new ReferenceValues<V> ( this ) ; }^320^^^^^318^323^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entrySet )  == null )  {     entrySet = new ReferenceEntrySet<K, V> ( this ) ; }^320^^^^^318^323^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent;^322^^^^^318^323^return entrySet;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( keySet != null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( parent == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( parent == this )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^keySet = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);^332^333^334^^^331^336^if  ( keySet == null )  { keySet = new ReferenceKeySet<K> ( this ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^332^333^334^^^331^336^if  ( keySet == null )  { keySet = new ReferenceKeySet<K> ( this ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( values )  == null )  {     values = new ReferenceValues<V> ( this ) ; }^332^^^^^331^336^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entrySet )  == null )  {     entrySet = new ReferenceEntrySet<K, V> ( this ) ; }^332^^^^^331^336^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^keySet = keySet =  new ReferenceValuesIterator<V> ( this )  ;^333^^^^^331^336^keySet = new ReferenceKeySet<K> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^keySet =  new ReferenceValuesIterator<V> ( this )  ;^333^^^^^331^336^keySet = new ReferenceKeySet<K> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^entrySet = new ReferenceEntrySet<K, V> ( this ) ;keySet = new ReferenceKeySet<K> ( this ) ;^333^^^^^331^336^keySet = new ReferenceKeySet<K> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^values = new ReferenceValues<V> ( this ) ;keySet = new ReferenceKeySet<K> ( this ) ;^333^^^^^331^336^keySet = new ReferenceKeySet<K> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^queue = new ReferenceQueue<Object> (  ) ;keySet = new ReferenceKeySet<K> ( this ) ;^333^^^^^331^336^keySet = new ReferenceKeySet<K> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^333^^^^^331^336^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( keySet )  == null )  {     keySet = new ReferenceKeySet<K> ( this ) ; }^333^^^^^331^336^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( values )  == null )  {     values = new ReferenceValues<V> ( this ) ; }^333^^^^^331^336^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entrySet )  == null )  {     entrySet = new ReferenceEntrySet<K, V> ( this ) ; }^333^^^^^331^336^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent;^335^^^^^331^336^return keySet;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( values != null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( parent == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( values == false )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^values = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);^345^346^347^^^344^349^if  ( values == null )  { values = new ReferenceValues<V> ( this ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^345^346^347^^^344^349^if  ( values == null )  { values = new ReferenceValues<V> ( this ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( keySet )  == null )  {     keySet = new ReferenceKeySet<K> ( this ) ; }^345^^^^^344^349^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entrySet )  == null )  {     entrySet = new ReferenceEntrySet<K, V> ( this ) ; }^345^^^^^344^349^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^values = values =  new ReferenceKeySet<K> ( this )  ;^346^^^^^344^349^values = new ReferenceValues<V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^values =  new ReferenceKeySet<K> ( this )  ;^346^^^^^344^349^values = new ReferenceValues<V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^entrySet = new ReferenceEntrySet<K, V> ( this ) ;values = new ReferenceValues<V> ( this ) ;^346^^^^^344^349^values = new ReferenceValues<V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^keySet = new ReferenceKeySet<K> ( this ) ;values = new ReferenceValues<V> ( this ) ;^346^^^^^344^349^values = new ReferenceValues<V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^queue = new ReferenceQueue<Object> (  ) ;values = new ReferenceValues<V> ( this ) ;^346^^^^^344^349^values = new ReferenceValues<V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^346^^^^^344^349^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( keySet )  == null )  {     keySet = new ReferenceKeySet<K> ( this ) ; }^346^^^^^344^349^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( values )  == null )  {     values = new ReferenceValues<V> ( this ) ; }^346^^^^^344^349^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entrySet )  == null )  {     entrySet = new ReferenceEntrySet<K, V> ( this ) ; }^346^^^^^344^349^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent;^348^^^^^344^349^return values;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^size (  ) ;^358^^^^^357^359^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeRead [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^358^^^^^357^359^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeRead [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;purge (  ) ;^358^^^^^357^359^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeRead [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;purge (  ) ;^358^^^^^357^359^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeRead [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeWrite (  ) ;purge (  ) ;^358^^^^^357^359^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeRead [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeRead (  ) ;purge (  ) ;^358^^^^^357^359^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeRead [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;purge (  ) ;^358^^^^^357^359^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeRead [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^init (  ) ;purge (  ) ;^358^^^^^357^359^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeRead [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^size (  ) ;^367^^^^^366^368^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeWrite [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^367^^^^^366^368^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeWrite [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge ( ref ) ;purge (  ) ;^367^^^^^366^368^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeWrite [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super.clear (  ) ;purge (  ) ;^367^^^^^366^368^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeWrite [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeWrite (  ) ;purge (  ) ;^367^^^^^366^368^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeWrite [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purgeBeforeRead (  ) ;purge (  ) ;^367^^^^^366^368^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeWrite [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;purge (  ) ;^367^^^^^366^368^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeWrite [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^init (  ) ;purge (  ) ;^367^^^^^366^368^purge (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purgeBeforeWrite [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^Reference<?> ref = queue.ReferenceQueue (  ) ;^379^^^^^378^384^Reference<?> ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^379^^^^^378^384^Reference<?> ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^(  ( Reference<?> )  value ) .clear (  ) ;Reference<?> ref = queue.poll (  ) ;^379^^^^^378^384^Reference<?> ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^(  ( Reference<V> )  value ) .clear (  ) ;Reference<?> ref = queue.poll (  ) ;^379^^^^^378^384^Reference<?> ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^ref = queue.poll (  ) ;Reference<?> ref = queue.poll (  ) ;^379^^^^^378^384^Reference<?> ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^while  ( ref == null )  {^380^^^^^378^384^while  ( ref != null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^while  ( null != null )  {^380^^^^^378^384^while  ( ref != null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^ref = 0.poll (  ) ;^382^^^^^378^384^ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^ref = queue.ReferenceQueue (  ) ;^382^^^^^378^384^ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^ref  = null ;^382^^^^^378^384^ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^get ( ref ) ;^381^^^^^378^384^purge ( ref ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^381^^^^^378^384^purge ( ref ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( r, q ) ;purge ( ref ) ;^381^^^^^378^384^purge ( ref ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super ( parent ) ;purge ( ref ) ;^381^^^^^378^384^purge ( ref ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^super (  ) ;purge ( ref ) ;^381^^^^^378^384^purge ( ref ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^purge (  ) ;purge ( ref ) ;^381^^^^^378^384^purge ( ref ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^382^^^^^378^384^ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^Reference<?> ref = queue.poll (  ) ;ref = queue.poll (  ) ;^382^^^^^378^384^ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^ref  =  ref ;^382^^^^^378^384^ref = queue.poll (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^purge ( 4 ) ;^381^^^^^378^384^purge ( ref ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P1_Replace_Type]^final  short  hash = ref.hashCode (  ) ;^395^^^^^391^413^final int hash = ref.hashCode (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^final int hash = ref.equals (  ) ;^395^^^^^391^413^final int hash = ref.hashCode (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final int capacity = in.readInt (  ) ;final int hash = ref.hashCode (  ) ;^395^^^^^391^413^final int hash = ref.hashCode (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final V old = getValue (  ) ;final int hash = ref.hashCode (  ) ;^395^^^^^391^413^final int hash = ref.hashCode (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^395^^^^^391^413^final int hash = ref.hashCode (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P1_Replace_Type]^final  short  index = hashIndex ( hash, data.length ) ;^396^^^^^391^413^final int index = hashIndex ( hash, data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^final int index = valueIndex ( hash, data.length ) ;^396^^^^^391^413^final int index = hashIndex ( hash, data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^final int index = indexIndex ( hash, data.length ) ;^396^^^^^391^413^final int index = hashIndex ( hash, data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^396^397^^^^391^413^final int index = hashIndex ( hash, data.length ) ; HashEntry<K, V> previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^HashEntry<K, V> entry = data[index];HashEntry<K, V> previous = null;^397^^^^^391^413^HashEntry<K, V> previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^HashEntry<K, V> entry = parent[index];^398^^^^^391^413^HashEntry<K, V> entry = data[index];^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final Entry<K, V> entry = getEntry ( key ) ;HashEntry<K, V> entry = data[index];^398^^^^^391^413^HashEntry<K, V> entry = data[index];^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^HashEntry<K, V> previous = null;HashEntry<K, V> entry = data[index];^398^^^^^391^413^HashEntry<K, V> entry = data[index];^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^while  ( entry == null )  {^399^^^^^391^413^while  ( entry != null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^if  (  (  ( ReferenceEntry<K, V> )  entry )  .purge (  )   )  {^400^^^^^391^413^if  (  (  ( ReferenceEntry<K, V> )  entry ) .purge ( ref )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^if (previous == null) {    data[index] = entry.next;}else {    previous.next = entry.next;}; (this.size)--; return ;^400^401^402^403^404^391^413^if  (  (  ( ReferenceEntry<K, V> )  entry ) .purge ( ref )  )  { if  ( previous == null )  { data[index] = entry.next; } else { previous.next = entry.next; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^400^401^402^403^404^391^413^if  (  (  ( ReferenceEntry<K, V> )  entry ) .purge ( ref )  )  { if  ( previous == null )  { data[index] = entry.next; } else { previous.next = entry.next; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( previous != null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( previous == this )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^data[index] = entry.next;^401^402^403^404^405^391^413^if  ( previous == null )  { data[index] = entry.next; } else { previous.next = entry.next; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^401^402^403^404^405^391^413^if  ( previous == null )  { data[index] = entry.next; } else { previous.next = entry.next; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^previous.next =  null.next;^404^^^^^391^413^previous.next = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^previous = entry;previous.next = entry.next;^404^^^^^391^413^previous.next = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^data[index] = entry.next;previous.next = entry.next;^404^^^^^391^413^previous.next = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^entry = entry.next;previous.next = entry.next;^404^^^^^391^413^previous.next = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^data[index]  = null ;^402^^^^^391^413^data[index] = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^previous.next = entry.next;data[index] = entry.next;^402^^^^^391^413^data[index] = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^entry = entry.next;data[index] = entry.next;^402^^^^^391^413^data[index] = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^data[index] ;^402^^^^^391^413^data[index] = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^previous.next =  4.next;^404^^^^^391^413^previous.next = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^previous =  null;^409^^^^^391^413^previous = entry;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^previous.next = entry.next;previous = entry;^409^^^^^391^413^previous = entry;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^previous = null;previous = entry;^409^^^^^391^413^previous = entry;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^entry =  2.next;^410^^^^^391^413^entry = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^entry = entry.next (  ) ;entry = entry.next;^410^^^^^391^413^entry = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^previous.next = entry.next;entry = entry.next;^410^^^^^391^413^entry = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^data[index] = entry.next;entry = entry.next;^410^^^^^391^413^entry = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^entry = e;entry = entry.next;^410^^^^^391^413^entry = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  (  (  ( ReferenceEntry<K, V> )  entry ) .purge ( 1 )  )  {^400^^^^^391^413^if  (  (  ( ReferenceEntry<K, V> )  entry ) .purge ( ref )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^400^^^^^391^413^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^400^^^^^391^413^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entrySet )  == null )  {     entrySet = new ReferenceEntrySet<K, V> ( this ) ; }^400^^^^^391^413^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( previous == false )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^data[index]  =  data[index] ;^402^^^^^391^413^data[index] = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^entry =  null.next;^410^^^^^391^413^entry = entry.next;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( key != null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( key == true )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( obj == this )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return null;^424^425^426^^^423^428^if  ( key == null )  { return null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^424^425^426^^^423^428^if  ( key == null )  { return null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     break; }^424^^^^^423^428^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( value == null )  {     return false; }^424^^^^^423^428^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^424^^^^^423^428^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( parent.purgeValues )  {     value = null; }^424^^^^^423^428^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return null; }^424^^^^^423^428^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return false; }^424^^^^^423^428^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return this;^425^^^^^423^428^return null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return false;^425^^^^^423^428^return null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return super.AbstractHashedMap ( key ) ;^427^^^^^423^428^return super.getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^427^^^^^423^428^return super.getEntry ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^return  ( key != null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value != null ? 0 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return  ( key == null ? hash : key.hashCode (  )  )  ^ ( value == null ? hash : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return  ( key == null ? 3 : key.hashCode (  )  )  ^ ( value == null ? 3 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return  ( value == null ? 0 : key.hashCode (  )  )  ^ ( key == null ? 0 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^return  ( key.hashCode (  )  )  ^ ( value == null ? 0^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return  ( key == null ? 0 : key.equals (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return  ( key == null ? 0 : key .Object (  )   )  ^ ( value == null ? 0 : value^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return  ( value == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^( key == null ? 0 : value.hashCode (  )  ) ;^440^^^^^438^441^( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^( value.hashCode (  )  ) ;^440^^^^^438^441^( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^( value == null ? 0 : value.equals (  )  ) ;^440^^^^^438^441^( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^440^^^^^438^441^( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^key2 = keyType != ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^key2 = keyType == ReferenceStrength.HARD ? key1 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^key2 = valueType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^key2 = keyType == ReferenceStrength.valueType ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^key2 = key2 == ReferenceStrength.HARD ? keyType :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^key2 = keyType (  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 )  .getEntry ( key2 )  ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^key2 =  keyType^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^return key1 == key2 && key1.equals ( key2 ) ;^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^return key1 <= key2 || key1.equals ( key2 ) ;^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return key2 == key1 || key1.equals ( key2 ) ;^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return key1 == key2 || key1 .equals ( key1 )  ;^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return   key1.equals ( key2 ) ;^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return key1 == key2 || key1 .equals ( key2 )  ;^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return return  new ReferenceEntrySetIterator<K, V> ( this )  ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return new ReferenceEntry<K, V> ( this,  hashCode, key, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return new ReferenceEntry<K, V> ( this, next,  key, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return new ReferenceEntry<K, V> ( this, next, hashCode,  value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return new ReferenceEntry<K, V> ( this, next, hashCode, key ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, next, index, key, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, next, hashCode, nextKey, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, next, hashCode, key, nextValue ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, hashCode, next, key, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, next, key, hashCode, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, next, hashCode, value, key ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, next, value, key, hashCode ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return  new ReferenceEntrySetIterator<K, V> ( this )  ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, next, value, key, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, key, hashCode, next, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new ReferenceEntry<K, V> ( this, value, hashCode, key, next ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return return  new ReferenceKeySet<K> ( this )  ;^482^^^^^481^483^return new ReferenceEntrySetIterator<K, V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntrySetIterator [RETURN_TYPE] Iterator   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return  new ReferenceKeySet<K> ( this )  ;^482^^^^^481^483^return new ReferenceEntrySetIterator<K, V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntrySetIterator [RETURN_TYPE] Iterator   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return return  new ReferenceKeySet<K> ( this )  ;^492^^^^^491^493^return new ReferenceKeySetIterator<K> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createKeySetIterator [RETURN_TYPE] Iterator   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return  new ReferenceKeySet<K> ( this )  ;^492^^^^^491^493^return new ReferenceKeySetIterator<K> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createKeySetIterator [RETURN_TYPE] Iterator   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return return  new ReferenceKeySet<K> ( this )  ;^502^^^^^501^503^return new ReferenceValuesIterator<V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createValuesIterator [RETURN_TYPE] Iterator   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return  new ReferenceKeySet<K> ( this )  ;^502^^^^^501^503^return new ReferenceValuesIterator<V> ( this ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createValuesIterator [RETURN_TYPE] Iterator   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return toArray ( new Object[size() - 4 ] ) ;^517^^^^^516^518^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return toArray ( new Object[purge (  ) ] ) ;^517^^^^^516^518^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return toArray ( new Object[size() - 2 ] ) ;^517^^^^^516^518^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^517^^^^^516^518^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P1_Replace_Type]^final  Set <Map.Entry<K, V>> list = new  Set <Map.Entry<K, V>> ( size (  )  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size() - 9  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( purge (  )  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size() + 2  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final List<K> list = new ArrayList<K> ( size (  )  ) ;final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final List<V> list = new ArrayList<V> ( size (  )  ) ;final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size() + 0  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^list .toArray ( arr )  ;^525^^^^^521^528^list.add ( new DefaultMapEntry<K, V> ( entry )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^525^^^^^521^528^list.add ( new DefaultMapEntry<K, V> ( entry )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return arr.toArray ( list ) ;^527^^^^^521^528^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^527^^^^^521^528^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return toArray ( new Object[size() + 9 ] ) ;^543^^^^^542^544^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return toArray ( new Object[purge (  ) ] ) ;^543^^^^^542^544^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return toArray ( new Object[size() + 8 ] ) ;^543^^^^^542^544^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^543^^^^^542^544^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P1_Replace_Type]^final List<K> list = new  Set <K> ( size (  )  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^final List<K> list = new ArrayList<K> ( size() + 5  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^final List<K> list = final List<K> list =  new ArrayList<V> ( size (  )  )   ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^final List<K> list = new ArrayList<K> ( purge (  )  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^final List<K> list = new ArrayList<K> ( size() - 0  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final List<V> list = new ArrayList<V> ( size (  )  ) ;final List<K> list = new ArrayList<K> ( size (  )  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;final List<K> list = new ArrayList<K> ( size (  )  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^list.add ( nextKey ) ;^551^^^^^547^554^list.add ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^551^^^^^547^554^list.add ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^list.add ( value ) ;list.add ( key ) ;^551^^^^^547^554^list.add ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return arr.toArray ( list ) ;^553^^^^^547^554^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return list .ReferenceEntrySet ( 3 )  ;^553^^^^^547^554^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^553^^^^^547^554^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return toArray ( new Object[size() - 9 ] ) ;^569^^^^^568^570^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return toArray ( new Object[purge (  ) ] ) ;^569^^^^^568^570^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return toArray ( new Object[size() + 1 ] ) ;^569^^^^^568^570^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^569^^^^^568^570^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return toArray ( new Object[size() - 4 ] ) ;^569^^^^^568^570^return toArray ( new Object[size (  ) ] ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P1_Replace_Type]^final List<V> list = new  LinkedList <V> ( size (  )  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^final List<V> list = new ArrayList<V> ( size() - 5  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^final List<V> list = final List<V> list =  new ArrayList<K> ( size (  )  )   ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^final List<V> list = new ArrayList<V> ( purge (  )  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final List<K> list = new ArrayList<K> ( size (  )  ) ;final List<V> list = new ArrayList<V> ( size (  )  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;final List<V> list = new ArrayList<V> ( size (  )  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^final List<V> list = new ArrayList<V> ( size() - 7  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^list.add ( nextValue ) ;^577^^^^^573^580^list.add ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^577^^^^^573^580^list.add ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^list.add ( key ) ;list.add ( value ) ;^577^^^^^573^580^list.add ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return arr.toArray ( list ) ;^579^^^^^573^580^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^579^^^^^573^580^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^return  ( K )   ( parent.keyType != ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return  ( K )   ( valueType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return  ( K )   ( parent.keyType == ReferenceStrength.valueType ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? previous :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^return  ( K )   (  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .clear (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return   previous ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^return  ( V )   ( parent.valueType != ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return  ( V )   ( keyType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return  ( V )   ( parent.valueType == ReferenceStrength.valueType ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? previous :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^return  ( V )   (  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .clear (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^final V old = getKey (  ) ;^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final Object entryValue = entry.getValue (  ) ;final V old = getValue (  ) ;^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final int hash = ref.hashCode (  ) ;final V old = getValue (  ) ;^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return entry.getValue (  ) ;final V old = getValue (  ) ;^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^nextValue = e.getValue (  ) ;final V old = getValue (  ) ;^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return current.getValue (  ) ;final V old = getValue (  ) ;^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( parent.valueType <= ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( valueType != ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( parent.valueType != ReferenceStrength.keyType )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( parent != ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( parent.valueType != ReferenceStrength.valueType )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^((java.lang.ref.Reference<V>) (value)).clear();^647^648^649^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  { (  ( Reference<V> )  value ) .clear (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^647^648^649^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  { (  ( Reference<V> )  value ) .clear (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^647^^^^^645^652^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^647^^^^^645^652^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^647^^^^^645^652^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^647^^^^^645^652^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( value )  ) .clear (  ) ; }else     if  ( parent.purgeValues )  {         value = null;     }^647^^^^^645^652^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^(  ( Reference<V> )  value ) .get (  ) ;^648^^^^^645^652^(  ( Reference<V> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^648^^^^^645^652^(  ( Reference<V> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^(  ( Reference<?> )  value ) .clear (  ) ;(  ( Reference<V> )  value ) .clear (  ) ;^648^^^^^645^652^(  ( Reference<V> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^Reference<?> ref = queue.poll (  ) ;(  ( Reference<V> )  value ) .clear (  ) ;^648^^^^^645^652^(  ( Reference<V> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^(  ( Reference<?> )  key ) .clear (  ) ;(  ( Reference<V> )  value ) .clear (  ) ;^648^^^^^645^652^(  ( Reference<V> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( WEAK, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( parent.valueType,  hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference (  obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( parent.valueType, obj ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( obj, parent.valueType, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( parent, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( obj.valueType, parent, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( hashCode, obj, parent.valueType ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^value = purge ( parent.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^value =  toReference ( parent.valueType, old, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.value = toReference ( parent.valueType, value, hashCode ) ;value = toReference ( parent.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.key = toReference ( parent.keyType, key, hashCode ) ;value = toReference ( parent.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( parent.valueType, value, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( null.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( parent.valueType, obj, previous ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( parent.valueType.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^value = toReference ( hashCode.valueType, obj, parent ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^value = toReference ( 3.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return value;^651^^^^^645^652^return old;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( obj != this )  {^665^^^^^664^682^if  ( obj == this )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( entryValue == this )  {^665^^^^^664^682^if  ( obj == this )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^665^^^^^664^682^if  ( obj == this )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^665^^^^^664^682^if  ( obj == this )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return true;^665^666^667^^^664^682^if  ( obj == this )  { return true; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^665^666^667^^^664^682^if  ( obj == this )  { return true; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     break; }^665^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( value == null )  {     return false; }^665^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     return null; }^665^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return null; }^665^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return false; }^665^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return false;^666^^^^^664^682^return true;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( obj instanceof Map.Entry <= false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( obj  >=  Map.Entry == false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^if  ( obj instanceof Map.Entry == true )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( entryValue instanceof Map.Entry == false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^if  ( obj instanceof Entry )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return false;^668^669^670^^^664^682^if  ( obj instanceof Map.Entry == false )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^668^669^670^^^664^682^if  ( obj instanceof Map.Entry == false )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entryKey == null )  ||  ( entryValue == null )  )  {     return false; }^668^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return false; }^668^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return true;^669^^^^^664^682^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final HashEntry<K, V> current = currentEntry (  ) ;final Map.Entry<?, ?> entry =  ( Map.Entry<?, ?> ) obj;^672^^^^^664^682^final Map.Entry<?, ?> entry =  ( Map.Entry<?, ?> ) obj;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final Entry<K, V> entry = getEntry ( key ) ;final Map.Entry<?, ?> entry =  ( Map.Entry<?, ?> ) obj;^672^^^^^664^682^final Map.Entry<?, ?> entry =  ( Map.Entry<?, ?> ) obj;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^final Object entryKey = entry .getValue (  )  ;^673^^^^^664^682^final Object entryKey = entry.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final Object entryValue = entry.getValue (  ) ;final Object entryKey = entry.getKey (  ) ;^673^^^^^664^682^final Object entryKey = entry.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^673^^^^^664^682^final Object entryKey = entry.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^nextKey = e.getKey (  ) ;final Object entryKey = entry.getKey (  ) ;^673^^^^^664^682^final Object entryKey = entry.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^entry = entry.next (  ) ;final Object entryKey = entry.getKey (  ) ;^673^^^^^664^682^final Object entryKey = entry.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return nextEntry (  ) .getKey (  ) ;final Object entryKey = entry.getKey (  ) ;^673^^^^^664^682^final Object entryKey = entry.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final Object entryKey = entry.getKey (  ) ;final Object entryValue = entry.getValue (  ) ;^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^final V old = getValue (  ) ;final Object entryValue = entry.getValue (  ) ;^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^final Object entryValue = entry .getValue (  )  ;^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return entry.getValue (  ) ;final Object entryValue = entry.getValue (  ) ;^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^nextValue = e.getValue (  ) ;final Object entryValue = entry.getValue (  ) ;^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return nextEntry (  ) .getValue (  ) ;final Object entryValue = entry.getValue (  ) ;^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( entryKey == null && entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( entryKey != null || entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( entryKey == null || entryValue != null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( obj == null || entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( entryKey == null || obj == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( entryValue == null || entryKey == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^if  ( entryKey == null ) {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^if  (  entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  (  entryValue == true )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return false;^675^676^677^^^664^682^if  ( entryKey == null || entryValue == null )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^675^676^677^^^664^682^if  ( entryKey == null || entryValue == null )  { return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( obj instanceof Entry )  == false )  {     return false; }^675^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( value == null )  {     return false; }^675^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( e == null )  {     currentKey = null;     currentValue = null;     return false; }^675^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return null; }^675^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return false; }^675^^^^^664^682^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P3_Replace_Literal]^return true;^676^^^^^664^682^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^return parent.isEqualKey ( entryKey, key )  || parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent.isEqualKey ( obj, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( obj, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent.isEqualKey ( entryKey, previous )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent.isEqualKey (  key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue (  getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent.isEqualKey ( entryKey )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent.isEqualKey ( key, entryKey )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return parent.isEqualKey ( entryValue, key )  && parent.isEqualValue ( entryKey, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return entryValue.isEqualKey ( entryKey, key )  && parent.isEqualValue ( parent, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return key.isEqualKey ( entryKey, parent )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return parent.containsValue ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return parent.isEqualKey ( entryKey, key )  && parent.containsValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return parent.isEqualKey ( entryKey, key )  && parent .isEqualKey ( entryKey , entryKey )  ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getKey (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return entryKey.isEqualKey ( parent, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return parent.containsValue ( entryKey, previous )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^parent.isEqualValue ( obj, getValue (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^parent.isEqualValue (  getValue (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^parent.containsValue ( entryValue, getValue (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^parent.isEqualValue ( entryValue, getKey (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;parent.isEqualValue ( entryValue, getValue (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return 3.hashEntry ( getKey (  ) , getValue (  )  ) ;^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return parent.purgeBeforeRead ( getKey (  ) , getValue (  )  ) ;^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return parent.hashEntry ( getValue (  ) , getValue (  )  ) ;^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^return parent.hashEntry ( getKey (  ) , getKey (  )  ) ;^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( type != ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( valueType == ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( type == ReferenceStrength.valueType )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( type == ReferenceStrength.type )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( parent.valueType != ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return referent;^709^710^711^^^708^719^if  ( type == ReferenceStrength.HARD )  { return referent; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^709^710^711^^^708^719^if  ( type == ReferenceStrength.HARD )  { return referent; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^709^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^709^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^709^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( entrySet )  == null )  {     entrySet = new ReferenceEntrySet<K, V> ( this ) ; }^709^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^709^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( value )  ) .clear (  ) ; }else     if  ( parent.purgeValues )  {         value = null;     }^709^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( type > ReferenceStrength.SOFT )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( valueType == ReferenceStrength.SOFT )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( type == ReferenceStrength.valueType )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( parent.valueType != ReferenceStrength.HARD )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash, referent, parent.queue);^712^713^714^^^708^719^if  ( type == ReferenceStrength.SOFT )  { return new SoftRef<T> ( hash, referent, parent.queue ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^712^713^714^^^708^719^if  ( type == ReferenceStrength.SOFT )  { return new SoftRef<T> ( hash, referent, parent.queue ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^712^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^712^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^712^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^712^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return return  new ReferenceMapIterator<K, V> ( this )  ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return new SoftRef<T> (  referent, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return new SoftRef<T> ( hash,  parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( index, referent, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, referent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, referent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( referent, hash, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, parent, referent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, parent.queue, referent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( parent, referent, hash.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return  new ReferenceMapIterator<K, V> ( this )  ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^713^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^713^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^713^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^713^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( value, referent, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( parent.queue, referent, hash ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, referent, parent.queue.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, referent, parent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( type != ReferenceStrength.WEAK )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( valueType == ReferenceStrength.WEAK )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( type == ReferenceStrength.valueType )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( parent.valueType != ReferenceStrength.HARD )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash, referent, parent.queue);^715^716^717^^^708^719^if  ( type == ReferenceStrength.WEAK )  { return new WeakRef<T> ( hash, referent, parent.queue ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^715^716^717^^^708^719^if  ( type == ReferenceStrength.WEAK )  { return new WeakRef<T> ( hash, referent, parent.queue ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^715^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^715^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^715^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^715^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return return  new SoftRef<T> ( hash, referent, parent.queue )  ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return new WeakRef<T> (  referent, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P4_Replace_Constructor]^return new WeakRef<T> ( hash,  parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( value, referent, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, referent ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, referent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( parent, referent, hash.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( referent, hash, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, referent, parent ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, parent, referent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^return  new SoftRef<T> ( hash, referent, parent.queue )  ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^716^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^716^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^716^^^^^708^719^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( index, referent, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, parent.queue, referent ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, referent, parent.queue.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return new WeakRef<T> ( parent.queue, referent, hash ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^718^^^^^708^719^throw new Error (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^boolean r = parent.keyType != ReferenceStrength.HARD || key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^boolean r = parent.keyType <= ReferenceStrength.HARD && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^boolean r = parent.keyType != ReferenceStrength.HARD && key <= ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^boolean r = keyType != ReferenceStrength.HARD && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^boolean r = parent.keyType != ReferenceStrength.type && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^boolean r = parent.keyType != ReferenceStrength.HARD && previous == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^boolean r = parent.keyType != ReferenceStrength.HARD && ref == key;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^boolean r = parent.keyType.keyType != ReferenceStrength.HARD && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^boolean r = key != ReferenceStrength.HARD && parent.keyType == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^boolean r = valueType != ReferenceStrength.HARD && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^r = r && parent.valueType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^r = r || parent.valueType != ReferenceStrength.HARD || value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^r = r || parent.valueType >= ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^r = r || parent.valueType != ReferenceStrength.HARD && value >= ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^r = purgeValues || parent.valueType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^r = r || valueType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^r = r || parent.valueType != ReferenceStrength.type && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^r = r || parent.valueType != ReferenceStrength.HARD && previous == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^r = ref || parent.valueType != ReferenceStrength.HARD && value == r;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^r = r || ref != ReferenceStrength.HARD && value == parent.valueType;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^r = r || parent != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^r = r || value.valueType != ReferenceStrength.HARD && parent == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^r = r || parent.valueType != ReferenceStrength.HARD && ref == value;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^r =  purgeValues || papurgeValuesent.valueType !^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P12_Insert_Condition]^if  ( type == ReferenceStrength.HARD )  { r = r || parent.valueType != ReferenceStrength.HARD && value == ref; }^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P12_Insert_Condition]^if  ( parent.keyType != ReferenceStrength.HARD )  { r = r || parent.valueType != ReferenceStrength.HARD && value == ref; }^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P12_Insert_Condition]^if  ( parent.valueType != ReferenceStrength.HARD )  { r = r || parent.valueType != ReferenceStrength.HARD && value == ref; }^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^if  ( parent.valueType != HARD )  {^729^^^^^726^740^if  ( r )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( purgeValues )  {^729^^^^^726^740^if  ( r )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^if ((parent.keyType) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD)) {    ((java.lang.ref.Reference<?>) (key)).clear();}; if ((parent.valueType) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD)) {    ((java.lang.ref.Reference<?>) (value)).clear();}else    if (parent.purgeValues) {        value = null;    };^729^730^731^732^^726^740^if  ( r )  { if  ( parent.keyType != ReferenceStrength.HARD )  { (  ( Reference<?> )  key ) .clear (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^729^730^731^732^^726^740^if  ( r )  { if  ( parent.keyType != ReferenceStrength.HARD )  { (  ( Reference<?> )  key ) .clear (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( value )  ) .clear (  ) ; }else     if  ( parent.purgeValues )  {         value = null;     }^729^^^^^726^740^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( parent.keyType == ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( valueType != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( parent.keyType != ReferenceStrength.valueType )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( keyType != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( parent.valueType != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^((java.lang.ref.Reference<?>) (key)).clear();^730^731^732^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  { (  ( Reference<?> )  key ) .clear (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^730^731^732^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  { (  ( Reference<?> )  key ) .clear (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^730^^^^^726^740^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^730^^^^^726^740^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^730^^^^^726^740^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^730^^^^^726^740^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( value )  ) .clear (  ) ; }else     if  ( parent.purgeValues )  {         value = null;     }^730^^^^^726^740^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^(  ( Reference<?> )  key ) .get (  ) ;^731^^^^^726^740^(  ( Reference<?> )  key ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^731^^^^^726^740^(  ( Reference<?> )  key ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^(  ( Reference<?> )  value ) .clear (  ) ;(  ( Reference<?> )  key ) .clear (  ) ;^731^^^^^726^740^(  ( Reference<?> )  key ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^(  ( Reference<V> )  value ) .clear (  ) ;(  ( Reference<?> )  key ) .clear (  ) ;^731^^^^^726^740^(  ( Reference<?> )  key ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P2_Replace_Operator]^if  ( parent.valueType == ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( type != ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( parent.valueType != ReferenceStrength.valueType )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^if  ( parent.valueType != ReferenceStrength.type )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^((java.lang.ref.Reference<?>) (value)).clear();^733^734^735^736^737^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  { (  ( Reference<?> )  value ) .clear (  ) ; } else if  ( parent.purgeValues )  { value = null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^733^734^735^736^737^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  { (  ( Reference<?> )  value ) .clear (  ) ; } else if  ( parent.purgeValues )  { value = null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^} else if  ( parent )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^} else if  ( parent.purgeValues.purgeValues )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P6_Replace_Expression]^} else {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^}  if  ( parent.purgeValues )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P15_Unwrap_Block]^value = null;^735^736^737^^^726^740^} else if  ( parent.purgeValues )  { value = null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P16_Remove_Block]^^735^736^737^^^726^740^} else if  ( parent.purgeValues )  { value = null; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( key == null )  {     return null; }^735^^^^^726^740^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P13_Insert_Block]^if  ( entry == null )  {     return null; }^735^^^^^726^740^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^value = this;^736^^^^^726^740^value = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^this.value = value;value = null;^736^^^^^726^740^value = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^previous = null;value = null;^736^^^^^726^740^value = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^nextKey = null;value = null;^736^^^^^726^740^value = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^nextValue = null;value = null;^736^^^^^726^740^value = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^currentValue = null;value = null;^736^^^^^726^740^value = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^value = false;^736^^^^^726^740^value = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^(  ( Reference<?> )  value ) .get (  ) ;^734^^^^^726^740^(  ( Reference<?> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P14_Delete_Statement]^^734^^^^^726^740^(  ( Reference<?> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^Reference<?> ref = queue.poll (  ) ;(  ( Reference<?> )  value ) .clear (  ) ;^734^^^^^726^740^(  ( Reference<?> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^(  ( Reference<V> )  value ) .clear (  ) ;(  ( Reference<?> )  value ) .clear (  ) ;^734^^^^^726^740^(  ( Reference<?> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P11_Insert_Donor_Statement]^(  ( Reference<?> )  key ) .clear (  ) ;(  ( Reference<?> )  value ) .clear (  ) ;^734^^^^^726^740^(  ( Reference<?> )  value ) .clear (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P8_Replace_Mix]^value = true;^736^^^^^726^740^value = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( parent.keyType.keyType != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^if  ( valueType != ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^} else if  ( r )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P5_Replace_Variable]^return purgeValues;^739^^^^^726^740^return r;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[P7_Replace_Invocation]^hasNext (  ) ;^783^^^^^782^805^checkMod (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^783^^^^^782^805^checkMod (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^while  ( nextEntry (  )  )  {^784^^^^^782^805^while  ( nextNull (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^while  ( getKeyNull (  )  )  {^784^^^^^782^805^while  ( nextNull (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^while  ( e == null || i > 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^while  ( e != null && i > 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^while  ( e == null && i == 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P3_Replace_Literal]^while  ( e == null && i > -8 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^e =   ( ReferenceEntry<K, V> )  parent.data[value];^789^^^^^782^805^e =  ( ReferenceEntry<K, V> )  parent.data[i];^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^if  ( e != null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^if  ( e == false )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( obj == this )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P15_Unwrap_Block]^currentKey = null; currentValue = null; return false;^793^794^795^796^797^782^805^if  ( e == null )  { currentKey = null; currentValue = null; return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P16_Remove_Block]^^793^794^795^796^797^782^805^if  ( e == null )  { currentKey = null; currentValue = null; return false; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( entryKey == null )  ||  ( entryValue == null )  )  {     return false; }^793^^^^^782^805^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^currentKey = this;^794^^^^^782^805^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentKey = nextKey;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^previous = null;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextKey = null;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = null;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^currentValue = false;^795^^^^^782^805^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentKey = null;currentValue = null;^795^^^^^782^805^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^value = null;currentValue = null;^795^^^^^782^805^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^previous = null;currentValue = null;^795^^^^^782^805^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextValue = null;currentValue = null;^795^^^^^782^805^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentValue = null;^795^^^^^782^805^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P3_Replace_Literal]^return true;^796^^^^^782^805^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^if  ( nextEntry (  )  )  {^800^^^^^782^805^if  ( nextNull (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^if  ( getKeyNull (  )  )  {^800^^^^^782^805^if  ( nextNull (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P15_Unwrap_Block]^entry = entry.next();^800^801^802^^^782^805^if  ( nextNull (  )  )  { entry = entry.next (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P16_Remove_Block]^^800^801^802^^^782^805^if  ( nextNull (  )  )  { entry = entry.next (  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^entry = entry.getKey (  ) ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^entry  =  entry ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextKey = e.getKey (  ) ;entry = entry.next (  ) ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^entry = entry.next;entry = entry.next (  ) ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^return entry.getValue (  ) ;entry = entry.next (  ) ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Object entryKey = entry.getKey (  ) ;entry = entry.next (  ) ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^e =   ( ReferenceEntry<K, V> )  parent.data[hashCode];^789^^^^^782^805^e =  ( ReferenceEntry<K, V> )  parent.data[i];^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^entry =  null;^791^^^^^782^805^entry = e;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^entry = entry.next;entry = e;^791^^^^^782^805^entry = e;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^index = value;^792^^^^^782^805^index = i;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^index =  hashCode;^792^^^^^782^805^index = i;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^currentKey = false;^794^^^^^782^805^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P12_Insert_Condition]^if  ( entryKey == null || entryValue == null )  { currentKey = null; currentValue = null; }^794^795^^^^782^805^currentKey = null; currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^currentValue = true;^795^^^^^782^805^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^nextKey = e.setValue (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^nextKey = e .getValue (  )  ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^nextKey =  null.gnulltKnully (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^entry = entry.next (  ) ;nextKey = e.getKey (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextValue = e.getValue (  ) ;nextKey = e.getKey (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^nextValue = e.setValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^nextValue = e .getValue (  )  ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^nextValue =  null.gnulltValunull (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextKey = e.getKey (  ) ;nextValue = e.getValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P1_Replace_Type]^long  i = index;^786^^^^^782^805^int i = index;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^int i = value;^786^^^^^782^805^int i = index;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^798^799^^^^782^805^nextKey = e.getKey (  ) ; nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^return nextEntry (  ) ;nextKey = e.getKey (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^return current.getKey (  ) ;nextKey = e.getKey (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Object entryKey = entry.getKey (  ) ;nextKey = e.getKey (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^return nextEntry (  ) .getKey (  ) ;nextKey = e.getKey (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^return entry.getValue (  ) ;nextValue = e.getValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Object entryValue = entry.getValue (  ) ;nextValue = e.getValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^return current.getValue (  ) ;nextValue = e.getValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^out.writeObject ( it.getValue (  )  ) ;nextValue = e.getValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^return nextEntry (  ) .getValue (  ) ;nextValue = e.getValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final V old = getValue (  ) ;nextValue = e.getValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^while  ( e == null && i >= 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P3_Replace_Literal]^while  ( e == null && i > value )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^e =   ( ReferenceEntry<K, V> )  parent.data[index];^789^^^^^782^805^e =  ( ReferenceEntry<K, V> )  parent.data[i];^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^entry ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^index = index;^792^^^^^782^805^index = i;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^currentKey = true;^794^^^^^782^805^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P1_Replace_Type]^short  i = index;^786^^^^^782^805^int i = index;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^int i = hashCode;^786^^^^^782^805^int i = index;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^784^785^^^^782^805^while  ( nextNull (  )  )  { ReferenceEntry<K, V> e = entry;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^nextValue = 4.getValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P3_Replace_Literal]^return false;^804^^^^^782^805^return true;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^if  ( parent.modCount == expectedModCount )  {^808^^^^^807^811^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P15_Unwrap_Block]^throw new java.util.ConcurrentModificationException();^808^809^810^^^807^811^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P16_Remove_Block]^^808^809^810^^^807^811^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^808^^^^^807^811^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( nextNull (  )  )  &&  ( ! ( hasNext (  )  )  )  )  {     throw new NoSuchElementException (  ) ; }^808^^^^^807^811^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^809^^^^^807^811^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^809^^^^^807^811^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^809^^^^^807^811^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^809^^^^^807^811^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^return nextKey == null && nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^return nextKey != null || nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return key == null || nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return nextKey == null || value == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return nextValue == null || nextKey == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^return   nextValue ;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P12_Insert_Condition]^if  ( entryKey == null || entryValue == null )  { return nextKey == null || nextValue == null; }^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^hasNext (  ) ;^818^^^^^817^829^checkMod (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^818^^^^^817^829^checkMod (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^if  ( nextNull (  )  || !hasNext (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P6_Replace_Expression]^if  ( nextNull (  )  ) {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P6_Replace_Expression]^if  (  !hasNext (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^if  ( nextEntry (  )  && !hasNext (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^if  ( nextNull (  )  && !nextEntry (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException();^819^820^821^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P16_Remove_Block]^^819^820^821^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^819^^^^^817^829^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^819^^^^^817^829^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NoSuchElementException  (" ")  ;^820^^^^^817^829^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^820^^^^^817^829^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new NoSuchElementException  (" ")  ;^820^^^^^817^829^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^820^^^^^817^829^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^820^^^^^817^829^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^previous  =  previous ;^822^^^^^817^829^previous = entry;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^previous.next = entry.next;previous = entry;^822^^^^^817^829^previous = entry;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^previous = null;previous = entry;^822^^^^^817^829^previous = entry;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^entry = entry.getKey (  ) ;^823^^^^^817^829^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^entry  =  entry ;^823^^^^^817^829^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextKey = e.getKey (  ) ;entry = entry.next (  ) ;^823^^^^^817^829^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^entry = entry.next;entry = entry.next (  ) ;^823^^^^^817^829^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^823^824^^^^817^829^entry = entry.next (  ) ; currentKey = nextKey;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^return entry.getValue (  ) ;entry = entry.next (  ) ;^823^^^^^817^829^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Object entryKey = entry.getKey (  ) ;entry = entry.next (  ) ;^823^^^^^817^829^entry = entry.next (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^currentKey = key;^824^^^^^817^829^currentKey = nextKey;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^currentKey  =  currentKey ;^824^^^^^817^829^currentKey = nextKey;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentKey = null;currentKey = nextKey;^824^^^^^817^829^currentKey = nextKey;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentKey = nextKey;^824^^^^^817^829^currentKey = nextKey;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^currentValue = value;^825^^^^^817^829^currentValue = nextValue;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^currentValue ;^825^^^^^817^829^currentValue = nextValue;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^this.value = value;currentValue = nextValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentKey = null;currentValue = nextValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentKey = nextKey;currentValue = nextValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextValue = null;currentValue = nextValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = null;currentValue = nextValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^nextKey = true;^826^^^^^817^829^nextKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentKey = null;nextKey = null;^826^^^^^817^829^nextKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^value = null;nextKey = null;^826^^^^^817^829^nextKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^previous = null;nextKey = null;^826^^^^^817^829^nextKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextValue = null;nextKey = null;^826^^^^^817^829^nextKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P12_Insert_Condition]^if  ( entryKey == null || entryValue == null )  { nextKey = null; nextValue = null; }^826^827^^^^817^829^nextKey = null; nextValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^nextValue = false;^827^^^^^817^829^nextValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^this.value = value;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^value = null;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^previous = null;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextKey = null;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = nextValue;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = null;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^hasNext (  ) ;^832^^^^^831^834^checkMod (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] currentEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^832^^^^^831^834^checkMod (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] currentEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^hasNext (  ) ;^837^^^^^836^846^checkMod (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^837^^^^^836^846^checkMod (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^if  ( previous != null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^if  ( previous == false )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( current == null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException();^838^839^840^^^836^846^if  ( previous == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P16_Remove_Block]^^838^839^840^^^836^846^if  ( previous == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( key == null )  {     throw new NullPointerException ( "null keys not allowed" ) ; }^838^^^^^836^846^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^838^^^^^836^846^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( nextNull (  )  )  &&  ( ! ( hasNext (  )  )  )  )  {     throw new NoSuchElementException (  ) ; }^838^^^^^836^846^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^838^^^^^836^846^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^838^^^^^836^846^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^838^^^^^836^846^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( value == null )  {     throw new NullPointerException ( "null values not allowed" ) ; }^838^^^^^836^846^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  )   ;^839^^^^^836^846^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^839^^^^^836^846^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^839^^^^^836^846^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalStateException  (" ")  ;^839^^^^^836^846^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalStateException  (" ")  ;^839^^^^^836^846^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^839^^^^^836^846^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^839^^^^^836^846^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^parent.remove ( nextKey ) ;^841^^^^^836^846^parent.remove ( currentKey ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^parent.mapIterator ( currentKey ) ;^841^^^^^836^846^parent.remove ( currentKey ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^841^842^^^^836^846^parent.remove ( currentKey ) ; previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^previous = this;^842^^^^^836^846^previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentKey = null;previous = null;^842^^^^^836^846^previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^value = null;previous = null;^842^^^^^836^846^previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^previous = entry;previous = null;^842^^^^^836^846^previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextKey = null;previous = null;^842^^^^^836^846^previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextValue = null;previous = null;^842^^^^^836^846^previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = null;previous = null;^842^^^^^836^846^previous = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^currentKey = false;^843^^^^^836^846^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentKey = nextKey;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^previous = null;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextKey = null;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = null;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P12_Insert_Condition]^if  ( entryKey == null || entryValue == null )  { currentKey = null; currentValue = null; }^843^844^^^^836^846^currentKey = null; currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^currentValue = false;^844^^^^^836^846^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentKey = null;currentValue = null;^844^^^^^836^846^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^value = null;currentValue = null;^844^^^^^836^846^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^previous = null;currentValue = null;^844^^^^^836^846^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^nextValue = null;currentValue = null;^844^^^^^836^846^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentValue = null;^844^^^^^836^846^currentValue = null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^expectedModCount  =  expectedModCount ;^845^^^^^836^846^expectedModCount = parent.modCount;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return nextNull (  ) ;^860^^^^^859^861^return nextEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] Map$Entry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^860^^^^^859^861^return nextEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] Map$Entry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return nextEntry (  ) .getValue (  ) ;^876^^^^^875^877^return nextEntry (  ) .getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return nextNull (  ) .getKey (  ) ;^876^^^^^875^877^return nextEntry (  ) .getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^876^^^^^875^877^return nextEntry (  ) .getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return nextEntry (  ) .getKey (  ) ;^891^^^^^890^892^return nextEntry (  ) .getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return nextNull (  ) .getValue (  ) ;^891^^^^^890^892^return nextEntry (  ) .getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^891^^^^^890^892^return nextEntry (  ) .getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return nextEntry (  ) .getValue (  ) ;^905^^^^^904^906^return nextEntry (  ) .getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return nextNull (  ) .getKey (  ) ;^905^^^^^904^906^return nextEntry (  ) .getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^905^^^^^904^906^return nextEntry (  ) .getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] next [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^final HashEntry<K, V> current = nextEntry (  ) ;^909^^^^^908^914^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Entry<K, V> entry = getEntry ( key ) ;final HashEntry<K, V> current = currentEntry (  ) ;^909^^^^^908^914^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Map.Entry<?, ?> entry =  ( Map.Entry<?, ?> ) obj;final HashEntry<K, V> current = currentEntry (  ) ;^909^^^^^908^914^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^909^^^^^908^914^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^if  ( current != null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^if  ( current == true )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(AbstractHashedMap.GETKEY_INVALID);^910^911^912^^^908^914^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P16_Remove_Block]^^910^911^912^^^908^914^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( key == null )  {     throw new NullPointerException ( "null keys not allowed" ) ; }^910^^^^^908^914^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^910^^^^^908^914^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^910^^^^^908^914^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^910^^^^^908^914^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( value == null )  {     throw new NullPointerException ( "null values not allowed" ) ; }^910^^^^^908^914^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID )   ;^911^^^^^908^914^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^911^^^^^908^914^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^911^^^^^908^914^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^911^^^^^908^914^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^911^^^^^908^914^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^911^^^^^908^914^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalStateException  (" ")  ;^911^^^^^908^914^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalStateException  (" ")  ;^911^^^^^908^914^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return current.setValue (  ) ;^913^^^^^908^914^return current.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return current .getValue (  )  ;^913^^^^^908^914^return current.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^913^^^^^908^914^return current.getKey (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^final HashEntry<K, V> current = nextEntry (  ) ;^917^^^^^916^922^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Entry<K, V> entry = getEntry ( key ) ;final HashEntry<K, V> current = currentEntry (  ) ;^917^^^^^916^922^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Map.Entry<?, ?> entry =  ( Map.Entry<?, ?> ) obj;final HashEntry<K, V> current = currentEntry (  ) ;^917^^^^^916^922^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^917^^^^^916^922^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^if  ( current != null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^if  ( current == false )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(AbstractHashedMap.GETVALUE_INVALID);^918^919^920^^^916^922^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P16_Remove_Block]^^918^919^920^^^916^922^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( key == null )  {     throw new NullPointerException ( "null keys not allowed" ) ; }^918^^^^^916^922^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^918^^^^^916^922^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^918^^^^^916^922^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^918^^^^^916^922^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( value == null )  {     throw new NullPointerException ( "null values not allowed" ) ; }^918^^^^^916^922^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID )   ;^919^^^^^916^922^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^919^^^^^916^922^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^919^^^^^916^922^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^919^^^^^916^922^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^919^^^^^916^922^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^919^^^^^916^922^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalStateException  (" ")  ;^919^^^^^916^922^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalStateException  (" ")  ;^919^^^^^916^922^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return current.setValue (  ) ;^921^^^^^916^922^return current.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^return current .getValue (  )  ;^921^^^^^916^922^return current.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^921^^^^^916^922^return current.getValue (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P7_Replace_Invocation]^final HashEntry<K, V> current = nextEntry (  ) ;^925^^^^^924^930^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Entry<K, V> entry = getEntry ( key ) ;final HashEntry<K, V> current = currentEntry (  ) ;^925^^^^^924^930^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^final Map.Entry<?, ?> entry =  ( Map.Entry<?, ?> ) obj;final HashEntry<K, V> current = currentEntry (  ) ;^925^^^^^924^930^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^925^^^^^924^930^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P2_Replace_Operator]^if  ( current != null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^if  ( current == this )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( values == null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( e == null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entrySet == null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( previous == null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( keySet == null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( value == null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( entry == null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P9_Replace_Statement]^if  ( key == null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(AbstractHashedMap.SETVALUE_INVALID);^926^927^928^^^924^930^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P16_Remove_Block]^^926^927^928^^^924^930^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( key == null )  {     throw new NullPointerException ( "null keys not allowed" ) ; }^926^^^^^924^930^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^926^^^^^924^930^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^926^^^^^924^930^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^926^^^^^924^930^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( value == null )  {     throw new NullPointerException ( "null values not allowed" ) ; }^926^^^^^924^930^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID )   ;^927^^^^^924^930^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^927^^^^^924^930^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^927^^^^^924^930^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^927^^^^^924^930^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^927^^^^^924^930^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^927^^^^^924^930^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalStateException  (" ")  ;^927^^^^^924^930^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalStateException  (" ")  ;^927^^^^^924^930^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return current.setValue ( old ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return value.setValue ( current ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^return current .getValue (  )  ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return current.setValue ( obj ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P14_Delete_Statement]^^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return value;^952^^^^^951^953^return hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^return index;^952^^^^^951^953^return hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return index;^970^^^^^969^971^return hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^return i;^970^^^^^969^971^return hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^out.writeInt ( index ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P5_Replace_Variable]^out.writeInt ( valueType.value ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P5_Replace_Variable]^out.writeInt ( keyType ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^out.writeFloat ( keyType.value ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P8_Replace_Mix]^out.writeInt ( i ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^996^997^^^^995^1007^out.writeInt ( keyType.value ) ; out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( data.length ) ;out.writeInt ( keyType.value ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeBoolean ( purgeValues ) ;out.writeInt ( keyType.value ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.getValue (  )  ) ;out.writeInt ( keyType.value ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( valueType.value ) ;out.writeInt ( keyType.value ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^put ( key, value ) ;out.writeInt ( keyType.value ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P5_Replace_Variable]^out.writeInt ( value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P5_Replace_Variable]^out.writeInt ( type.value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P5_Replace_Variable]^out.writeInt ( valueType ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P5_Replace_Variable]^out.writeInt ( valueType.value.value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^out.writeFloat ( valueType.value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^997^998^^^^995^1007^out.writeInt ( valueType.value ) ; out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( data.length ) ;out.writeInt ( valueType.value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( keyType.value ) ;out.writeInt ( valueType.value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeBoolean ( purgeValues ) ;out.writeInt ( valueType.value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.getValue (  )  ) ;out.writeInt ( valueType.value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P5_Replace_Variable]^out.writeBoolean ( r ) ;^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^out.writeFloat ( purgeValues ) ;^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.next (  )  ) ;out.writeBoolean ( purgeValues ) ;^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( keyType.value ) ;out.writeBoolean ( purgeValues ) ;^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( null ) ;out.writeBoolean ( purgeValues ) ;^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.getValue (  )  ) ;out.writeBoolean ( purgeValues ) ;^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( valueType.value ) ;out.writeBoolean ( purgeValues ) ;^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeFloat ( loadFactor ) ;out.writeBoolean ( purgeValues ) ;^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P5_Replace_Variable]^out.writeFloat ( parent ) ;^999^^^^^995^1007^out.writeFloat ( loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^out.writeInt ( loadFactor ) ;^999^^^^^995^1007^out.writeFloat ( loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^out .writeInt ( hash )  ;^999^^^^^995^1007^out.writeFloat ( loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^999^^^^^995^1007^out.writeFloat ( loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( data.length ) ;out.writeFloat ( loadFactor ) ;^999^^^^^995^1007^out.writeFloat ( loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( null ) ;out.writeFloat ( loadFactor ) ;^999^^^^^995^1007^out.writeFloat ( loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeBoolean ( purgeValues ) ;out.writeFloat ( loadFactor ) ;^999^^^^^995^1007^out.writeFloat ( loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^super ( capacity, loadFactor ) ;out.writeFloat ( loadFactor ) ;^999^^^^^995^1007^out.writeFloat ( loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^out.writeFloat ( data.length ) ;^1000^^^^^995^1007^out.writeInt ( data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^1000^^^^^995^1007^out.writeInt ( data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.next (  )  ) ;out.writeInt ( data.length ) ;^1000^^^^^995^1007^out.writeInt ( data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( keyType.value ) ;out.writeInt ( data.length ) ;^1000^^^^^995^1007^out.writeInt ( data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.getValue (  )  ) ;out.writeInt ( data.length ) ;^1000^^^^^995^1007^out.writeInt ( data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( valueType.value ) ;out.writeInt ( data.length ) ;^1000^^^^^995^1007^out.writeInt ( data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeFloat ( loadFactor ) ;out.writeInt ( data.length ) ;^1000^^^^^995^1007^out.writeInt ( data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^for  ( final MapIterator<K, V> it = purge (  ) ; it.hasNext (  ) ; )  {^1001^^^^^995^1007^for  ( final MapIterator<K, V> it = mapIterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P5_Replace_Variable]^out.writeObject ( 2.next (  )  ) ;^1002^^^^^995^1007^out.writeObject ( it.next (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P8_Replace_Mix]^out .writeBoolean ( r )  ;^1002^^^^^995^1007^out.writeObject ( it.next (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^1002^1003^^^^995^1007^out.writeObject ( it.next (  )  ) ; out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( data.length ) ;out.writeObject ( it.next (  )  ) ;^1002^^^^^995^1007^out.writeObject ( it.next (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( null ) ;out.writeObject ( it.next (  )  ) ;^1002^^^^^995^1007^out.writeObject ( it.next (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeBoolean ( purgeValues ) ;out.writeObject ( it.next (  )  ) ;^1002^^^^^995^1007^out.writeObject ( it.next (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.getValue (  )  ) ;out.writeObject ( it.next (  )  ) ;^1002^^^^^995^1007^out.writeObject ( it.next (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^out.writeObject ( it .getValue (  )   ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P8_Replace_Mix]^out .writeBoolean ( r )  ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^return entry.getValue (  ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.next (  )  ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^nextValue = e.getValue (  ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^return current.getValue (  ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( data.length ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( keyType.value ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( null ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeBoolean ( purgeValues ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^return nextEntry (  ) .getValue (  ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeInt ( valueType.value ) ;out.writeObject ( it.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^1001^1002^1003^1004^^995^1007^for  ( final MapIterator<K, V> it = mapIterator (  ) ; it.hasNext (  ) ; )  { out.writeObject ( it.next (  )  ) ; out.writeObject ( it.getValue (  )  ) ; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^for  ( final MapIterator<K, V> it = mapIterator (  ) ; it .currentEntry (  )  ; )  {^1001^^^^^995^1007^for  ( final MapIterator<K, V> it = mapIterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P8_Replace_Mix]^out .writeBoolean ( purgeValues )  ;^1002^^^^^995^1007^out.writeObject ( it.next (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^1002^^^^^995^1007^out.writeObject ( it.next (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P14_Delete_Statement]^^1005^^^^^995^1007^out.writeObject ( null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.next (  )  ) ;out.writeObject ( null ) ;^1005^^^^^995^1007^out.writeObject ( null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeBoolean ( purgeValues ) ;out.writeObject ( null ) ;^1005^^^^^995^1007^out.writeObject ( null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeObject ( it.getValue (  )  ) ;out.writeObject ( null ) ;^1005^^^^^995^1007^out.writeObject ( null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P11_Insert_Donor_Statement]^out.writeFloat ( loadFactor ) ;out.writeObject ( null ) ;^1005^^^^^995^1007^out.writeObject ( null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[P7_Replace_Invocation]^this.keyType = ReferenceStrength.ReferenceStrength ( in.readInt (  )  ) ;^1031^^^^^1030^1048^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^this.keyType = ReferenceStrength .ReferenceStrength ( expectedModCount )  ;^1031^^^^^1030^1048^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^this.keyType = ReferenceStrength.resolve ( in .readFloat (  )   ) ;^1031^^^^^1030^1048^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P8_Replace_Mix]^this.keyType =  ReferenceStrength.resolve ( null.readInt (  )  ) ;^1031^^^^^1030^1048^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ;this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^1031^^^^^1030^1048^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^this.keyType = ReferenceStrength .ReferenceStrength ( hashCode )  ;^1031^^^^^1030^1048^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1031^^^^^1030^1048^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1031^1032^^^^1030^1048^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ; this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P12_Insert_Condition]^if  ( type == ReferenceStrength.SOFT )  { this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ; }^1031^^^^^1030^1048^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^this.valueType = ReferenceStrength.ReferenceStrength ( in.readInt (  )  ) ;^1032^^^^^1030^1048^this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^this.valueType = ReferenceStrength.resolve ( in .readFloat (  )   ) ;^1032^^^^^1030^1048^this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P8_Replace_Mix]^this.valueType =  ReferenceStrength.resolve ( null.readInt (  )  ) ;^1032^^^^^1030^1048^this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^this.keyType = ReferenceStrength.resolve ( in.readInt (  )  ) ;this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^1032^^^^^1030^1048^this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^this.valueType = ReferenceStrength .ReferenceStrength ( value )  ;^1032^^^^^1030^1048^this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1032^1033^^^^1030^1048^this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ; this.purgeValues = in.readBoolean (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1032^^^^^1030^1048^this.valueType = ReferenceStrength.resolve ( in.readInt (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P8_Replace_Mix]^this.purgeValues =  null.readBoolean (  ) ;^1033^^^^^1030^1048^this.purgeValues = in.readBoolean (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^this.loadFactor = in.readFloat (  ) ;this.purgeValues = in.readBoolean (  ) ;^1033^^^^^1030^1048^this.purgeValues = in.readBoolean (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^this.purgeValues = purgeValues;this.purgeValues = in.readBoolean (  ) ;^1033^^^^^1030^1048^this.purgeValues = in.readBoolean (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P8_Replace_Mix]^this.purgeValues = in .readFloat (  )  ;^1033^^^^^1030^1048^this.purgeValues = in.readBoolean (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1033^^^^^1030^1048^this.purgeValues = in.readBoolean (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P8_Replace_Mix]^this.loadFactor =  null.readFloat (  ) ;^1034^^^^^1030^1048^this.loadFactor = in.readFloat (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^this.purgeValues = in.readBoolean (  ) ;this.loadFactor = in.readFloat (  ) ;^1034^^^^^1030^1048^this.loadFactor = in.readFloat (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1034^^^^^1030^1048^this.loadFactor = in.readFloat (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P1_Replace_Type]^final  short  capacity = in.readInt (  ) ;^1035^^^^^1030^1048^final int capacity = in.readInt (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^final int hash = ref.hashCode (  ) ;final int capacity = in.readInt (  ) ;^1035^^^^^1030^1048^final int capacity = in.readInt (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^final V value =  ( V )  in.readObject (  ) ;final int capacity = in.readInt (  ) ;^1035^^^^^1030^1048^final int capacity = in.readInt (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^final K key =  ( K )  in.readObject (  ) ;final int capacity = in.readInt (  ) ;^1035^^^^^1030^1048^final int capacity = in.readInt (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^final int capacity = in .readFloat (  )  ;^1035^^^^^1030^1048^final int capacity = in.readInt (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1035^1036^^^^1030^1048^final int capacity = in.readInt (  ) ; init (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^size (  ) ;^1036^^^^^1030^1048^init (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1036^^^^^1030^1048^init (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^super (  ) ;init (  ) ;^1036^^^^^1030^1048^init (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^purge (  ) ;init (  ) ;^1036^^^^^1030^1048^init (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P8_Replace_Mix]^data =  new HashEntry[i];^1037^^^^^1030^1048^data = new HashEntry[capacity];^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P3_Replace_Literal]^while  ( false )  {^1038^^^^^1030^1048^while  ( true )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P2_Replace_Operator]^if  ( key != null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P5_Replace_Variable]^if  ( nextKey == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P8_Replace_Mix]^if  ( key == true )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P9_Replace_Statement]^if  ( values == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P9_Replace_Statement]^if  ( e == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P9_Replace_Statement]^if  ( current == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P9_Replace_Statement]^if  ( entrySet == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P9_Replace_Statement]^if  ( previous == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P9_Replace_Statement]^if  ( keySet == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P9_Replace_Statement]^if  ( value == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P9_Replace_Statement]^if  ( entry == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P9_Replace_Statement]^if  ( obj == this )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P15_Unwrap_Block]^break;^1040^1041^1042^^^1030^1048^if  ( key == null )  { break; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P16_Remove_Block]^^1040^1041^1042^^^1030^1048^if  ( key == null )  { break; }^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P13_Insert_Block]^if  ( value == null )  {     return false; }^1040^^^^^1030^1048^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P13_Insert_Block]^if  ( key == null )  {     return null; }^1040^^^^^1030^1048^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^1040^^^^^1030^1048^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P13_Insert_Block]^if  ( entry == null )  {     return null; }^1040^^^^^1030^1048^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P13_Insert_Block]^if  ( entry == null )  {     return false; }^1040^^^^^1030^1048^[Delete]^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^final K key =  ( K )  in .readBoolean (  )  ;^1039^^^^^1030^1048^final K key =  ( K )  in.readObject (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^final V value =  ( V )  in.readObject (  ) ;final K key =  ( K )  in.readObject (  ) ;^1039^^^^^1030^1048^final K key =  ( K )  in.readObject (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^final int capacity = in.readInt (  ) ;final K key =  ( K )  in.readObject (  ) ;^1039^^^^^1030^1048^final K key =  ( K )  in.readObject (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P8_Replace_Mix]^final V value =  ( V )  in .readBoolean (  )  ;^1043^^^^^1030^1048^final V value =  ( V )  in.readObject (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^final int capacity = in.readInt (  ) ;final V value =  ( V )  in.readObject (  ) ;^1043^^^^^1030^1048^final V value =  ( V )  in.readObject (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^final K key =  ( K )  in.readObject (  ) ;final V value =  ( V )  in.readObject (  ) ;^1043^^^^^1030^1048^final V value =  ( V )  in.readObject (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1039^^^^^1030^1048^final K key =  ( K )  in.readObject (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1043^^^^^1030^1048^final V value =  ( V )  in.readObject (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P5_Replace_Variable]^put ( nextKey, value ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P5_Replace_Variable]^put ( key, obj ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P5_Replace_Variable]^put (  value ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P5_Replace_Variable]^put ( key ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P5_Replace_Variable]^put ( value, key ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P7_Replace_Invocation]^isEqualValue ( key, value ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^return super.put ( key, value ) ;put ( key, value ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P11_Insert_Donor_Statement]^out.writeInt ( keyType.value ) ;put ( key, value ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P5_Replace_Variable]^put ( key, old ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P5_Replace_Variable]^threshold = calculateThreshold ( data.length, parent ) ;^1046^^^^^1030^1048^threshold = calculateThreshold ( data.length, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P8_Replace_Mix]^threshold  =  threshold ;^1046^^^^^1030^1048^threshold = calculateThreshold ( data.length, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P14_Delete_Statement]^^1046^^^^^1030^1048^threshold = calculateThreshold ( data.length, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[P2_Replace_Operator]^return this.keyType <= type;^1056^^^^^1055^1057^return this.keyType == type;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return this.keyType == keyType;^1056^^^^^1055^1057^return this.keyType == type;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P5_Replace_Variable]^return type == this.keyType;^1056^^^^^1055^1057^return this.keyType == type;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^return this.keyType  || keyType;^1056^^^^^1055^1057^return this.keyType == type;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P1_Replace_Type]^public final  short  value;^91^^^^^86^96^public final int value;^[CLASS] ReferenceStrength  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^public final  long  value;^91^^^^^86^96^public final int value;^[CLASS] ReferenceStrength  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P3_Replace_Literal]^HARD ( 1 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] ReferenceStrength  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^HARD ( 0 * 4 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] ReferenceStrength  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P3_Replace_Literal]^HARD ( 0 ) , SOFT ( 5 ) , WEAK ( 2 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] ReferenceStrength  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P3_Replace_Literal]^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( hashCode ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] ReferenceStrength  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[P8_Replace_Mix]^this.value =  null;^113^^^^^112^114^this.value = value;^[CLASS] ReferenceStrength  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  int  value  boolean  
[P5_Replace_Variable]^return WEAK;^102^^^^^99^110^return HARD;^[CLASS] ReferenceStrength  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  int  value  boolean  
[P5_Replace_Variable]^return WEAK;^104^^^^^99^110^return SOFT;^[CLASS] ReferenceStrength  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  int  value  boolean  
[P5_Replace_Variable]^return SOFT;^106^^^^^99^110^return WEAK;^[CLASS] ReferenceStrength  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  int  value  boolean  
[P14_Delete_Statement]^^512^^^^^511^513^super ( parent ) ;^[CLASS] ReferenceEntrySet  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, V> parent [VARIABLES] AbstractHashedMap  parent  boolean  
[P3_Replace_Literal]^return toArray ( new Object[size() - 3 ] ) ;^517^^^^^516^518^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P3_Replace_Literal]^return toArray ( new Object[size() - 4 ] ) ;^517^^^^^516^518^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P14_Delete_Statement]^^517^^^^^516^518^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P3_Replace_Literal]^return toArray ( new Object[size() - 8 ] ) ;^517^^^^^516^518^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P1_Replace_Type]^final  Set <Map.Entry<K, V>> list = new  Set <Map.Entry<K, V>> ( size (  )  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[P3_Replace_Literal]^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size() - 7  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[P3_Replace_Literal]^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size() + 6  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[P3_Replace_Literal]^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size() - 6  ) ;^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[P14_Delete_Statement]^^523^^^^^521^528^final ArrayList<Map.Entry<K, V>> list = new ArrayList<Map.Entry<K, V>> ( size (  )  ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[P8_Replace_Mix]^list .toArray ( arr )  ;^525^^^^^521^528^list.add ( new DefaultMapEntry<K, V> ( entry )  ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[P14_Delete_Statement]^^525^^^^^521^528^list.add ( new DefaultMapEntry<K, V> ( entry )  ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[P5_Replace_Variable]^return arr.toArray ( list ) ;^527^^^^^521^528^return list.toArray ( arr ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[P14_Delete_Statement]^^527^^^^^521^528^return list.toArray ( arr ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[P14_Delete_Statement]^^538^^^^^537^539^super ( parent ) ;^[CLASS] ReferenceKeySet  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<K, ?> parent [VARIABLES] AbstractHashedMap  parent  boolean  
[P3_Replace_Literal]^return toArray ( new Object[size() - 8 ] ) ;^543^^^^^542^544^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P3_Replace_Literal]^return toArray ( new Object[size() + 0 ] ) ;^543^^^^^542^544^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P14_Delete_Statement]^^543^^^^^542^544^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P3_Replace_Literal]^return toArray ( new Object[size() - 6 ] ) ;^543^^^^^542^544^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P1_Replace_Type]^final List<K> list = new  Set <K> ( size (  )  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  T[]  arr  List  list  K  key  
[P3_Replace_Literal]^final List<K> list = new ArrayList<K> ( size() + 9  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  T[]  arr  List  list  K  key  
[P3_Replace_Literal]^final List<K> list = new ArrayList<K> ( size() - 8  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  T[]  arr  List  list  K  key  
[P3_Replace_Literal]^final List<K> list = new ArrayList<K> ( size() - 1  ) ;^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  T[]  arr  List  list  K  key  
[P14_Delete_Statement]^^549^^^^^547^554^final List<K> list = new ArrayList<K> ( size (  )  ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  T[]  arr  List  list  K  key  
[P14_Delete_Statement]^^551^^^^^547^554^list.add ( key ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  T[]  arr  List  list  K  key  
[P5_Replace_Variable]^return arr.toArray ( list ) ;^553^^^^^547^554^return list.toArray ( arr ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  T[]  arr  List  list  K  key  
[P14_Delete_Statement]^^553^^^^^547^554^return list.toArray ( arr ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  T[]  arr  List  list  K  key  
[P14_Delete_Statement]^^564^^^^^563^565^super ( parent ) ;^[CLASS] ReferenceValues  [METHOD] <init> [RETURN_TYPE] AbstractHashedMap)   AbstractHashedMap<?, V> parent [VARIABLES] AbstractHashedMap  parent  boolean  
[P3_Replace_Literal]^return toArray ( new Object[size() + 5 ] ) ;^569^^^^^568^570^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P3_Replace_Literal]^return toArray ( new Object[size() - 7 ] ) ;^569^^^^^568^570^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P14_Delete_Statement]^^569^^^^^568^570^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P3_Replace_Literal]^return toArray ( new Object[size() + 9 ] ) ;^569^^^^^568^570^return toArray ( new Object[size (  ) ] ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] boolean  
[P1_Replace_Type]^final List<V> list = new  Set <V> ( size (  )  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P3_Replace_Literal]^final List<V> list = new ArrayList<V> ( size() + 6  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P3_Replace_Literal]^final List<V> list = new ArrayList<V> ( size() - 9  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P3_Replace_Literal]^final List<V> list = new ArrayList<V> ( size() + 8  ) ;^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P14_Delete_Statement]^^575^^^^^573^580^final List<V> list = new ArrayList<V> ( size (  )  ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P8_Replace_Mix]^list .toArray ( arr )  ;^577^^^^^573^580^list.add ( value ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P14_Delete_Statement]^^577^^^^^573^580^list.add ( value ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P5_Replace_Variable]^return 3.toArray ( arr ) ;^579^^^^^573^580^return list.toArray ( arr ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P5_Replace_Variable]^return arr.toArray ( list ) ;^579^^^^^573^580^return list.toArray ( arr ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P8_Replace_Mix]^return 2.toArray ( arr ) ;^579^^^^^573^580^return list.toArray ( arr ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P14_Delete_Statement]^^579^^^^^573^580^return list.toArray ( arr ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P8_Replace_Mix]^private  AbstractReferenceMap<K, V> parent;^594^^^^^589^599^private final AbstractReferenceMap<K, V> parent;^[CLASS] ReferenceEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[P5_Replace_Variable]^super (  hashCode, null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^super ( next,  null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^super ( hashCode, next, null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^607^608^^^^605^611^super ( next, hashCode, null, null ) ; this.parent = parent;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P8_Replace_Mix]^this.parent =  null;^608^^^^^605^611^this.parent = parent;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType,  hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType, key ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.key = toReference (  key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.key = toReference ( hashCode.keyType, key, parent ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.key = toReference ( key.keyType, parent, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.key = toReference ( parent.keyType, hashCode, key ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.key = toReference ( hashCode, key, parent.keyType ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P8_Replace_Mix]^this.key =  toReference ( null.keyType, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^value = toReference ( parent.valueType, obj, hashCode ) ;this.key = toReference ( parent.keyType, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^this.value = toReference ( parent.valueType, value, hashCode ) ;this.key = toReference ( parent.keyType, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.key = toReference ( key, parent.keyType, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P8_Replace_Mix]^this.key = toReference ( null, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^609^610^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ; this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.value = toReference ( parent.valueType,  hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.value = toReference ( parent.valueType, value ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.value = toReference (  value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.value = toReference ( hashCode.valueType, value, parent ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.value = toReference ( value, parent.valueType, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.value = toReference ( hashCode, value, parent.valueType ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P8_Replace_Mix]^this.value =  toReference ( null.valueType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^value = toReference ( parent.valueType, obj, hashCode ) ;this.value = toReference ( parent.valueType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^this.key = toReference ( parent.keyType, key, hashCode ) ;this.value = toReference ( parent.valueType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.value = toReference ( parent.valueType.valueType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P5_Replace_Variable]^this.value = toReference ( parent.valueType, hashCode, value ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[P2_Replace_Operator]^return  ( K )   ( parent.keyType >= ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^return  ( K )   ( parent.keyType.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^return  ( K )   ( key.keyType == ReferenceStrength.HARD ? parent :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P6_Replace_Expression]^return  ( K )   (  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P7_Replace_Invocation]^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .clear (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P14_Delete_Statement]^^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P2_Replace_Operator]^return  ( V )   ( parent.valueType != ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P6_Replace_Expression]^return  ( V )   (  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P7_Replace_Invocation]^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .clear (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P14_Delete_Statement]^^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P7_Replace_Invocation]^final V old = getKey (  ) ;^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P11_Insert_Donor_Statement]^final Object entryValue = entry.getValue (  ) ;final V old = getValue (  ) ;^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P14_Delete_Statement]^^646^^^^^645^652^final V old = getValue (  ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P2_Replace_Operator]^if  ( parent.valueType > ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^if  ( parent.valueType.valueType != ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P15_Unwrap_Block]^((java.lang.ref.Reference<V>) (value)).clear();^647^648^649^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  { (  ( Reference<V> )  value ) .clear (  ) ; }^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P16_Remove_Block]^^647^648^649^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  { (  ( Reference<V> )  value ) .clear (  ) ; }^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^647^^^^^645^652^[Delete]^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^647^^^^^645^652^[Delete]^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^647^^^^^645^652^[Delete]^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^647^^^^^645^652^[Delete]^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( value )  ) .clear (  ) ; }else     if  ( parent.purgeValues )  {         value = null;     }^647^^^^^645^652^[Delete]^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P7_Replace_Invocation]^(  ( Reference<V> )  value ) .get (  ) ;^648^^^^^645^652^(  ( Reference<V> )  value ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P14_Delete_Statement]^^648^^^^^645^652^(  ( Reference<V> )  value ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P11_Insert_Donor_Statement]^(  ( Reference<?> )  value ) .clear (  ) ;(  ( Reference<V> )  value ) .clear (  ) ;^648^^^^^645^652^(  ( Reference<V> )  value ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P11_Insert_Donor_Statement]^(  ( Reference<?> )  key ) .clear (  ) ;(  ( Reference<V> )  value ) .clear (  ) ;^648^^^^^645^652^(  ( Reference<V> )  value ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^value = toReference ( parent.valueType,  hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^value = toReference (  obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^value = toReference ( parent.valueType, obj ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^value = toReference ( obj.valueType, parent, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^value = toReference ( parent, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^value = toReference ( parent.valueType.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^value = toReference ( hashCode, obj, parent.valueType ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P7_Replace_Invocation]^value = purge ( parent.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P8_Replace_Mix]^value =  toReference ( parent.valueType, old, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P11_Insert_Donor_Statement]^this.value = toReference ( parent.valueType, value, hashCode ) ;value = toReference ( parent.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P11_Insert_Donor_Statement]^this.key = toReference ( parent.keyType, key, hashCode ) ;value = toReference ( parent.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^value = toReference ( obj, parent.valueType, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^value = toReference ( parent.valueType, hashCode, obj ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P14_Delete_Statement]^^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P5_Replace_Variable]^return obj;^651^^^^^645^652^return old;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[P2_Replace_Operator]^if  ( obj != this )  {^665^^^^^664^682^if  ( obj == this )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P8_Replace_Mix]^if  ( entryValue == this )  {^665^^^^^664^682^if  ( obj == this )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^return true;^665^666^667^^^664^682^if  ( obj == this )  { return true; }^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P16_Remove_Block]^^665^666^667^^^664^682^if  ( obj == this )  { return true; }^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P3_Replace_Literal]^return false;^666^^^^^664^682^return true;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( obj instanceof Map.Entry != false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( obj  ||  Map.Entry == false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P3_Replace_Literal]^if  ( obj instanceof Map.Entry == true )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^if  ( entryValue instanceof Map.Entry == false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P6_Replace_Expression]^if  ( obj instanceof Entry )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^return false;^668^669^670^^^664^682^if  ( obj instanceof Map.Entry == false )  { return false; }^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P16_Remove_Block]^^668^669^670^^^664^682^if  ( obj instanceof Map.Entry == false )  { return false; }^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( entryKey == null )  ||  ( entryValue == null )  )  {     return false; }^668^^^^^664^682^[Delete]^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P3_Replace_Literal]^return true;^669^^^^^664^682^return false;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^final Object entryValue = entry.getValue (  ) ;final Object entryKey = entry.getKey (  ) ;^673^^^^^664^682^final Object entryKey = entry.getKey (  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^final Object nullKey = entry.getKey (  ) ;^673^^^^^664^682^final Object entryKey = entry.getKey (  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^673^674^^^^664^682^final Object entryKey = entry.getKey (  ) ; final Object entryValue = entry.getValue (  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^final Object entryKey = entry.getKey (  ) ;final Object entryValue = entry.getValue (  ) ;^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^final V old = getValue (  ) ;final Object entryValue = entry.getValue (  ) ;^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^674^^^^^664^682^final Object entryValue = entry.getValue (  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( entryKey == null && entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( entryKey != null || entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( entryKey == null || entryValue != null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^if  ( obj == null || entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^if  ( entryKey == null || obj == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^if  ( entryValue == null || entryKey == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P6_Replace_Expression]^if  ( entryKey == null ) {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P6_Replace_Expression]^if  (  entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P8_Replace_Mix]^if  ( entryKey == this || entryValue == this )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^return false;^675^676^677^^^664^682^if  ( entryKey == null || entryValue == null )  { return false; }^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P16_Remove_Block]^^675^676^677^^^664^682^if  ( entryKey == null || entryValue == null )  { return false; }^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( obj instanceof Entry )  == false )  {     return false; }^675^^^^^664^682^[Delete]^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P3_Replace_Literal]^return true;^676^^^^^664^682^return false;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P2_Replace_Operator]^return parent.isEqualKey ( entryKey, key )  || parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( obj, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return parent.isEqualKey (  key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue (  getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return parent.isEqualKey ( entryKey )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return parent.isEqualKey ( entryValue, key )  && parent.isEqualValue ( entryKey, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return key.isEqualKey ( entryKey, parent )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return parent.isEqualKey ( entryKey, entryValue )  && parent.isEqualValue ( key, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^return parent.isEqualKey ( entryKey, key )  && parent .isEqualKey ( entryKey , entryKey )  ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getKey (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P8_Replace_Mix]^return parent.isEqualKey ( obj, key )  && parent .isEqualKey ( obj , obj )  ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return parent.isEqualKey ( obj, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return parent.isEqualKey ( entryKey, this )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return parent.isEqualKey ( key, entryKey )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^parent.isEqualValue ( obj, getValue (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^parent.isEqualValue (  getValue (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^parent.isEqualValue ( entryValue, getKey (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;parent.isEqualValue ( entryValue, getValue (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return 4.hashEntry ( getKey (  ) , getValue (  )  ) ;^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P7_Replace_Invocation]^return parent.hashEntry ( getValue (  ) , getValue (  )  ) ;^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P7_Replace_Invocation]^return parent.hashEntry ( getKey (  ) , getKey (  )  ) ;^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P14_Delete_Statement]^^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P2_Replace_Operator]^if  ( type >= ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( parent.valueType != ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^return referent;^709^710^711^^^708^719^if  ( type == ReferenceStrength.HARD )  { return referent; }^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P16_Remove_Block]^^709^710^711^^^708^719^if  ( type == ReferenceStrength.HARD )  { return referent; }^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^709^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^709^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^709^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^709^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( value )  ) .clear (  ) ; }else     if  ( parent.purgeValues )  {         value = null;     }^709^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( type <= ReferenceStrength.SOFT )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( parent.valueType != ReferenceStrength.HARD )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash, referent, parent.queue);^712^713^714^^^708^719^if  ( type == ReferenceStrength.SOFT )  { return new SoftRef<T> ( hash, referent, parent.queue ) ; }^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P16_Remove_Block]^^712^713^714^^^708^719^if  ( type == ReferenceStrength.SOFT )  { return new SoftRef<T> ( hash, referent, parent.queue ) ; }^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^712^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^712^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^712^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^712^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P4_Replace_Constructor]^return return  new WeakRef<T> ( hash, referent, parent.queue )  ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P4_Replace_Constructor]^return new SoftRef<T> (  referent, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P4_Replace_Constructor]^return new SoftRef<T> ( hash,  parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, referent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, referent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new SoftRef<T> ( parent.queue, referent, hash ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, parent, referent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new SoftRef<T> ( parent, referent, hash.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P8_Replace_Mix]^return  new WeakRef<T> ( hash, referent, parent.queue )  ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^713^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^713^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^713^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^713^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new SoftRef<T> ( referent, hash, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, referent, parent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, referent, parent.queue.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new SoftRef<T> ( hash, parent.queue, referent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( type >= ReferenceStrength.WEAK )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^if  ( type == ReferenceStrength.type )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( parent.valueType != ReferenceStrength.HARD )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash, referent, parent.queue);^715^716^717^^^708^719^if  ( type == ReferenceStrength.WEAK )  { return new WeakRef<T> ( hash, referent, parent.queue ) ; }^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P16_Remove_Block]^^715^716^717^^^708^719^if  ( type == ReferenceStrength.WEAK )  { return new WeakRef<T> ( hash, referent, parent.queue ) ; }^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^715^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.keyType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( key )  ) .clear (  ) ; }^715^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^715^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^715^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P4_Replace_Constructor]^return return  new SoftRef<T> ( hash, referent, parent.queue )  ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P4_Replace_Constructor]^return new WeakRef<T> (  referent, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P4_Replace_Constructor]^return new WeakRef<T> ( hash,  parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, referent, 3 ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, referent ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, referent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( parent.queue, referent, hash ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, parent, referent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, parent.queue, referent ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( parent, referent, hash.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P8_Replace_Mix]^return  new SoftRef<T> ( hash, referent, parent.queue )  ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^716^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^716^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^716^^^^^708^719^[Delete]^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( referent, hash, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, referent, parent.queue.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return new WeakRef<T> ( hash, referent, parent ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P8_Replace_Mix]^return new WeakRef<T> ( hash, referent, 4 ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[P2_Replace_Operator]^boolean r = parent.keyType != ReferenceStrength.HARD || key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P2_Replace_Operator]^boolean r = parent.keyType > ReferenceStrength.HARD && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P2_Replace_Operator]^boolean r = parent.keyType != ReferenceStrength.HARD && key >= ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^boolean r = parent.keyType != ReferenceStrength.HARD && ref == key;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^boolean r = key.keyType != ReferenceStrength.HARD && parent == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P2_Replace_Operator]^r = r && parent.valueType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P2_Replace_Operator]^r = r || parent.valueType != ReferenceStrength.HARD || value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P2_Replace_Operator]^r = r || parent.valueType <= ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P2_Replace_Operator]^r = r || parent.valueType != ReferenceStrength.HARD && value != ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^r = r || parent.valueType != ReferenceStrength.2 && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^r = parent.valueType || r != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^r = r || ref != ReferenceStrength.HARD && value == parent.valueType;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^r = r || value.valueType != ReferenceStrength.HARD && parent == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P8_Replace_Mix]^r =  null || panullent.valueType !^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P12_Insert_Condition]^if  ( type == ReferenceStrength.HARD )  { r = r || parent.valueType != ReferenceStrength.HARD && value == ref; }^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P12_Insert_Condition]^if  ( parent.keyType != ReferenceStrength.HARD )  { r = r || parent.valueType != ReferenceStrength.HARD && value == ref; }^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P12_Insert_Condition]^if  ( parent.valueType != ReferenceStrength.HARD )  { r = r || parent.valueType != ReferenceStrength.HARD && value == ref; }^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P6_Replace_Expression]^if  ( parent.valueType != HARD )  {^729^^^^^726^740^if  ( r )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P15_Unwrap_Block]^if ((parent.keyType) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD)) {    ((java.lang.ref.Reference<?>) (key)).clear();}; if ((parent.valueType) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD)) {    ((java.lang.ref.Reference<?>) (value)).clear();}else    if (parent.purgeValues) {        value = null;    };^729^730^731^732^^726^740^if  ( r )  { if  ( parent.keyType != ReferenceStrength.HARD )  { (  ( Reference<?> )  key ) .clear (  ) ; }^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P16_Remove_Block]^^729^730^731^732^^726^740^if  ( r )  { if  ( parent.keyType != ReferenceStrength.HARD )  { (  ( Reference<?> )  key ) .clear (  ) ; }^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( value )  ) .clear (  ) ; }else     if  ( parent.purgeValues )  {         value = null;     }^729^^^^^726^740^[Delete]^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P2_Replace_Operator]^if  ( parent.keyType <= ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^if  ( this.keyType != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P8_Replace_Mix]^if  ( this != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P9_Replace_Statement]^if  ( parent.valueType != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P15_Unwrap_Block]^((java.lang.ref.Reference<?>) (key)).clear();^730^731^732^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  { (  ( Reference<?> )  key ) .clear (  ) ; }^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P16_Remove_Block]^^730^731^732^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  { (  ( Reference<?> )  key ) .clear (  ) ; }^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P13_Insert_Block]^if  ( type ==  ( WEAK )  )  {     return new WeakRef<T> ( hash, referent, parent.queue ) ; }^730^^^^^726^740^[Delete]^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P13_Insert_Block]^if  ( type ==  ( HARD )  )  {     return referent; }^730^^^^^726^740^[Delete]^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<V> )   ( value )  ) .clear (  ) ; }^730^^^^^726^740^[Delete]^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P13_Insert_Block]^if  ( type ==  ( SOFT )  )  {     return new SoftRef<T> ( hash, referent, parent.queue ) ; }^730^^^^^726^740^[Delete]^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P13_Insert_Block]^if  (  ( parent.valueType )  !=  ( HARD )  )  {      (  ( Reference<?> )   ( value )  ) .clear (  ) ; }else     if  ( parent.purgeValues )  {         value = null;     }^730^^^^^726^740^[Delete]^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P7_Replace_Invocation]^(  ( Reference<?> )  key ) .get (  ) ;^731^^^^^726^740^(  ( Reference<?> )  key ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P14_Delete_Statement]^^731^^^^^726^740^(  ( Reference<?> )  key ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P11_Insert_Donor_Statement]^(  ( Reference<?> )  value ) .clear (  ) ;(  ( Reference<?> )  key ) .clear (  ) ;^731^^^^^726^740^(  ( Reference<?> )  key ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P11_Insert_Donor_Statement]^(  ( Reference<V> )  value ) .clear (  ) ;(  ( Reference<?> )  key ) .clear (  ) ;^731^^^^^726^740^(  ( Reference<?> )  key ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P2_Replace_Operator]^if  ( parent.valueType >= ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^if  ( 3.valueType != ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^if  ( parent != ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P8_Replace_Mix]^if  ( parent.valueType = ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.WEAK )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P9_Replace_Statement]^if  ( type == ReferenceStrength.SOFT )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P9_Replace_Statement]^if  ( parent.keyType != ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P15_Unwrap_Block]^((java.lang.ref.Reference<?>) (value)).clear();^733^734^735^736^737^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  { (  ( Reference<?> )  value ) .clear (  ) ; } else if  ( parent.purgeValues )  { value = null; }^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P16_Remove_Block]^^733^734^735^736^737^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  { (  ( Reference<?> )  value ) .clear (  ) ; } else if  ( parent.purgeValues )  { value = null; }^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^} else if  ( r )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^} else if  ( parent )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^} else if  ( parent.purgeValues.purgeValues )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P6_Replace_Expression]^} else {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P15_Unwrap_Block]^value = null;^735^736^737^^^726^740^} else if  ( parent.purgeValues )  { value = null; }^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P16_Remove_Block]^^735^736^737^^^726^740^} else if  ( parent.purgeValues )  { value = null; }^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P8_Replace_Mix]^value = this;^736^^^^^726^740^value = null;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P7_Replace_Invocation]^(  ( Reference<?> )  value ) .get (  ) ;^734^^^^^726^740^(  ( Reference<?> )  value ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P14_Delete_Statement]^^734^^^^^726^740^(  ( Reference<?> )  value ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P11_Insert_Donor_Statement]^(  ( Reference<V> )  value ) .clear (  ) ;(  ( Reference<?> )  value ) .clear (  ) ;^734^^^^^726^740^(  ( Reference<?> )  value ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P11_Insert_Donor_Statement]^(  ( Reference<?> )  key ) .clear (  ) ;(  ( Reference<?> )  value ) .clear (  ) ;^734^^^^^726^740^(  ( Reference<?> )  value ) .clear (  ) ;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P8_Replace_Mix]^}  if  ( r )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P8_Replace_Mix]^value = false;^736^^^^^726^740^value = null;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^if  ( null != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^if  ( parent.keyType != ReferenceStrength.this )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P5_Replace_Variable]^if  ( parent.keyType.keyType != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P8_Replace_Mix]^if  ( parent.keyType = ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P2_Replace_Operator]^if  ( parent.valueType == ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P8_Replace_Mix]^if  ( parent.valueType != ReferenceStrength.3 )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P8_Replace_Mix]^value = true;^736^^^^^726^740^value = null;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[P1_Replace_Type]^short  index;^761^^^^^756^766^int index;^[CLASS] ReferenceBaseIterator  [METHOD] next [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P1_Replace_Type]^long  expectedModCount;^771^^^^^766^776^int expectedModCount;^[CLASS] ReferenceBaseIterator  [METHOD] next [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P8_Replace_Mix]^short  expectedModCount;^771^^^^^766^776^int expectedModCount;^[CLASS] ReferenceBaseIterator  [METHOD] next [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] AbstractReferenceMap  parent  boolean  
[P14_Delete_Statement]^^774^^^^^773^780^super (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^this.parent =  null;^775^^^^^773^780^this.parent = parent;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^index = parent.size (  )  == 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P3_Replace_Literal]^index = parent.size (  )  != index ? parent.data.length : index;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P3_Replace_Literal]^index = parent.size (  )  != 1 ? parent.data.length : 1;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P3_Replace_Literal]^index = parent.size() - 5  != 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P6_Replace_Expression]^index  =  0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P6_Replace_Expression]^index  =  parent.data.length ;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^index = parent.remove (  )  != 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^index = parent.size (  )  != 0  ? parent.data.length : 0 ;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^index = null.size (  )  != 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^index = this.size (  )  != 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^expectedModCount =  null.modCount;^779^^^^^773^780^expectedModCount = parent.modCount;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^hasNext (  ) ;^783^^^^^782^805^checkMod (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^783^^^^^782^805^checkMod (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^while  ( hasNext (  )  )  {^784^^^^^782^805^while  ( nextNull (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^while  ( getKeyNull (  )  )  {^784^^^^^782^805^while  ( nextNull (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^while  ( e == null || i > 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^while  ( e != null && i > 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^while  ( e == null && i >= 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P3_Replace_Literal]^while  ( e == null && i > -5 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^e =   ( ReferenceEntry<K, V> )  parent.data[index];^789^^^^^782^805^e =  ( ReferenceEntry<K, V> )  parent.data[i];^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( e != null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^if  ( e == true )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( previous == null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^currentKey = null; currentValue = null; return false;^793^794^795^796^797^782^805^if  ( e == null )  { currentKey = null; currentValue = null; return false; }^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P16_Remove_Block]^^793^794^795^796^797^782^805^if  ( e == null )  { currentKey = null; currentValue = null; return false; }^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^currentKey = false;^794^^^^^782^805^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentKey = nextKey;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^previous = null;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextKey = null;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = null;currentKey = null;^794^^^^^782^805^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^currentValue = false;^795^^^^^782^805^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentKey = null;currentValue = null;^795^^^^^782^805^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^previous = null;currentValue = null;^795^^^^^782^805^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextValue = null;currentValue = null;^795^^^^^782^805^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentValue = null;^795^^^^^782^805^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P3_Replace_Literal]^return true;^796^^^^^782^805^return false;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^if  ( hasNext (  )  )  {^800^^^^^782^805^if  ( nextNull (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^if  ( getKeyNull (  )  )  {^800^^^^^782^805^if  ( nextNull (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^entry = entry.next();^800^801^802^^^782^805^if  ( nextNull (  )  )  { entry = entry.next (  ) ; }^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P16_Remove_Block]^^800^801^802^^^782^805^if  ( nextNull (  )  )  { entry = entry.next (  ) ; }^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^entry = null.next (  ) ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^entry = entry.getKey (  ) ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^entry  =  entry ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextKey = e.getKey (  ) ;entry = entry.next (  ) ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^entry =  null;^791^^^^^782^805^entry = e;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^index = index;^792^^^^^782^805^index = i;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^index =  null;^792^^^^^782^805^index = i;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^currentValue = this;^795^^^^^782^805^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^nextKey = e .getValue (  )  ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^nextKey =  null.gnulltKnully (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^entry = entry.next (  ) ;nextKey = e.getKey (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextValue = e.getValue (  ) ;nextKey = e.getKey (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^nextValue =  null.gnulltValunull (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextKey = e.getKey (  ) ;nextValue = e.getValue (  ) ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^entry ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^ReferenceEntry<K, V> e = null;^785^^^^^782^805^ReferenceEntry<K, V> e = entry;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P1_Replace_Type]^long  i = index;^786^^^^^782^805^int i = index;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^int i = expectedModCount;^786^^^^^782^805^int i = index;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^nextValue = e .getKey (  )  ;^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^799^^^^^782^805^nextValue = e.getValue (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P3_Replace_Literal]^while  ( e == null && i >  )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^if  ( e == this )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^currentKey = true;^794^^^^^782^805^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^nextKey = null.getKey (  ) ;^798^^^^^782^805^nextKey = e.getKey (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^entry  = null ;^801^^^^^782^805^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^784^785^^^^782^805^while  ( nextNull (  )  )  { ReferenceEntry<K, V> e = entry;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P3_Replace_Literal]^return false;^804^^^^^782^805^return true;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( parent.modCount == expectedModCount )  {^808^^^^^807^811^if  ( parent.modCount != expectedModCount )  {^[CLASS] ReferenceBaseIterator  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^throw new java.util.ConcurrentModificationException();^808^809^810^^^807^811^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] ReferenceBaseIterator  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P16_Remove_Block]^^808^809^810^^^807^811^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] ReferenceBaseIterator  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^808^^^^^807^811^[Delete]^[CLASS] ReferenceBaseIterator  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( nextNull (  )  )  &&  ( ! ( hasNext (  )  )  )  )  {     throw new NoSuchElementException (  ) ; }^808^^^^^807^811^[Delete]^[CLASS] ReferenceBaseIterator  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^809^^^^^807^811^throw new ConcurrentModificationException  (" ")  ;^[CLASS] ReferenceBaseIterator  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^809^^^^^807^811^throw new ConcurrentModificationException  (" ")  ;^[CLASS] ReferenceBaseIterator  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^return nextKey == null && nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^return nextKey != null || nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return currentKey == null || nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return nextKey == null || currentValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^return nextValue == null || nextKey == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^return false ;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^hasNext (  ) ;^818^^^^^817^829^checkMod (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^818^^^^^817^829^checkMod (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( nextNull (  )  || !hasNext (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P6_Replace_Expression]^if  ( nextNull (  )  ) {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P6_Replace_Expression]^if  (  !hasNext (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^if  ( hasNext (  )  && !hasNext (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^if  ( nextNull (  )  && !checkMod (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^if  (  !checkMod (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException();^819^820^821^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P16_Remove_Block]^^819^820^821^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^819^^^^^817^829^[Delete]^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^819^^^^^817^829^[Delete]^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^return 0;^820^^^^^817^829^throw new NoSuchElementException  (" ")  ;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^820^^^^^817^829^throw new NoSuchElementException  (" ")  ;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^820^^^^^817^829^throw new NoSuchElementException  (" ")  ;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^previous ;^822^^^^^817^829^previous = entry;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^previous = null;previous = entry;^822^^^^^817^829^previous = entry;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^entry = entry.getKey (  ) ;^823^^^^^817^829^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^entry ;^823^^^^^817^829^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextKey = e.getKey (  ) ;entry = entry.next (  ) ;^823^^^^^817^829^entry = entry.next (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^823^824^^^^817^829^entry = entry.next (  ) ; currentKey = nextKey;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^currentKey = currentKey;^824^^^^^817^829^currentKey = nextKey;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^currentKey  = null ;^824^^^^^817^829^currentKey = nextKey;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentKey = null;currentKey = nextKey;^824^^^^^817^829^currentKey = nextKey;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentKey = nextKey;^824^^^^^817^829^currentKey = nextKey;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^currentValue = currentValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^currentValue ;^825^^^^^817^829^currentValue = nextValue;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentKey = null;currentValue = nextValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentKey = nextKey;currentValue = nextValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextValue = null;currentValue = nextValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = null;currentValue = nextValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^nextKey = false;^826^^^^^817^829^nextKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentKey = null;nextKey = null;^826^^^^^817^829^nextKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^previous = null;nextKey = null;^826^^^^^817^829^nextKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextValue = null;nextKey = null;^826^^^^^817^829^nextKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^nextValue = false;^827^^^^^817^829^nextValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^previous = null;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = nextValue;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextKey = null;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = null;nextValue = null;^827^^^^^817^829^nextValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^hasNext (  ) ;^832^^^^^831^834^checkMod (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] currentEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^832^^^^^831^834^checkMod (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] currentEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^hasNext (  ) ;^837^^^^^836^846^checkMod (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^837^^^^^836^846^checkMod (  ) ;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P2_Replace_Operator]^if  ( previous != null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^if  ( previous == this )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P9_Replace_Statement]^if  ( e == null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException();^838^839^840^^^836^846^if  ( previous == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P16_Remove_Block]^^838^839^840^^^836^846^if  ( previous == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^838^^^^^836^846^[Delete]^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( nextNull (  )  )  &&  ( ! ( hasNext (  )  )  )  )  {     throw new NoSuchElementException (  ) ; }^838^^^^^836^846^[Delete]^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalStateException  (" ")  ;^839^^^^^836^846^throw new IllegalStateException  (" ")  ;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalStateException  (" ")  ;^839^^^^^836^846^throw new IllegalStateException  (" ")  ;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P13_Insert_Block]^if  (  ( previous )  == null )  {     throw new IllegalStateException (  ) ; }^839^^^^^836^846^[Delete]^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P5_Replace_Variable]^parent.remove ( nextKey ) ;^841^^^^^836^846^parent.remove ( currentKey ) ;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^parent.size ( currentKey ) ;^841^^^^^836^846^parent.remove ( currentKey ) ;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^parent .size (  )  ;^841^^^^^836^846^parent.remove ( currentKey ) ;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^841^^^^^836^846^parent.remove ( currentKey ) ;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^previous = false;^842^^^^^836^846^previous = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentKey = null;previous = null;^842^^^^^836^846^previous = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^previous = entry;previous = null;^842^^^^^836^846^previous = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextValue = null;previous = null;^842^^^^^836^846^previous = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextKey = null;previous = null;^842^^^^^836^846^previous = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = null;previous = null;^842^^^^^836^846^previous = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P12_Insert_Condition]^if  ( previous == null )  { previous = null; }^842^^^^^836^846^previous = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^currentKey = this;^843^^^^^836^846^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentKey = nextKey;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^previous = null;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextKey = null;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = null;currentKey = null;^843^^^^^836^846^currentKey = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^currentValue = true;^844^^^^^836^846^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentKey = null;currentValue = null;^844^^^^^836^846^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^previous = null;currentValue = null;^844^^^^^836^846^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^nextValue = null;currentValue = null;^844^^^^^836^846^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P11_Insert_Donor_Statement]^currentValue = nextValue;currentValue = null;^844^^^^^836^846^currentValue = null;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P8_Replace_Mix]^expectedModCount  =  expectedModCount ;^845^^^^^836^846^expectedModCount = parent.modCount;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^856^^^^^855^857^super ( parent ) ;^[CLASS] ReferenceEntrySetIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] boolean  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^860^^^^^859^861^return nextEntry (  ) ;^[CLASS] ReferenceEntrySetIterator  [METHOD] next [RETURN_TYPE] Map$Entry   [VARIABLES] boolean  
[P14_Delete_Statement]^^872^^^^^871^873^super (  ( AbstractReferenceMap<K, Object> )  parent ) ;^[CLASS] ReferenceKeySetIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, ?> parent [VARIABLES] boolean  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^876^^^^^875^877^return nextEntry (  ) .getKey (  ) ;^[CLASS] ReferenceKeySetIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] boolean  
[P14_Delete_Statement]^^887^^^^^886^888^super (  ( AbstractReferenceMap<Object, V> )  parent ) ;^[CLASS] ReferenceValuesIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<?, V> parent [VARIABLES] boolean  AbstractReferenceMap  parent  
[P14_Delete_Statement]^^891^^^^^890^892^return nextEntry (  ) .getValue (  ) ;^[CLASS] ReferenceValuesIterator  [METHOD] next [RETURN_TYPE] V   [VARIABLES] boolean  
[P14_Delete_Statement]^^901^^^^^900^902^super ( parent ) ;^[CLASS] ReferenceMapIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] boolean  AbstractReferenceMap  parent  
[P7_Replace_Invocation]^return nextEntry (  )  .getKey (  )  ;^905^^^^^904^906^return nextEntry (  ) .getKey (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] boolean  
[P7_Replace_Invocation]^return currentEntry (  ) .getKey (  ) ;^905^^^^^904^906^return nextEntry (  ) .getKey (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] boolean  
[P14_Delete_Statement]^^905^^^^^904^906^return nextEntry (  ) .getKey (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] next [RETURN_TYPE] K   [VARIABLES] boolean  
[P14_Delete_Statement]^^909^^^^^908^914^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P2_Replace_Operator]^if  ( current != null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P8_Replace_Mix]^if  ( current == false )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(AbstractHashedMap.GETKEY_INVALID);^910^911^912^^^908^914^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P16_Remove_Block]^^910^911^912^^^908^914^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^910^^^^^908^914^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^910^^^^^908^914^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID )   ;^911^^^^^908^914^throw new IllegalStateException  (" ")  ;^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^911^^^^^908^914^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^911^^^^^908^914^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^911^^^^^908^914^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P5_Replace_Variable]^return null.getKey (  ) ;^913^^^^^908^914^return current.getKey (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P7_Replace_Invocation]^return current.setValue (  ) ;^913^^^^^908^914^return current.getKey (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P14_Delete_Statement]^^913^^^^^908^914^return current.getKey (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[P14_Delete_Statement]^^917^^^^^916^922^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P2_Replace_Operator]^if  ( current != null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P8_Replace_Mix]^if  ( current == false )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(AbstractHashedMap.GETVALUE_INVALID);^918^919^920^^^916^922^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P16_Remove_Block]^^918^919^920^^^916^922^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^918^^^^^916^922^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^918^^^^^916^922^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID )   ;^919^^^^^916^922^throw new IllegalStateException  (" ")  ;^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^919^^^^^916^922^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^919^^^^^916^922^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^919^^^^^916^922^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P8_Replace_Mix]^return ;^919^^^^^916^922^throw new IllegalStateException  (" ")  ;^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P7_Replace_Invocation]^return current.setValue (  ) ;^921^^^^^916^922^return current.getValue (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P14_Delete_Statement]^^921^^^^^916^922^return current.getValue (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[P14_Delete_Statement]^^925^^^^^924^930^final HashEntry<K, V> current = currentEntry (  ) ;^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P2_Replace_Operator]^if  ( current != null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P8_Replace_Mix]^if  ( current == this )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(AbstractHashedMap.SETVALUE_INVALID);^926^927^928^^^924^930^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P16_Remove_Block]^^926^927^928^^^924^930^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^926^^^^^924^930^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^926^^^^^924^930^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID )   ;^927^^^^^924^930^throw new IllegalStateException  (" ")  ;^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETKEY_INVALID ) ; }^927^^^^^924^930^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.SETVALUE_INVALID ) ; }^927^^^^^924^930^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P13_Insert_Block]^if  ( current == null )  {     throw new IllegalStateException ( AbstractHashedMap.GETVALUE_INVALID ) ; }^927^^^^^924^930^[Delete]^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P8_Replace_Mix]^return ;^927^^^^^924^930^throw new IllegalStateException  (" ")  ;^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P5_Replace_Variable]^return value.setValue ( current ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P8_Replace_Mix]^return current .getValue (  )  ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P8_Replace_Mix]^return 4.setValue ( value ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P14_Delete_Statement]^^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P1_Replace_Type]^private final  short  hash;^943^^^^^938^948^private final int hash;^[CLASS] SoftRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P8_Replace_Mix]^private final  long  hash;^943^^^^^938^948^private final int hash;^[CLASS] SoftRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[P5_Replace_Variable]^super (  q ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] SoftRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[P5_Replace_Variable]^super ( r ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] SoftRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[P5_Replace_Variable]^super ( q, r ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] SoftRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[P14_Delete_Statement]^^946^947^^^^945^948^super ( r, q ) ; this.hash = hash;^[CLASS] SoftRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[P8_Replace_Mix]^this.hash =  null;^947^^^^^945^948^this.hash = hash;^[CLASS] SoftRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[P1_Replace_Type]^private final  short  hash;^961^^^^^956^966^private final int hash;^[CLASS] WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int  hash  boolean  
[P8_Replace_Mix]^private final  long  hash;^961^^^^^956^966^private final int hash;^[CLASS] WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int  hash  boolean  
[P5_Replace_Variable]^super (  q ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[P5_Replace_Variable]^super ( r ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[P5_Replace_Variable]^super ( q, r ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[P14_Delete_Statement]^^964^965^^^^963^966^super ( r, q ) ; this.hash = hash;^[CLASS] WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[P8_Replace_Mix]^this.hash =  null;^965^^^^^963^966^this.hash = hash;^[CLASS] WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
