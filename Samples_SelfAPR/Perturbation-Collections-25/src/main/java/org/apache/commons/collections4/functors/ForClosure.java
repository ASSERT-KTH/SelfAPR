[P1_Replace_Type]^private static final  short  serialVersionUID = -1190120533393621674L;^32^^^^^27^37^private static final long serialVersionUID = -1190120533393621674L;^[CLASS] ForClosure   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -1190120533393621674;^32^^^^^27^37^private static final long serialVersionUID = -1190120533393621674L;^[CLASS] ForClosure   [VARIABLES] 
[P1_Replace_Type]^private final  short  iCount;^35^^^^^30^40^private final int iCount;^[CLASS] ForClosure   [VARIABLES] 
[P14_Delete_Statement]^^69^70^^^^68^72^super (  ) ; iCount = count;^[CLASS] ForClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P5_Replace_Variable]^iCount = iCount;^70^^^^^68^72^iCount = count;^[CLASS] ForClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P8_Replace_Mix]^iCount =  null;^70^^^^^68^72^iCount = count;^[CLASS] ForClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P11_Insert_Donor_Statement]^iClosure = closure;iCount = count;^70^^^^^68^72^iCount = count;^[CLASS] ForClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P8_Replace_Mix]^iClosure =  null;^71^^^^^68^72^iClosure = closure;^[CLASS] ForClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P11_Insert_Donor_Statement]^iCount = count;iClosure = closure;^71^^^^^68^72^iClosure = closure;^[CLASS] ForClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P2_Replace_Operator]^if  ( count <= 0 && closure == null )  {^52^^^^^51^59^if  ( count <= 0 || closure == null )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P2_Replace_Operator]^if  ( count < 0 || closure == null )  {^52^^^^^51^59^if  ( count <= 0 || closure == null )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P2_Replace_Operator]^if  ( count <= 0 || closure != null )  {^52^^^^^51^59^if  ( count <= 0 || closure == null )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P3_Replace_Literal]^if  ( count <= 5 || closure == null )  {^52^^^^^51^59^if  ( count <= 0 || closure == null )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P5_Replace_Variable]^if  ( closure <= 0 || count == null )  {^52^^^^^51^59^if  ( count <= 0 || closure == null )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P6_Replace_Expression]^if  ( count <= 0 ) {^52^^^^^51^59^if  ( count <= 0 || closure == null )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P6_Replace_Expression]^if  (  closure == null )  {^52^^^^^51^59^if  ( count <= 0 || closure == null )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P8_Replace_Mix]^if  ( count <= 2 ) {^52^^^^^51^59^if  ( count <= 0 || closure == null )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P15_Unwrap_Block]^return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();^52^53^54^^^51^59^if  ( count <= 0 || closure == null )  { return NOPClosure.<E>nopClosure (  ) ; }^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P16_Remove_Block]^^52^53^54^^^51^59^if  ( count <= 0 || closure == null )  { return NOPClosure.<E>nopClosure (  ) ; }^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P13_Insert_Block]^if  ( count == 1 )  {     return  (  ( Closure<E> )   ( closure )  ) ; }^52^^^^^51^59^[Delete]^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P13_Insert_Block]^if  (  ( count <= 0 )  ||  ( closure == null )  )  {     return <E>nopClosure (  ) ; }^53^^^^^51^59^[Delete]^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P14_Delete_Statement]^^53^^^^^51^59^return NOPClosure.<E>nopClosure (  ) ;^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P2_Replace_Operator]^if  ( count != 1 )  {^55^^^^^51^59^if  ( count == 1 )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P3_Replace_Literal]^if  ( count == 2 )  {^55^^^^^51^59^if  ( count == 1 )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P5_Replace_Variable]^if  ( iCount == 1 )  {^55^^^^^51^59^if  ( count == 1 )  {^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P15_Unwrap_Block]^return ((org.apache.commons.collections4.Closure<E>) (closure));^55^56^57^^^51^59^if  ( count == 1 )  { return  ( Closure<E> )  closure; }^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P16_Remove_Block]^^55^56^57^^^51^59^if  ( count == 1 )  { return  ( Closure<E> )  closure; }^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P13_Insert_Block]^if  (  ( count <= 0 )  ||  ( closure == null )  )  {     return <E>nopClosure (  ) ; }^55^^^^^51^59^[Delete]^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P13_Insert_Block]^if  ( count == 1 )  {     return  (  ( Closure<E> )   ( closure )  ) ; }^56^^^^^51^59^[Delete]^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P4_Replace_Constructor]^return new ForClosure<E> (  closure ) ;^58^^^^^51^59^return new ForClosure<E> ( count, closure ) ;^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P4_Replace_Constructor]^return new ForClosure<E> ( count ) ;^58^^^^^51^59^return new ForClosure<E> ( count, closure ) ;^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P5_Replace_Variable]^return new ForClosure<E> ( iCount, closure ) ;^58^^^^^51^59^return new ForClosure<E> ( count, closure ) ;^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P5_Replace_Variable]^return new ForClosure<E> ( closure, count ) ;^58^^^^^51^59^return new ForClosure<E> ( count, closure ) ;^[CLASS] ForClosure  [METHOD] forClosure [RETURN_TYPE] <E>   final int count Closure<? super E> closure [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  iCount  
[P1_Replace_Type]^for  (  short  i = 0; i < iCount; i++ )  {^80^^^^^79^83^for  ( int i = 0; i < iCount; i++ )  {^[CLASS] ForClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] boolean  Closure  closure  iClosure  E  input  long  serialVersionUID  int  count  i  iCount  
[P2_Replace_Operator]^for  ( int i = 0; i <= iCount; i++ )  {^80^^^^^79^83^for  ( int i = 0; i < iCount; i++ )  {^[CLASS] ForClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] boolean  Closure  closure  iClosure  E  input  long  serialVersionUID  int  count  i  iCount  
[P3_Replace_Literal]^for  ( int i = -4; i < iCount; i++ )  {^80^^^^^79^83^for  ( int i = 0; i < iCount; i++ )  {^[CLASS] ForClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] boolean  Closure  closure  iClosure  E  input  long  serialVersionUID  int  count  i  iCount  
[P5_Replace_Variable]^for  ( iCountnt i = 0; i < iCount; i++ )  {^80^^^^^79^83^for  ( int i = 0; i < iCount; i++ )  {^[CLASS] ForClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] boolean  Closure  closure  iClosure  E  input  long  serialVersionUID  int  count  i  iCount  
[P5_Replace_Variable]^for  ( int i = 0; i < count; i++ )  {^80^^^^^79^83^for  ( int i = 0; i < iCount; i++ )  {^[CLASS] ForClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] boolean  Closure  closure  iClosure  E  input  long  serialVersionUID  int  count  i  iCount  
[P5_Replace_Variable]^for  ( iCountnt i = 0; i < i; i++ )  {^80^^^^^79^83^for  ( int i = 0; i < iCount; i++ )  {^[CLASS] ForClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] boolean  Closure  closure  iClosure  E  input  long  serialVersionUID  int  count  i  iCount  
[P14_Delete_Statement]^^81^^^^^79^83^iClosure.execute ( input ) ;^[CLASS] ForClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] boolean  Closure  closure  iClosure  E  input  long  serialVersionUID  int  count  i  iCount  
[P1_Replace_Type]^for  (  long  i = 0; i < iCount; i++ )  {^80^^^^^79^83^for  ( int i = 0; i < iCount; i++ )  {^[CLASS] ForClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] boolean  Closure  closure  iClosure  E  input  long  serialVersionUID  int  count  i  iCount  
[P3_Replace_Literal]^for  ( int i = i; i < iCount; i++ )  {^80^^^^^79^83^for  ( int i = 0; i < iCount; i++ )  {^[CLASS] ForClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] boolean  Closure  closure  iClosure  E  input  long  serialVersionUID  int  count  i  iCount  
[P5_Replace_Variable]^return i;^102^^^^^101^103^return iCount;^[CLASS] ForClosure  [METHOD] getCount [RETURN_TYPE] int   [VARIABLES] boolean  Closure  closure  iClosure  long  serialVersionUID  int  count  i  iCount  
