[P1_Replace_Type]^private  short  callCounter = 0;^52^^^^^47^57^private int callCounter = 0;^[CLASS] LazyIteratorChain   [VARIABLES] 
[P3_Replace_Literal]^private int callCounter = 6;^52^^^^^47^57^private int callCounter = 0;^[CLASS] LazyIteratorChain   [VARIABLES] 
[P8_Replace_Mix]^private int callCounter = 3;^52^^^^^47^57^private int callCounter = 0;^[CLASS] LazyIteratorChain   [VARIABLES] 
[P3_Replace_Literal]^private boolean chainExhausted = true;^55^^^^^50^60^private boolean chainExhausted = false;^[CLASS] LazyIteratorChain   [VARIABLES] 
[P8_Replace_Mix]^private Iterator<? extends E> currentIterator = true;^58^^^^^53^63^private Iterator<? extends E> currentIterator = null;^[CLASS] LazyIteratorChain   [VARIABLES] 
[P8_Replace_Mix]^private Iterator<? extends E> lastUsedIterator ;^64^^^^^59^69^private Iterator<? extends E> lastUsedIterator = null;^[CLASS] LazyIteratorChain   [VARIABLES] 
[P2_Replace_Operator]^if  ( callCounter != 0 )  {^83^^^^^82^102^if  ( callCounter == 0 )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P3_Replace_Literal]^if  ( callCounter == count )  {^83^^^^^82^102^if  ( callCounter == 0 )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P5_Replace_Variable]^if  ( count == 0 )  {^83^^^^^82^102^if  ( callCounter == 0 )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P6_Replace_Expression]^if  ( currentIterator == null )  {^83^^^^^82^102^if  ( callCounter == 0 )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^if  ( callCounter == 3 )  {^83^^^^^82^102^if  ( callCounter == 0 )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P15_Unwrap_Block]^currentIterator = nextIterator((++(callCounter))); if ((currentIterator) == null) {    currentIterator = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();    chainExhausted = true;}; lastUsedIterator = currentIterator;^83^84^85^86^87^82^102^if  ( callCounter == 0 )  { currentIterator = nextIterator ( ++callCounter ) ; if  ( currentIterator == null )  { currentIterator = EmptyIterator.<E>emptyIterator (  ) ; chainExhausted = true; }^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P16_Remove_Block]^^83^84^85^86^87^82^102^if  ( callCounter == 0 )  { currentIterator = nextIterator ( ++callCounter ) ; if  ( currentIterator == null )  { currentIterator = EmptyIterator.<E>emptyIterator (  ) ; chainExhausted = true; }^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P13_Insert_Block]^if  (  ( currentIterator )  == null )  {     currentIterator = <E>emptyIterator (  ) ;     chainExhausted = true; }^83^^^^^82^102^[Delete]^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P2_Replace_Operator]^if  ( currentIterator != null )  {^85^^^^^82^102^if  ( currentIterator == null )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^if  ( currentIterator == this )  {^85^^^^^82^102^if  ( currentIterator == null )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P9_Replace_Statement]^if  ( nextIterator != null )  {^85^^^^^82^102^if  ( currentIterator == null )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P15_Unwrap_Block]^currentIterator = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator(); chainExhausted = true;^85^86^87^88^^82^102^if  ( currentIterator == null )  { currentIterator = EmptyIterator.<E>emptyIterator (  ) ; chainExhausted = true; }^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P16_Remove_Block]^^85^86^87^88^^82^102^if  ( currentIterator == null )  { currentIterator = EmptyIterator.<E>emptyIterator (  ) ; chainExhausted = true; }^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P13_Insert_Block]^if  (  ( callCounter )  == 0 )  {     currentIterator = nextIterator (  ( ++ ( callCounter )  )  ) ;     if  (  ( currentIterator )  == null )  {         currentIterator = <E>emptyIterator (  ) ;         chainExhausted = true;     }     lastUsedIterator = currentIterator; }^85^^^^^82^102^[Delete]^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P13_Insert_Block]^if  ( nextIterator != null )  {     currentIterator = nextIterator; }else {     chainExhausted = true; }^85^^^^^82^102^[Delete]^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^currentIterator ;^86^^^^^82^102^currentIterator = EmptyIterator.<E>emptyIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = nextIterator ( ++callCounter ) ;currentIterator = EmptyIterator.<E>emptyIterator (  ) ;^86^^^^^82^102^currentIterator = EmptyIterator.<E>emptyIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = nextIterator;currentIterator = EmptyIterator.<E>emptyIterator (  ) ;^86^^^^^82^102^currentIterator = EmptyIterator.<E>emptyIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P13_Insert_Block]^if  (  ( currentIterator )  == null )  {     currentIterator = <E>emptyIterator (  ) ;     chainExhausted = true; }^86^^^^^82^102^[Delete]^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P3_Replace_Literal]^chainExhausted = false;^87^^^^^82^102^chainExhausted = true;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^86^87^^^^82^102^currentIterator = EmptyIterator.<E>emptyIterator (  ) ; chainExhausted = true;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P7_Replace_Invocation]^currentIterator = updateCurrentIterator ( ++callCounter ) ;^84^^^^^82^102^currentIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^currentIterator ;^84^^^^^82^102^currentIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = EmptyIterator.<E>emptyIterator (  ) ;currentIterator = nextIterator ( ++callCounter ) ;^84^^^^^82^102^currentIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = nextIterator;currentIterator = nextIterator ( ++callCounter ) ;^84^^^^^82^102^currentIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^currentIterator  =  currentIterator ;^86^^^^^82^102^currentIterator = EmptyIterator.<E>emptyIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^lastUsedIterator  = null ;^91^^^^^82^102^lastUsedIterator = currentIterator;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = nextIterator;lastUsedIterator = currentIterator;^91^^^^^82^102^lastUsedIterator = currentIterator;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^84^^^^^82^102^currentIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^final Iterator<? extends E> nextIterator = nextIterator ( ++callCounter ) ;currentIterator = nextIterator ( ++callCounter ) ;^84^^^^^82^102^currentIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^86^^^^^82^102^currentIterator = EmptyIterator.<E>emptyIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^if  ( currentIterator == false )  {^85^^^^^82^102^if  ( currentIterator == null )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^currentIterator  = null ;^84^^^^^82^102^currentIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^currentIterator  = null ;^86^^^^^82^102^currentIterator = EmptyIterator.<E>emptyIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^lastUsedIterator ;^91^^^^^82^102^lastUsedIterator = currentIterator;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P2_Replace_Operator]^while  ( currentIterator.hasNext (  )  == false || !chainExhausted )  {^94^^^^^82^102^while  ( currentIterator.hasNext (  )  == false && !chainExhausted )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P2_Replace_Operator]^while  ( currentIterator.hasNext (  )  != false && !chainExhausted )  {^94^^^^^82^102^while  ( currentIterator.hasNext (  )  == false && !chainExhausted )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P3_Replace_Literal]^while  ( currentIterator.hasNext (  )  == true && !chainExhausted )  {^94^^^^^82^102^while  ( currentIterator.hasNext (  )  == false && !chainExhausted )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P7_Replace_Invocation]^while  ( currentIterator.next (  )  == false && !chainExhausted )  {^94^^^^^82^102^while  ( currentIterator.hasNext (  )  == false && !chainExhausted )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P2_Replace_Operator]^if  ( nextIterator == null )  {^96^^^^^82^102^if  ( nextIterator != null )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^if  ( nextIterator != false )  {^96^^^^^82^102^if  ( nextIterator != null )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P9_Replace_Statement]^if  ( currentIterator == null )  {^96^^^^^82^102^if  ( nextIterator != null )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P15_Unwrap_Block]^currentIterator = nextIterator;^96^97^98^99^100^82^102^if  ( nextIterator != null )  { currentIterator = nextIterator; } else { chainExhausted = true; }^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P16_Remove_Block]^^96^97^98^99^100^82^102^if  ( nextIterator != null )  { currentIterator = nextIterator; } else { chainExhausted = true; }^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P13_Insert_Block]^if  (  ( currentIterator )  == null )  {     currentIterator = <E>emptyIterator (  ) ;     chainExhausted = true; }^96^^^^^82^102^[Delete]^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P3_Replace_Literal]^chainExhausted = false;^99^^^^^82^102^chainExhausted = true;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P5_Replace_Variable]^currentIterator = null;^97^^^^^82^102^currentIterator = nextIterator;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = EmptyIterator.<E>emptyIterator (  ) ;currentIterator = nextIterator;^97^^^^^82^102^currentIterator = nextIterator;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = nextIterator ( ++callCounter ) ;currentIterator = nextIterator;^97^^^^^82^102^currentIterator = nextIterator;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^lastUsedIterator = currentIterator;currentIterator = nextIterator;^97^^^^^82^102^currentIterator = nextIterator;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P7_Replace_Invocation]^final Iterator<? extends E> updateCurrentIterator = nextIterator ( ++callCounter ) ;^95^^^^^82^102^final Iterator<? extends E> nextIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^95^^^^^82^102^final Iterator<? extends E> nextIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = nextIterator ( ++callCounter ) ;final Iterator<? extends E> nextIterator = nextIterator ( ++callCounter ) ;^95^^^^^82^102^final Iterator<? extends E> nextIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^while  ( currentIterator.hasNext (  )  == false && !chainExhausted )  { final Iterator<? extends E> nextIterator = nextIterator ( ++callCounter ) ;final Iterator<? extends E> nextIterator = nextIterator ( ++callCounter ) ;^95^^^^^82^102^final Iterator<? extends E> nextIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^if  ( nextIterator != true )  {^96^^^^^82^102^if  ( nextIterator != null )  {^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^94^95^^^^82^102^while  ( currentIterator.hasNext (  )  == false && !chainExhausted )  { final Iterator<? extends E> nextIterator = nextIterator ( ++callCounter ) ;^[CLASS] LazyIteratorChain  [METHOD] updateCurrentIterator [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^112^113^^^^111^116^updateCurrentIterator (  ) ; lastUsedIterator = currentIterator;^[CLASS] LazyIteratorChain  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^return currentIterator.hasNext (  ) ;updateCurrentIterator (  ) ;^112^^^^^111^116^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^return currentIterator.next (  ) ;updateCurrentIterator (  ) ;^112^^^^^111^116^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^lastUsedIterator  = null ;^113^^^^^111^116^lastUsedIterator = currentIterator;^[CLASS] LazyIteratorChain  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = nextIterator;lastUsedIterator = currentIterator;^113^^^^^111^116^lastUsedIterator = currentIterator;^[CLASS] LazyIteratorChain  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P7_Replace_Invocation]^return currentIterator.next (  ) ;^115^^^^^111^116^return currentIterator.hasNext (  ) ;^[CLASS] LazyIteratorChain  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P12_Insert_Condition]^if  ( currentIterator == null )  { return currentIterator.hasNext (  ) ; }^115^^^^^111^116^return currentIterator.hasNext (  ) ;^[CLASS] LazyIteratorChain  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^115^^^^^111^116^return currentIterator.hasNext (  ) ;^[CLASS] LazyIteratorChain  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^125^^^^^124^129^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^return currentIterator.hasNext (  ) ;updateCurrentIterator (  ) ;^125^^^^^124^129^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^return currentIterator.next (  ) ;updateCurrentIterator (  ) ;^125^^^^^124^129^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P12_Insert_Condition]^if  ( currentIterator == null )  { updateCurrentIterator (  ) ; }^125^^^^^124^129^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^lastUsedIterator  =  lastUsedIterator ;^126^^^^^124^129^lastUsedIterator = currentIterator;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^currentIterator = nextIterator;lastUsedIterator = currentIterator;^126^^^^^124^129^lastUsedIterator = currentIterator;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P7_Replace_Invocation]^return currentIterator.hasNext (  ) ;^128^^^^^124^129^return currentIterator.next (  ) ;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^return null.hasNext (  ) ;^128^^^^^124^129^return currentIterator.next (  ) ;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P12_Insert_Condition]^if  ( currentIterator == null )  { return currentIterator.next (  ) ; }^128^^^^^124^129^return currentIterator.next (  ) ;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^128^^^^^124^129^return currentIterator.next (  ) ;^[CLASS] LazyIteratorChain  [METHOD] next [RETURN_TYPE] E   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P2_Replace_Operator]^if  ( currentIterator != null )  {^144^^^^^143^148^if  ( currentIterator == null )  {^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P8_Replace_Mix]^if  ( currentIterator == false )  {^144^^^^^143^148^if  ( currentIterator == null )  {^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P9_Replace_Statement]^if  ( nextIterator != null )  {^144^^^^^143^148^if  ( currentIterator == null )  {^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P15_Unwrap_Block]^updateCurrentIterator();^144^145^146^^^143^148^if  ( currentIterator == null )  { updateCurrentIterator (  ) ; }^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P16_Remove_Block]^^144^145^146^^^143^148^if  ( currentIterator == null )  { updateCurrentIterator (  ) ; }^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^145^^^^^143^148^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^return currentIterator.hasNext (  ) ;updateCurrentIterator (  ) ;^145^^^^^143^148^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P11_Insert_Donor_Statement]^return currentIterator.next (  ) ;updateCurrentIterator (  ) ;^145^^^^^143^148^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P12_Insert_Condition]^if  ( currentIterator == null )  { updateCurrentIterator (  ) ; }^145^^^^^143^148^updateCurrentIterator (  ) ;^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P7_Replace_Invocation]^lastUsedIterator.next (  ) ;^147^^^^^143^148^lastUsedIterator.remove (  ) ;^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
[P14_Delete_Statement]^^147^^^^^143^148^lastUsedIterator.remove (  ) ;^[CLASS] LazyIteratorChain  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Iterator  currentIterator  lastUsedIterator  nextIterator  boolean  chainExhausted  int  callCounter  count  
