[P5_Replace_Variable]^super (  arrayType, factory, objectConstructor, deserializers, context ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P5_Replace_Variable]^super ( jsonArray,  factory, objectConstructor, deserializers, context ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P5_Replace_Variable]^super ( jsonArray, arrayType,  objectConstructor, deserializers, context ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P5_Replace_Variable]^super ( jsonArray, arrayType, factory,  deserializers, context ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P5_Replace_Variable]^super ( jsonArray, arrayType, factory, objectConstructor,  context ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P5_Replace_Variable]^super ( jsonArray, arrayType, factory, objectConstructor, deserializers ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P5_Replace_Variable]^super ( deserializers, arrayType, factory, objectConstructor, jsonArray, context ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P5_Replace_Variable]^super ( jsonArray, deserializers, factory, objectConstructor, arrayType, context ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P5_Replace_Variable]^super ( jsonArray, arrayType, context, objectConstructor, deserializers, factory ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P5_Replace_Variable]^super ( jsonArray, arrayType, factory, deserializers, objectConstructor, context ) ;^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P14_Delete_Statement]^^35^^^^^31^36^super ( jsonArray, arrayType, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonArray jsonArray Type arrayType ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] JsonArray  jsonArray  Type  arrayType  JsonDeserializationContext  context  boolean  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[P11_Insert_Donor_Statement]^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( arrayType ) ;TypeInfo typeInfo = new TypeInfo ( targetType ) ;^42^^^^^40^57^TypeInfo typeInfo = new TypeInfo ( targetType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P11_Insert_Donor_Statement]^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( targetType ) ;TypeInfo typeInfo = new TypeInfo ( targetType ) ;^42^^^^^40^57^TypeInfo typeInfo = new TypeInfo ( targetType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^if  ( !json.getAsJsonArray (  )  )  {^44^^^^^40^57^if  ( !json.isJsonArray (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P9_Replace_Statement]^if  ( typeInfo.isArray (  )  )  {^44^^^^^40^57^if  ( !json.isJsonArray (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P15_Unwrap_Block]^throw new com.google.gson.JsonParseException(("Expecting array found: " + (json)));^44^45^46^^^40^57^if  ( !json.isJsonArray (  )  )  { throw new JsonParseException  (" ")  ; }^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P16_Remove_Block]^^44^45^46^^^40^57^if  ( !json.isJsonArray (  )  )  { throw new JsonParseException  (" ")  ; }^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P13_Insert_Block]^if  ( ! ( json.isJsonArray (  )  )  )  {     throw new JsonParseException (  ( "Expecting array found: " +  ( json )  )  ) ; }^45^^^^^40^57^[Delete]^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + parent ) ;throw new JsonParseException  (" ")  ;^45^^^^^40^57^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new JsonParseException  (" ")  ;^45^^^^^40^57^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + obj ) ;throw new JsonParseException  (" ")  ;^45^^^^^40^57^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^JsonArray jsonArray = json.isJsonArray (  ) ;^47^^^^^40^57^JsonArray jsonArray = json.getAsJsonArray (  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P8_Replace_Mix]^JsonArray 1Array = json.getAsJsonArray (  ) ;^47^^^^^40^57^JsonArray jsonArray = json.getAsJsonArray (  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P14_Delete_Statement]^^47^^^^^40^57^JsonArray jsonArray = json.getAsJsonArray (  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^if  ( typeInfo .getRawClass (  )   )  {^48^^^^^40^57^if  ( typeInfo.isArray (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P9_Replace_Statement]^if  ( !json.isJsonArray (  )  )  {^48^^^^^40^57^if  ( typeInfo.isArray (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P3_Replace_Literal]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size() + 1  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P5_Replace_Variable]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) .size (  )  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P5_Replace_Variable]^return  ( T )  arrayTypeInfo.constructArray ( objectConstructor.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P5_Replace_Variable]^return  ( T )  objectConstructor.constructArray ( jsonArray.getSecondLevelType (  ) , arrayTypeInfo.size (  )  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P5_Replace_Variable]^return  ( T )  jsonArray.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , objectConstructor.size (  )  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^return  ( T )  objectConstructor .construct (  )   ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.get (  )  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^TypeInfoArray arrayTypeInfo = TypeInfoFactory .getTypeInfoForArray (  )  ;^49^^^^^40^57^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( targetType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P11_Insert_Donor_Statement]^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( arrayType ) ;TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( targetType ) ;^49^^^^^40^57^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( targetType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P11_Insert_Donor_Statement]^TypeInfo typeInfo = new TypeInfo ( targetType ) ;TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( targetType ) ;^49^^^^^40^57^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( targetType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P14_Delete_Statement]^^49^^^^^40^57^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( targetType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P3_Replace_Literal]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size() - 9  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P14_Delete_Statement]^^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P3_Replace_Literal]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size() + 7  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P3_Replace_Literal]^jsonArray.size() - 1  ) ;^53^^^^^40^57^jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^jsonArray.get (  )  ) ;^53^^^^^40^57^jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P14_Delete_Statement]^^53^^^^^40^57^jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P3_Replace_Literal]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size() + 5  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo .getComponentRawType (  )  , jsonArray.size (  )  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P3_Replace_Literal]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size() - 0  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P3_Replace_Literal]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size() - 1  ) ;^52^53^^^^40^57^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P3_Replace_Literal]^jsonArray.size() + 9  ) ;^53^^^^^40^57^jsonArray.size (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P5_Replace_Variable]^return  ( T )  typeInfo.construct ( objectConstructor.getRawClass (  )  ) ;^56^^^^^40^57^return  ( T )  objectConstructor.construct ( typeInfo.getRawClass (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^return  ( T )  objectConstructor .constructArray (  )  ;^56^^^^^40^57^return  ( T )  objectConstructor.construct ( typeInfo.getRawClass (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P14_Delete_Statement]^^56^^^^^40^57^return  ( T )  objectConstructor.construct ( typeInfo.getRawClass (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  boolean  TypeInfo  typeInfo  
[P7_Replace_Invocation]^if  ( !json.getAsJsonArray (  )  )  {^60^^^^^59^83^if  ( !json.isJsonArray (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P9_Replace_Statement]^if  ( typeInfo.isArray (  )  )  {^60^^^^^59^83^if  ( !json.isJsonArray (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P15_Unwrap_Block]^throw new com.google.gson.JsonParseException(("Expecting array found: " + (json)));^60^61^62^^^59^83^if  ( !json.isJsonArray (  )  )  { throw new JsonParseException  (" ")  ; }^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P16_Remove_Block]^^60^61^62^^^59^83^if  ( !json.isJsonArray (  )  )  { throw new JsonParseException  (" ")  ; }^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P13_Insert_Block]^if  ( ! ( json.isJsonArray (  )  )  )  {     throw new JsonParseException (  ( "Expecting array found: " +  ( json )  )  ) ; }^61^^^^^59^83^[Delete]^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + parent ) ;throw new JsonParseException  (" ")  ;^61^^^^^59^83^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new JsonParseException  (" ")  ;^61^^^^^59^83^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + obj ) ;throw new JsonParseException  (" ")  ;^61^^^^^59^83^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^throw new JsonParseException  (" ")   + ": " + parent ) ; ;^61^^^^^59^83^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^JsonArray jsonArray = json.isJsonArray (  ) ;^63^^^^^59^83^JsonArray jsonArray = json.getAsJsonArray (  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P14_Delete_Statement]^^63^64^^^^59^83^JsonArray jsonArray = json.getAsJsonArray (  ) ; TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( arrayType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( targetType ) ;TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( arrayType ) ;^64^^^^^59^83^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( arrayType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^TypeInfo typeInfo = new TypeInfo ( targetType ) ;TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( arrayType ) ;^64^^^^^59^83^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( arrayType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P14_Delete_Statement]^^64^^^^^59^83^TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray ( arrayType ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^if  ( jsonChild == null && jsonChild.isJsonNull (  )  )  {^69^^^^^59^83^if  ( jsonChild == null || jsonChild.isJsonNull (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^if  ( jsonChild != null || jsonChild.isJsonNull (  )  )  {^69^^^^^59^83^if  ( jsonChild == null || jsonChild.isJsonNull (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^if  ( jsonChild == null ) {^69^^^^^59^83^if  ( jsonChild == null || jsonChild.isJsonNull (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^if  (  jsonChild.isJsonNull (  )  )  {^69^^^^^59^83^if  ( jsonChild == null || jsonChild.isJsonNull (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^if  ( jsonChild instanceof JsonObject )  {^69^^^^^59^83^if  ( jsonChild == null || jsonChild.isJsonNull (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^if  ( jsonChild instanceof JsonArray )  {^69^^^^^59^83^if  ( jsonChild == null || jsonChild.isJsonNull (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^if  ( jsonChild instanceof JsonPrimitive )  {^69^^^^^59^83^if  ( jsonChild == null || jsonChild.isJsonNull (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^if  ( jsonChild == null || jsonChild .getAsJsonArray (  )   )  {^69^^^^^59^83^if  ( jsonChild == null || jsonChild.isJsonNull (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^if  (  jsonChild .getAsJsonArray (  )   )  {^69^^^^^59^83^if  ( jsonChild == null || jsonChild.isJsonNull (  )  )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  >=  JsonObject )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  <<  JsonObject )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^} else if  ( jsonChild instanceof JsonArray )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^} else if  ( jsonChild instanceof JsonPrimitive )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^} else {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^}  if  ( jsonChild instanceof JsonObject )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  >=  JsonArray )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  ==  JsonArray )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^} else if  ( jsonChild instanceof JsonPrimitive )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^} else {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P9_Replace_Statement]^} else if  ( jsonChild instanceof JsonObject )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  &&  JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P6_Replace_Expression]^} else {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P9_Replace_Statement]^} else if  ( jsonChild instanceof JsonObject )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P9_Replace_Statement]^} else if  ( jsonChild instanceof JsonArray )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P15_Unwrap_Block]^child = visitChildAsObject(arrayTypeInfo.getComponentRawType(), jsonChild.getAsJsonPrimitive());^75^76^77^78^79^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  { child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ; } else { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P16_Remove_Block]^^75^76^77^78^79^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  { child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ; } else { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P13_Insert_Block]^if  ( jsonChild instanceof JsonArray )  {     child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ; }else     if  ( jsonChild instanceof JsonPrimitive )  {         child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;     }else {         throw new IllegalStateException (  ) ;     }^75^^^^^59^83^[Delete]^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + parent ) ;throw new IllegalStateException  (" ")  ;^79^^^^^59^83^throw new IllegalStateException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")  ;throw new IllegalStateException  (" ")  ;^79^^^^^59^83^throw new IllegalStateException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + obj ) ;throw new IllegalStateException  (" ")  ;^79^^^^^59^83^throw new IllegalStateException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) .getAsJsonPrimitive (  )  ) ;^76^77^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^child = visitChildAsObject ( jsonChild.getComponentRawType (  ) , arrayTypeInfo.getAsJsonPrimitive (  )  ) ;^76^77^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^child = visitChildAsArray ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^76^77^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^child = visitChildAsObject ( arrayTypeInfo .getSecondLevelType (  )  , jsonChild.getAsJsonPrimitive (  )  ) ;^76^77^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^child =  visitChildAsObject ( null.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^76^77^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild .getAsJsonArray (  )   ) ;^76^77^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P14_Delete_Statement]^^76^77^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^76^77^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^76^77^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P14_Delete_Statement]^^77^^^^^59^83^jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^jsonChild .getAsJsonArray (  )   ) ;^77^^^^^59^83^jsonChild.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) .getAsJsonArray (  )  ) ;^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^child = visitChildAsArray ( jsonChild.getSecondLevelType (  ) , arrayTypeInfo.getAsJsonArray (  )  ) ;^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^child = visitChildAsObject ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^child = visitChildAsArray ( arrayTypeInfo .getComponentRawType (  )  , jsonChild.getAsJsonArray (  )  ) ;^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild .isJsonArray (  )   ) ;^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^child =  visitChildAsArray ( null.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P14_Delete_Statement]^^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^return  ( T )  objectConstructor.constructArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonArray.size (  )  ) ;child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^74^^^^^59^83^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  >  JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^}  if  ( jsonChild instanceof JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  )  ) ;^72^^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^child = visitChildAsObject ( jsonChild.getComponentRawType (  ) , arrayTypeInfo ) ;^72^^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^child = visitChildAsArray ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^72^^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^child = visitChildAsObject ( arrayTypeInfo .getSecondLevelType (  )  , jsonChild ) ;^72^^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^child =  visitChildAsObject ( null.getComponentRawType (  ) , jsonChild ) ;^72^^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P14_Delete_Statement]^^72^^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild.getAsJsonPrimitive (  )  ) ;child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^72^^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P11_Insert_Donor_Statement]^child = visitChildAsArray ( arrayTypeInfo.getSecondLevelType (  ) , jsonChild.getAsJsonArray (  )  ) ;child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^72^^^^^59^83^child = visitChildAsObject ( arrayTypeInfo.getComponentRawType (  ) , jsonChild ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  >>  JsonArray )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^throw new JsonParseException  (" ")   + ": " + parent ) ; ;^79^^^^^59^83^throw new IllegalStateException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  <<  JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^child = false;^70^^^^^59^83^child = null;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  !=  JsonObject )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  >  JsonObject )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  >  JsonArray )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^}  if  ( jsonChild instanceof JsonArray )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  |  JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  <=  JsonArray )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  >=  JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < jsonArray.size (  ) ; i++ )  {^65^^^^^59^83^for  ( int i = 0; i < jsonArray.size (  ) ; i++ )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i > jsonArray.size (  ) ; i++ )  {^65^^^^^59^83^for  ( int i = 0; i < jsonArray.size (  ) ; i++ )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P3_Replace_Literal]^for  ( int i = ; i < jsonArray.size (  ) ; i++ )  {^65^^^^^59^83^for  ( int i = 0; i < jsonArray.size (  ) ; i++ )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < jsonArray.size() + 2 ; i++ )  {^65^^^^^59^83^for  ( int i = 0; i < jsonArray.size (  ) ; i++ )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P7_Replace_Invocation]^for  ( int i = 0; i < jsonArray.get (  ) ; i++ )  {^65^^^^^59^83^for  ( int i = 0; i < jsonArray.size (  ) ; i++ )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  >>  JsonObject )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  ^  JsonObject )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  ||  JsonObject )  {^71^^^^^59^83^} else if  ( jsonChild instanceof JsonObject )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  <<  JsonArray )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  >>  JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  <=  JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^return true;^79^^^^^59^83^throw new IllegalStateException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  &  JsonArray )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P8_Replace_Mix]^child = this;^70^^^^^59^83^child = null;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  |  JsonArray )  {^73^^^^^59^83^} else if  ( jsonChild instanceof JsonArray )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  <  JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P2_Replace_Operator]^} else if  ( jsonChild  !=  JsonPrimitive )  {^75^^^^^59^83^} else if  ( jsonChild instanceof JsonPrimitive )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^JsonElement jsonChild = i.get ( jsonArray ) ;^66^^^^^59^83^JsonElement jsonChild = jsonArray.get ( i ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P14_Delete_Statement]^^66^67^^^^59^83^JsonElement jsonChild = jsonArray.get ( i ) ; Object child;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^Array.set (  i, child ) ;^81^^^^^59^83^Array.set ( array, i, child ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^Array.set ( array,  child ) ;^81^^^^^59^83^Array.set ( array, i, child ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^Array.set ( array, i ) ;^81^^^^^59^83^Array.set ( array, i, child ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^Array.set ( child, i, array ) ;^81^^^^^59^83^Array.set ( array, i, child ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^Array.set ( array, child, i ) ;^81^^^^^59^83^Array.set ( array, i, child ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P14_Delete_Statement]^^81^^^^^59^83^Array.set ( array, i, child ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < jsonArray.size (  ) ; i++ )  {^65^^^^^59^83^for  ( int i = 0; i < jsonArray.size (  ) ; i++ )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < jsonArray.size() + 7 ; i++ )  {^65^^^^^59^83^for  ( int i = 0; i < jsonArray.size (  ) ; i++ )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < jsonArray.size() - 2 ; i++ )  {^65^^^^^59^83^for  ( int i = 0; i < jsonArray.size (  ) ; i++ )  {^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P14_Delete_Statement]^^66^^^^^59^83^JsonElement jsonChild = jsonArray.get ( i ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^Array.set ( child, i, child ) ;^81^^^^^59^83^Array.set ( array, i, child ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P5_Replace_Variable]^Array.set ( i, array, child ) ;^81^^^^^59^83^Array.set ( array, i, child ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArray [RETURN_TYPE] void   Object array Type arrayType [VARIABLES] JsonArray  jsonArray  TypeInfoArray  arrayTypeInfo  Type  arrayType  boolean  JsonElement  jsonChild  Object  array  child  int  i  
[P4_Replace_Constructor]^throw throw  new JsonParseException (  ( "Expecting array found: " +  ( json )  )  )   ;^90^^^^^89^91^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] startVisitingObject [RETURN_TYPE] void   Object node [VARIABLES] boolean  Object  node  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + parent ) ;throw new JsonParseException  (" ")  ;^90^^^^^89^91^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] startVisitingObject [RETURN_TYPE] void   Object node [VARIABLES] boolean  Object  node  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new JsonParseException  (" ")  ;^90^^^^^89^91^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] startVisitingObject [RETURN_TYPE] void   Object node [VARIABLES] boolean  Object  node  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + obj ) ;throw new JsonParseException  (" ")  ;^90^^^^^89^91^throw new JsonParseException  (" ")  ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] startVisitingObject [RETURN_TYPE] void   Object node [VARIABLES] boolean  Object  node  
[P2_Replace_Operator]^throw new JsonParseException  >  (" ")   + ": " + obj ) ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException   instanceof   (" ")   + ": " + obj ) ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  ^  (" ")   + ": " + obj ) ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  &  (" ")   + ": " + obj ) ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  <  (" ")   + ": " + obj ) ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  |  (" ")   + ": " + obj ) ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P8_Replace_Mix]^throw new JsonParseException  (" ")   + ": " + parent ) ; ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + parent ) ;throw new JsonParseException  (" ")   + ": " + obj ) ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new JsonParseException  (" ")   + ": " + obj ) ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")  ;throw new JsonParseException  (" ")   + ": " + obj ) ;^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P14_Delete_Statement]^^94^95^^^^93^96^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  <=  (" ")   + ": " + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  >=  (" ")   + ": " + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  <  (" ")   + ": " + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P3_Replace_Literal]^throw new JsonParseException  (" ")   + ":" + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  >  (" ")   + ": " + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  !=  (" ")   + ": " + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  |  (" ")   + ": " + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P3_Replace_Literal]^throw new JsonParseException  (" ")   + ": :" + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + parent ) ;throw new JsonParseException  (" ")   + ": " + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new JsonParseException  (" ")   + ": " + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")  ;throw new JsonParseException  (" ")   + ": " + obj ) ;^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P14_Delete_Statement]^^99^100^^^^98^101^throw new JsonParseException  (" ")   + ": " + obj ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  Object  obj  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  ==  (" ")   + ": " + parent ) ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  |  (" ")   + ": " + parent ) ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  <  (" ")   + ": " + parent ) ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P3_Replace_Literal]^throw new JsonParseException  (" ")   + ": :" + parent ) ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  >>  (" ")   + ": " + parent ) ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException  &&  (" ")   + ": " + parent ) ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P8_Replace_Mix]^throw new IllegalStateException  (" ")  ; ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new JsonParseException  (" ")   + ": " + parent ) ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")  ;throw new JsonParseException  (" ")   + ": " + parent ) ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P11_Insert_Donor_Statement]^throw new JsonParseException  (" ")   + ": " + obj ) ;throw new JsonParseException  (" ")   + ": " + parent ) ;^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P14_Delete_Statement]^^104^105^^^^103^106^throw new JsonParseException  (" ")   + ": " + parent ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type actualTypeOfField Object parent [VARIABLES] Type  actualTypeOfField  boolean  Object  parent  FieldAttributes  f  
[P2_Replace_Operator]^throw new JsonParseException ( "Type information is unavailable, and the target is not a primitive: "  <=  json ) ;^109^110^^^^108^111^throw new JsonParseException ( "Type information is unavailable, and the target is not a primitive: " + json ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitPrimitive [RETURN_TYPE] void   Object primitive [VARIABLES] boolean  Object  primitive  
[P3_Replace_Literal]^throw new JsonParseException ( "is ype information is unavailable, and the target is not a primitive: " + json ) ;^109^110^^^^108^111^throw new JsonParseException ( "Type information is unavailable, and the target is not a primitive: " + json ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitPrimitive [RETURN_TYPE] void   Object primitive [VARIABLES] boolean  Object  primitive  
[P2_Replace_Operator]^throw new JsonParseException ( "Type information is unavailable, and the target is not a primitive: "  !=  json ) ;^109^110^^^^108^111^throw new JsonParseException ( "Type information is unavailable, and the target is not a primitive: " + json ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitPrimitive [RETURN_TYPE] void   Object primitive [VARIABLES] boolean  Object  primitive  
[P3_Replace_Literal]^throw new JsonParseException ( "rmat" + json ) ;^109^110^^^^108^111^throw new JsonParseException ( "Type information is unavailable, and the target is not a primitive: " + json ) ;^[CLASS] JsonArrayDeserializationVisitor  [METHOD] visitPrimitive [RETURN_TYPE] void   Object primitive [VARIABLES] boolean  Object  primitive  
