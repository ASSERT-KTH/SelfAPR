[P8_Replace_Mix]^private  RecursiveFieldNamingPolicy[] fieldPolicies;^30^^^^^25^35^private final RecursiveFieldNamingPolicy[] fieldPolicies;^[CLASS] CompositionFieldNamingPolicy   [VARIABLES] 
[P2_Replace_Operator]^if  ( fieldNamingPolicies != null )  {^33^^^^^32^37^if  ( fieldNamingPolicies == null )  {^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[P5_Replace_Variable]^if  ( fieldPolicies == null )  {^33^^^^^32^37^if  ( fieldNamingPolicies == null )  {^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[P8_Replace_Mix]^if  ( fieldNamingPolicies == false )  {^33^^^^^32^37^if  ( fieldNamingPolicies == null )  {^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[P15_Unwrap_Block]^throw new java.lang.NullPointerException("naming policies can not be null.");^33^34^35^^^32^37^if  ( fieldNamingPolicies == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[P16_Remove_Block]^^33^34^35^^^32^37^if  ( fieldNamingPolicies == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[P13_Insert_Block]^if  ( fieldNamingPolicies == null )  {     throw new NullPointerException ( "naming policies can not be null." ) ; }^34^^^^^32^37^[Delete]^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[P8_Replace_Mix]^return ;^34^^^^^32^37^throw new NullPointerException  (" ")  ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[P5_Replace_Variable]^this.fieldPolicies = fieldPolicies;^36^^^^^32^37^this.fieldPolicies = fieldNamingPolicies;^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[P5_Replace_Variable]^target = policy.translateName (  fieldType, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P5_Replace_Variable]^target = policy.translateName ( target,  annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P5_Replace_Variable]^target = policy.translateName ( target, fieldType ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P5_Replace_Variable]^target = fieldType.translateName ( target, policy, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P5_Replace_Variable]^target = target.translateName ( policy, fieldType, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P5_Replace_Variable]^target = annotations.translateName ( target, fieldType, policy ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P7_Replace_Invocation]^target = policy .CompositionFieldNamingPolicy ( fieldPolicies )  ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P8_Replace_Mix]^target =  null.translateName ( target, fieldType, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P5_Replace_Variable]^target = policy.translateName ( fieldType, target, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P5_Replace_Variable]^target = policy.translateName ( annotations, fieldType, target ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[P14_Delete_Statement]^^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
