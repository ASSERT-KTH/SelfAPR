[P8_Replace_Mix]^private  boolean preserveType;^28^^^^^23^33^private final boolean preserveType;^[CLASS] ObjectTypePair   [VARIABLES] 
[P8_Replace_Mix]^this.obj =  null;^31^^^^^30^34^this.obj = obj;^[CLASS] ObjectTypePair  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Object obj Type type boolean preserveType [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P11_Insert_Donor_Statement]^this.type = type;this.obj = obj;^31^^^^^30^34^this.obj = obj;^[CLASS] ObjectTypePair  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Object obj Type type boolean preserveType [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P8_Replace_Mix]^this.type =  null;^32^^^^^30^34^this.type = type;^[CLASS] ObjectTypePair  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Object obj Type type boolean preserveType [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P11_Insert_Donor_Statement]^this.obj = obj;this.type = type;^32^^^^^30^34^this.type = type;^[CLASS] ObjectTypePair  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Object obj Type type boolean preserveType [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P11_Insert_Donor_Statement]^this.preserveType = preserveType;this.type = type;^32^^^^^30^34^this.type = type;^[CLASS] ObjectTypePair  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Object obj Type type boolean preserveType [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P8_Replace_Mix]^this.preserveType =  null;^33^^^^^30^34^this.preserveType = preserveType;^[CLASS] ObjectTypePair  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Object obj Type type boolean preserveType [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P11_Insert_Donor_Statement]^this.type = type;this.preserveType = preserveType;^33^^^^^30^34^this.preserveType = preserveType;^[CLASS] ObjectTypePair  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Object obj Type type boolean preserveType [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P8_Replace_Mix]^this.obj =  null;^41^^^^^40^42^this.obj = obj;^[CLASS] ObjectTypePair  [METHOD] setObject [RETURN_TYPE] void   Object obj [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P11_Insert_Donor_Statement]^this.type = type;this.obj = obj;^41^^^^^40^42^this.obj = obj;^[CLASS] ObjectTypePair  [METHOD] setObject [RETURN_TYPE] void   Object obj [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P3_Replace_Literal]^return String.format ( "preserveType: %b, type: %s, obj: %s: %", preserveType, type, obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return String.format ( "preserveType: %b, type: %s, obj: %s",  type, obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType,  obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return String.format ( "preserveType: %b, type: %s: %s", preserveType, type, obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return String.format ( "preserveType: %b, preserveType: %s, obj: %s", type, type, obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return String.format ( "preserveType: %b, obj: %s, type: %s", preserveType, type, obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P3_Replace_Literal]^return String.format ( "preserveType: %b, type: %s, obj: %sveTy", preserveType, type, obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P14_Delete_Statement]^^50^51^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ; }^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[P2_Replace_Operator]^if  ( !preserveType || obj != null )  {^56^^^^^53^67^if  ( !preserveType && obj != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P2_Replace_Operator]^if  ( !preserveType && obj == null )  {^56^^^^^53^67^if  ( !preserveType && obj != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P6_Replace_Expression]^if  ( !preserveType ) {^56^^^^^53^67^if  ( !preserveType && obj != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P6_Replace_Expression]^if  (  obj != null )  {^56^^^^^53^67^if  ( !preserveType && obj != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P6_Replace_Expression]^if  ( handler != null )  {^56^^^^^53^67^if  ( !preserveType && obj != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P9_Replace_Statement]^if  ( preserveType || obj == null )  {^56^^^^^53^67^if  ( !preserveType && obj != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P2_Replace_Operator]^if  ( handler == null )  {^60^^^^^53^67^if  ( handler != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P8_Replace_Mix]^if  ( handler != false )  {^60^^^^^53^67^if  ( handler != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P9_Replace_Statement]^if  ( type == null )  {^60^^^^^53^67^if  ( handler != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P9_Replace_Statement]^if  ( obj == null )  {^60^^^^^53^67^if  ( handler != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P9_Replace_Statement]^if  ( other.obj != null )  {^60^^^^^53^67^if  ( handler != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P9_Replace_Statement]^if  ( other.type != null )  {^60^^^^^53^67^if  ( handler != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P9_Replace_Statement]^if  ( this.obj == null )  {^60^^^^^53^67^if  ( handler != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P15_Unwrap_Block]^return new com.google.gson.Pair<HANDLER, com.google.gson.ObjectTypePair>(handler, moreSpecificType);^60^61^62^^^53^67^if  ( handler != null )  { return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ; }^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P16_Remove_Block]^^60^61^62^^^53^67^if  ( handler != null )  { return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ; }^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P4_Replace_Constructor]^return return  new Pair<HANDLER, ObjectTypePair> ( handler, this )  ;^61^^^^^53^67^return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P4_Replace_Constructor]^return new Pair<HANDLER, ObjectTypePair> (  moreSpecificType ) ;^61^^^^^53^67^return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P4_Replace_Constructor]^return new Pair<HANDLER, ObjectTypePair> ( handler ) ;^61^^^^^53^67^return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P5_Replace_Variable]^return new Pair<HANDLER, ObjectTypePair> ( moreSpecificType, handler ) ;^61^^^^^53^67^return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P8_Replace_Mix]^return  new Pair<HANDLER, ObjectTypePair> ( handler, this )  ;^61^^^^^53^67^return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P13_Insert_Block]^if  ( handler != null )  {     return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ; }^61^^^^^53^67^[Delete]^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P5_Replace_Variable]^handler = handlers.getHandlerFor ( type ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P5_Replace_Variable]^handler = moreSpecificType.getHandlerFor ( handlers.type ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P5_Replace_Variable]^handler = handlers.getHandlerFor ( moreSpecificType ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P8_Replace_Mix]^handler =  null.getHandlerFor ( moreSpecificType.type ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P11_Insert_Donor_Statement]^handler = handlers.getHandlerFor ( type ) ;handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P14_Delete_Statement]^^58^59^60^61^62^53^67^ObjectTypePair moreSpecificType = toMoreSpecificType (  ) ; handler = handlers.getHandlerFor ( moreSpecificType.type ) ; if  ( handler != null )  { return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ; }^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P5_Replace_Variable]^handler = moreSpecificType.type.getHandlerFor ( handlers ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P5_Replace_Variable]^handler = handlers.getHandlerFor ( moreSpecificType.type.type ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P14_Delete_Statement]^^59^60^61^62^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ; if  ( handler != null )  { return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ; }^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P5_Replace_Variable]^handler = type.getHandlerFor ( handlers ) ;^65^^^^^53^67^handler = handlers.getHandlerFor ( type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P8_Replace_Mix]^handler =  null.getHandlerFor ( type ) ;^65^^^^^53^67^handler = handlers.getHandlerFor ( type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P11_Insert_Donor_Statement]^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;handler = handlers.getHandlerFor ( type ) ;^65^^^^^53^67^handler = handlers.getHandlerFor ( type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P14_Delete_Statement]^^65^66^^^^53^67^handler = handlers.getHandlerFor ( type ) ; return handler == null ? null : new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P2_Replace_Operator]^return handler != null ? null : new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^66^^^^^53^67^return handler == null ? null : new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P4_Replace_Constructor]^return handler == null ? null : return handler == null ? null :  new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType )  ;^66^^^^^53^67^return handler == null ? null : new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P6_Replace_Expression]^return handler ( new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^66^^^^^53^67^return handler == null ? null : new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P8_Replace_Mix]^return handler != this ? this :  new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType )  ;;^66^^^^^53^67^return handler == null ? null : new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[P2_Replace_Operator]^if  ( preserveType && obj == null )  {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P2_Replace_Operator]^if  ( preserveType || obj != null )  {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^if  ( obj || preserveType == null )  {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P6_Replace_Expression]^if  ( preserveType ) {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P6_Replace_Expression]^if  (  obj == null )  {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P8_Replace_Mix]^if  (  obj == this )  {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P9_Replace_Statement]^if  ( !preserveType && obj != null )  {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P15_Unwrap_Block]^return this;^70^71^72^^^69^78^if  ( preserveType || obj == null )  { return this; }^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P16_Remove_Block]^^70^71^72^^^69^78^if  ( preserveType || obj == null )  { return this; }^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( this.obj )  !=  ( other.obj )  )  {     return false; }^70^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( getClass (  )  )  !=  ( obj.getClass (  )  )  )  {     return false; }^70^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  ( actualType ==  ( type )  )  {     return this; }^70^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( other.obj )  != null )  {     return false; }^70^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( this )  == obj )  {     return true; }^70^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( other.type )  != null )  {     return false; }^70^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  ( obj == null )  {     return false; }^70^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P8_Replace_Mix]^return null;^71^^^^^69^78^return this;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^Type actualType = getActualTypeIfMoreSpecific (  obj.getClass (  )  ) ;^73^^^^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^Type actualType = getActualTypeIfMoreSpecific ( type.getClass (  )  ) ;^73^^^^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^Type actualType = getActualTypeIfMoreSpecific ( obj, type.getClass (  )  ) ;^73^^^^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P7_Replace_Invocation]^Type actualType = toMoreSpecificType ( type, obj.getClass (  )  ) ;^73^^^^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P7_Replace_Invocation]^Type actualType = getActualTypeIfMoreSpecific ( type, obj.hashCode (  )  ) ;^73^^^^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P7_Replace_Invocation]^Type actualType = getActualTypeIfMoreSpecific ( type, obj .equals ( obj )   ) ;^73^^^^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P8_Replace_Mix]^Type actualType = getActualTypeIfMoreSpecific ( actualType, obj.getClass (  )  ) ;^73^^^^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P14_Delete_Statement]^^73^74^75^76^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ; if  ( actualType == type )  { return this; }^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P2_Replace_Operator]^if  ( actualType != type )  {^74^^^^^69^78^if  ( actualType == type )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^if  ( type == actualType )  {^74^^^^^69^78^if  ( actualType == type )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P9_Replace_Statement]^if  ( type == null )  {^74^^^^^69^78^if  ( actualType == type )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P15_Unwrap_Block]^return this;^74^75^76^^^69^78^if  ( actualType == type )  { return this; }^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P16_Remove_Block]^^74^75^76^^^69^78^if  ( actualType == type )  { return this; }^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( this.obj )  !=  ( other.obj )  )  {     return false; }^74^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( preserveType )  ||  (  ( obj )  == null )  )  {     return this; }^74^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( getClass (  )  )  !=  ( obj.getClass (  )  )  )  {     return false; }^74^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  ( ! ( type.equals ( other.type )  )  )  {     return false; }^74^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( other.obj )  != null )  {     return false; }^74^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( this )  == obj )  {     return true; }^74^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  (  ( other.type )  != null )  {     return false; }^74^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P13_Insert_Block]^if  ( obj == null )  {     return false; }^74^^^^^69^78^[Delete]^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P8_Replace_Mix]^return null;^75^^^^^69^78^return this;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return new ObjectTypePair ( obj, type, preserveType ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return new ObjectTypePair ( obj,  preserveType ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return new ObjectTypePair (  actualType, preserveType ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return new ObjectTypePair ( obj, actualType ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return new ObjectTypePair ( obj, preserveType, actualType ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return new ObjectTypePair ( actualType, obj, preserveType ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P5_Replace_Variable]^return new ObjectTypePair ( preserveType, actualType, obj ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P2_Replace_Operator]^if  ( type  !=  Class<?> )  {^85^^^^^84^95^if  ( type instanceof Class<?> )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P5_Replace_Variable]^if  ( actualType instanceof Class<?> )  {^85^^^^^84^95^if  ( type instanceof Class<?> )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P6_Replace_Expression]^if  ( type == class )  {^85^^^^^84^95^if  ( type instanceof Class<?> )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P15_Unwrap_Block]^java.lang.Class<?> typeAsClass = ((java.lang.Class<?>) (type)); if (typeAsClass.isAssignableFrom(actualClass)) {    type = actualClass;}; if (type == (java.lang.Object.class)) {    type = actualClass;};^85^86^87^88^89^84^95^if  ( type instanceof Class<?> )  { Class<?> typeAsClass =  ( Class<?> )  type; if  ( typeAsClass.isAssignableFrom ( actualClass )  )  { type = actualClass; }^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P16_Remove_Block]^^85^86^87^88^89^84^95^if  ( type instanceof Class<?> )  { Class<?> typeAsClass =  ( Class<?> )  type; if  ( typeAsClass.isAssignableFrom ( actualClass )  )  { type = actualClass; }^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P5_Replace_Variable]^if  ( actualClass.isAssignableFrom ( typeAsClass )  )  {^87^^^^^84^95^if  ( typeAsClass.isAssignableFrom ( actualClass )  )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P15_Unwrap_Block]^type = actualClass;^87^88^89^^^84^95^if  ( typeAsClass.isAssignableFrom ( actualClass )  )  { type = actualClass; }^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P16_Remove_Block]^^87^88^89^^^84^95^if  ( typeAsClass.isAssignableFrom ( actualClass )  )  { type = actualClass; }^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     type = actualClass; }^87^^^^^84^95^[Delete]^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P8_Replace_Mix]^type =  null;^88^^^^^84^95^type = actualClass;^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P2_Replace_Operator]^if  ( type != Object.class )  {^90^^^^^84^95^if  ( type == Object.class )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P5_Replace_Variable]^if  ( actualType == Object.class )  {^90^^^^^84^95^if  ( type == Object.class )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P5_Replace_Variable]^if  ( type == Object.typeAsClass )  {^90^^^^^84^95^if  ( type == Object.class )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P15_Unwrap_Block]^type = actualClass;^90^91^92^^^84^95^if  ( type == Object.class )  { type = actualClass; }^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P16_Remove_Block]^^90^91^92^^^84^95^if  ( type == Object.class )  { type = actualClass; }^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P13_Insert_Block]^if  ( typeAsClass.isAssignableFrom ( actualClass )  )  {     type = actualClass; }^90^^^^^84^95^[Delete]^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P8_Replace_Mix]^type =  null;^91^^^^^84^95^type = actualClass;^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P5_Replace_Variable]^type = 0;^88^^^^^84^95^type = actualClass;^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P8_Replace_Mix]^if  ( typeAsClass.isAssignableFrom ( null )  )  {^87^^^^^84^95^if  ( typeAsClass.isAssignableFrom ( actualClass )  )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P13_Insert_Block]^if  ( typeAsClass.isAssignableFrom ( actualClass )  )  {     type = actualClass; }^87^^^^^84^95^[Delete]^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P8_Replace_Mix]^if  ( null.isAssignableFrom ( actualClass )  )  {^87^^^^^84^95^if  ( typeAsClass.isAssignableFrom ( actualClass )  )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P2_Replace_Operator]^if  ( type >= Object.class )  {^90^^^^^84^95^if  ( type == Object.class )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P5_Replace_Variable]^if  ( this.isAssignableFrom ( actualClass )  )  {^87^^^^^84^95^if  ( typeAsClass.isAssignableFrom ( actualClass )  )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P5_Replace_Variable]^return actualType;^94^^^^^84^95^return type;^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[P2_Replace_Operator]^return  (  ( obj != null )  ? 31 : obj.hashCode (  )  ) ;^101^^^^^98^102^return  (  ( obj == null )  ? 31 : obj.hashCode (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P3_Replace_Literal]^return  (  ( obj == null )  ? 35 : obj.hashCode (  )  ) ;^101^^^^^98^102^return  (  ( obj == null )  ? 31 : obj.hashCode (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P6_Replace_Expression]^return  (  ( obj.hashCode (  )  ) ;^101^^^^^98^102^return  (  ( obj == null )  ? 31 : obj.hashCode (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P7_Replace_Invocation]^return  (  ( obj == null )  ? 31 : obj.getClass (  )  ) ;^101^^^^^98^102^return  (  ( obj == null )  ? 31 : obj.hashCode (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P14_Delete_Statement]^^101^^^^^98^102^return  (  ( obj == null )  ? 31 : obj.hashCode (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[P2_Replace_Operator]^if  ( this >= obj )  {^106^^^^^105^131^if  ( this == obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( type == null )  {^106^^^^^105^131^if  ( this == obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( this.obj == null )  {^106^^^^^105^131^if  ( this == obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P15_Unwrap_Block]^return true;^106^107^108^^^105^131^if  ( this == obj )  { return true; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P16_Remove_Block]^^106^107^108^^^105^131^if  ( this == obj )  { return true; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this.obj )  !=  ( other.obj )  )  {     return false; }^106^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( preserveType )  ||  (  ( obj )  == null )  )  {     return this; }^106^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( getClass (  )  )  !=  ( obj.getClass (  )  )  )  {     return false; }^106^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( actualType ==  ( type )  )  {     return this; }^106^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.obj )  != null )  {     return false; }^106^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.type )  != null )  {     return false; }^106^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( obj == null )  {     return false; }^106^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P3_Replace_Literal]^return false;^107^^^^^105^131^return true;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P2_Replace_Operator]^if  ( obj != null )  {^109^^^^^105^131^if  ( obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^if  ( obj == false )  {^109^^^^^105^131^if  ( obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( type == null )  {^109^^^^^105^131^if  ( obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( handler != null )  {^109^^^^^105^131^if  ( obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( other.obj != null )  {^109^^^^^105^131^if  ( obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( other.type != null )  {^109^^^^^105^131^if  ( obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( this.obj == null )  {^109^^^^^105^131^if  ( obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P15_Unwrap_Block]^return false;^109^110^111^^^105^131^if  ( obj == null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P16_Remove_Block]^^109^110^111^^^105^131^if  ( obj == null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this.obj )  !=  ( other.obj )  )  {     return false; }^109^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( preserveType )  ||  (  ( obj )  == null )  )  {     return this; }^109^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( getClass (  )  )  !=  ( obj.getClass (  )  )  )  {     return false; }^109^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( actualType ==  ( type )  )  {     return this; }^109^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( ! ( type.equals ( other.type )  )  )  {     return false; }^109^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.obj )  != null )  {     return false; }^109^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this )  == obj )  {     return true; }^109^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.type )  != null )  {     return false; }^109^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P3_Replace_Literal]^return true;^110^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P2_Replace_Operator]^if  ( getClass (  )  == obj.getClass (  )  )  {^112^^^^^105^131^if  ( getClass (  )  != obj.getClass (  )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P7_Replace_Invocation]^if  ( getClass (  )  != obj.hashCode (  )  )  {^112^^^^^105^131^if  ( getClass (  )  != obj.getClass (  )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P7_Replace_Invocation]^if  ( getClass (  )  != obj.equals (  )  )  {^112^^^^^105^131^if  ( getClass (  )  != obj.getClass (  )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P7_Replace_Invocation]^if  ( getClass (  )  != obj .equals ( obj )   )  {^112^^^^^105^131^if  ( getClass (  )  != obj.getClass (  )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P15_Unwrap_Block]^return false;^112^113^114^^^105^131^if  ( getClass (  )  != obj.getClass (  )  )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P16_Remove_Block]^^112^113^114^^^105^131^if  ( getClass (  )  != obj.getClass (  )  )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this.obj )  !=  ( other.obj )  )  {     return false; }^112^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( preserveType )  ||  (  ( obj )  == null )  )  {     return this; }^112^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( actualType ==  ( type )  )  {     return this; }^112^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( ! ( type.equals ( other.type )  )  )  {     return false; }^112^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.obj )  != null )  {     return false; }^112^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this )  == obj )  {     return true; }^112^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.type )  != null )  {     return false; }^112^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( obj == null )  {     return false; }^112^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P3_Replace_Literal]^return true;^113^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P2_Replace_Operator]^if  ( this.obj != null )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^if  ( obj == null )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P6_Replace_Expression]^if  ( other.obj != null )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P6_Replace_Expression]^if  ( this.obj != other.obj )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^if  ( this.obj == this )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( this == obj )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( type == null )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( handler != null )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( other.type != null )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P15_Unwrap_Block]^if ((other.obj) != null) {    return false;};^116^117^118^119^^105^131^if  ( this.obj == null )  { if  ( other.obj != null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P16_Remove_Block]^^116^117^118^119^^105^131^if  ( this.obj == null )  { if  ( other.obj != null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( type )  == null )  {     if  (  ( other.type )  != null )  {         return false;     } }else     if  ( ! ( type.equals ( other.type )  )  )  {         return false;     }^116^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P2_Replace_Operator]^} else if  ( this.obj < other.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^} else if  ( obj != other.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^} else if  ( this.obj != obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^} else if  ( this.obj != other.obj.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^} else if  ( other.obj != this.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P6_Replace_Expression]^} else {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^}  if  ( obj != other.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P15_Unwrap_Block]^return false;^120^121^122^^^105^131^} else if  ( this.obj != other.obj )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P16_Remove_Block]^^120^121^122^^^105^131^} else if  ( this.obj != other.obj )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( preserveType )  ||  (  ( obj )  == null )  )  {     return this; }^120^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( getClass (  )  )  !=  ( obj.getClass (  )  )  )  {     return false; }^120^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( actualType ==  ( type )  )  {     return this; }^120^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( ! ( type.equals ( other.type )  )  )  {     return false; }^120^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.obj )  != null )  {     return false; }^120^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this )  == obj )  {     return true; }^120^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.type )  != null )  {     return false; }^120^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( obj == null )  {     return false; }^120^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P3_Replace_Literal]^return true;^121^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P2_Replace_Operator]^if  ( other.obj == null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^if  ( obj != null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^if  ( other.obj.obj != null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^if  ( other != null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^if  ( other.obj != this )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( type == null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( handler != null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( obj == null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( other.type != null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( this.obj == null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P15_Unwrap_Block]^return false;^117^118^119^^^105^131^if  ( other.obj != null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P16_Remove_Block]^^117^118^119^^^105^131^if  ( other.obj != null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this.obj )  !=  ( other.obj )  )  {     return false; }^117^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( preserveType )  ||  (  ( obj )  == null )  )  {     return this; }^117^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( getClass (  )  )  !=  ( obj.getClass (  )  )  )  {     return false; }^117^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( actualType ==  ( type )  )  {     return this; }^117^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( ! ( type.equals ( other.type )  )  )  {     return false; }^117^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this )  == obj )  {     return true; }^117^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.type )  != null )  {     return false; }^117^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( obj == null )  {     return false; }^117^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P3_Replace_Literal]^return true;^118^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P2_Replace_Operator]^} else if  ( this.obj <= other.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^} else if  ( other != this.obj.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^}  if  ( this.obj != obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P2_Replace_Operator]^if  ( type != null )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^if  ( actualType == null )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P6_Replace_Expression]^if  ( other.type != null )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^if  ( type == true )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( this == obj )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( handler != null )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( obj == null )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( other.obj != null )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( this.obj == null )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( actualType == type )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P15_Unwrap_Block]^if ((other.type) != null) {    return false;};^123^124^125^126^^105^131^if  ( type == null )  { if  ( other.type != null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P16_Remove_Block]^^123^124^125^126^^105^131^if  ( type == null )  { if  ( other.type != null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^} else if  ( !type.equals ( other.actualType )  )  {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^} else if  ( !type.equals ( actualType )  )  {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^} else if  ( !type.equals ( other )  )  {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P6_Replace_Expression]^} else {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^}  if  ( !type.equals ( actualType )  )  {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P15_Unwrap_Block]^return false;^127^128^129^^^105^131^} else if  ( !type.equals ( other.type )  )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P16_Remove_Block]^^127^128^129^^^105^131^} else if  ( !type.equals ( other.type )  )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this.obj )  !=  ( other.obj )  )  {     return false; }^127^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( getClass (  )  )  !=  ( obj.getClass (  )  )  )  {     return false; }^127^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( actualType ==  ( type )  )  {     return this; }^127^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.obj )  != null )  {     return false; }^127^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.type )  != null )  {     return false; }^127^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( obj == null )  {     return false; }^127^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P3_Replace_Literal]^return true;^128^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P2_Replace_Operator]^if  ( other.type == null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^if  ( type != null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^if  ( other.type.type != null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^if  ( other != null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^if  ( other.type != false )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( type == null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( handler != null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( obj == null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( other.obj != null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P9_Replace_Statement]^if  ( this.obj == null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P15_Unwrap_Block]^return false;^124^125^126^^^105^131^if  ( other.type != null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P16_Remove_Block]^^124^125^126^^^105^131^if  ( other.type != null )  { return false; }^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this.obj )  !=  ( other.obj )  )  {     return false; }^124^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( preserveType )  ||  (  ( obj )  == null )  )  {     return this; }^124^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( getClass (  )  )  !=  ( obj.getClass (  )  )  )  {     return false; }^124^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( actualType ==  ( type )  )  {     return this; }^124^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( ! ( type.equals ( other.type )  )  )  {     return false; }^124^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( other.obj )  != null )  {     return false; }^124^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  (  ( this )  == obj )  {     return true; }^124^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P13_Insert_Block]^if  ( obj == null )  {     return false; }^124^^^^^105^131^[Delete]^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P3_Replace_Literal]^return true;^125^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^}  if  ( !type.equals ( other.actualType )  )  {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P2_Replace_Operator]^return preserveType > other.preserveType;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^return preserveType == preserveType;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^return other == preserveType.preserveType;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P5_Replace_Variable]^return other.preserveType == preserveType;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[P8_Replace_Mix]^return preserveType  &&  preserveType;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
