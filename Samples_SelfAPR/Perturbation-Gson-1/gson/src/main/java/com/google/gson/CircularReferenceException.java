[P1_Replace_Type]^private static final  short  serialVersionUID = 7444343294106513081L;^27^^^^^22^32^private static final long serialVersionUID = 7444343294106513081L;^[CLASS] CircularReferenceException   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID ;^27^^^^^22^32^private static final long serialVersionUID = 7444343294106513081L;^[CLASS] CircularReferenceException   [VARIABLES] 
[P8_Replace_Mix]^private  Object offendingNode;^28^^^^^23^33^private final Object offendingNode;^[CLASS] CircularReferenceException   [VARIABLES] 
[P3_Replace_Literal]^super ( "circular reference errorircula" ) ;^31^^^^^30^33^super ( "circular reference error" ) ;^[CLASS] CircularReferenceException  [METHOD] <init> [RETURN_TYPE] Object)   Object offendingNode [VARIABLES] Object  offendingNode  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^31^32^^^^30^33^super ( "circular reference error" ) ; this.offendingNode = offendingNode;^[CLASS] CircularReferenceException  [METHOD] <init> [RETURN_TYPE] Object)   Object offendingNode [VARIABLES] Object  offendingNode  long  serialVersionUID  boolean  
[P8_Replace_Mix]^this.offendingNode =  null;^32^^^^^30^33^this.offendingNode = offendingNode;^[CLASS] CircularReferenceException  [METHOD] <init> [RETURN_TYPE] Object)   Object offendingNode [VARIABLES] Object  offendingNode  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^36^^^^^35^44^StringBuilder msg = new StringBuilder ( getMessage (  )  ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P2_Replace_Operator]^if  ( offendingField == null )  {^37^^^^^35^44^if  ( offendingField != null )  {^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P6_Replace_Expression]^if  ( offendingField.getName (  )  + "\n" )  {^37^^^^^35^44^if  ( offendingField != null )  {^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P8_Replace_Mix]^if  ( offendingField != true )  {^37^^^^^35^44^if  ( offendingField != null )  {^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P9_Replace_Statement]^if  ( offendingNode != null )  {^37^^^^^35^44^if  ( offendingField != null )  {^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P15_Unwrap_Block]^msg.append("\n  ").append("Offending field: ").append(((offendingField.getName()) + "\n"));^37^38^39^^^35^44^if  ( offendingField != null )  { msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ; }^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P16_Remove_Block]^^37^38^39^^^35^44^if  ( offendingField != null )  { msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ; }^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P13_Insert_Block]^if  (  ( offendingNode )  != null )  {     msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ; }^37^^^^^35^44^[Delete]^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P2_Replace_Operator]^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )   &  "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "n" ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  " ) .append ( "Offending field: endin" ) .append ( offendingField.getName (  )  + "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P14_Delete_Statement]^^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P11_Insert_Donor_Statement]^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P13_Insert_Block]^if  ( offendingField != null )  {     msg.append ( "\n  " ) .append ( "Offending field: " ) .append (  (  ( offendingField.getName (  )  )  + "\n" )  ) ; }^38^^^^^35^44^[Delete]^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "n n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  " ) .append ( "endiffending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P7_Replace_Invocation]^msg .append ( 3 )^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P8_Replace_Mix]^msg .append ( this )^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P2_Replace_Operator]^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )   <<  "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  " ) .append ( "fendin" ) .append ( offendingField.getName (  )  + "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  \" ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  " ) .append ( "ffending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P7_Replace_Invocation]^msg .append ( 4 )^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P7_Replace_Invocation]^msg .append ( 1 )^38^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P2_Replace_Operator]^if  ( offendingNode == null )  {^40^^^^^35^44^if  ( offendingNode != null )  {^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P8_Replace_Mix]^if  ( offendingNode != this )  {^40^^^^^35^44^if  ( offendingNode != null )  {^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P9_Replace_Statement]^if  ( offendingField != null )  {^40^^^^^35^44^if  ( offendingNode != null )  {^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P15_Unwrap_Block]^msg.append("\n  ").append("Offending object: ").append(offendingNode);^40^41^42^^^35^44^if  ( offendingNode != null )  { msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ; }^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P16_Remove_Block]^^40^41^42^^^35^44^if  ( offendingNode != null )  { msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ; }^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P13_Insert_Block]^if  ( offendingField != null )  {     msg.append ( "\n  " ) .append ( "Offending field: " ) .append (  (  ( offendingField.getName (  )  )  + "\n" )  ) ; }^40^^^^^35^44^[Delete]^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\nn  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  " ) .append ( "b" ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P14_Delete_Statement]^^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P11_Insert_Donor_Statement]^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P13_Insert_Block]^if  (  ( offendingNode )  != null )  {     msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ; }^41^^^^^35^44^[Delete]^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "n " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  " ) .append ( "Offending object: Offending obje" ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "" ) .append ( "Offending object: " ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\" ) .append ( "Offending object: " ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  " ) .append ( "Offend" ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  \" ) .append ( "Offending object: " ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  " ) .append ( "O" ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P3_Replace_Literal]^msg.append ( "\n  \n" ) .append ( "Offending object: " ) .append ( offendingNode ) ;^41^^^^^35^44^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P7_Replace_Invocation]^return new IllegalStateException ( msg.append (  ) , this ) ;^43^^^^^35^44^return new IllegalStateException ( msg.toString (  ) , this ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P7_Replace_Invocation]^return new IllegalStateException ( msg .StringBuilder ( this )  , this ) ;^43^^^^^35^44^return new IllegalStateException ( msg.toString (  ) , this ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
[P14_Delete_Statement]^^43^^^^^35^44^return new IllegalStateException ( msg.toString (  ) , this ) ;^[CLASS] CircularReferenceException  [METHOD] createDetailedException [RETURN_TYPE] IllegalStateException   FieldAttributes offendingField [VARIABLES] Object  offendingNode  boolean  StringBuilder  msg  long  serialVersionUID  FieldAttributes  offendingField  
