[P8_Replace_Mix]^this.visitor =  null;^32^^^^^31^34^this.visitor = visitor;^[CLASS] JsonTreeNavigator  [METHOD] <init> [RETURN_TYPE] JsonElementVisitor,boolean)   JsonElementVisitor visitor boolean visitNulls [VARIABLES] JsonElementVisitor  visitor  boolean  visitNulls  
[P11_Insert_Donor_Statement]^this.visitNulls = visitNulls;this.visitor = visitor;^32^^^^^31^34^this.visitor = visitor;^[CLASS] JsonTreeNavigator  [METHOD] <init> [RETURN_TYPE] JsonElementVisitor,boolean)   JsonElementVisitor visitor boolean visitNulls [VARIABLES] JsonElementVisitor  visitor  boolean  visitNulls  
[P8_Replace_Mix]^this.visitNulls =  null;^33^^^^^31^34^this.visitNulls = visitNulls;^[CLASS] JsonTreeNavigator  [METHOD] <init> [RETURN_TYPE] JsonElementVisitor,boolean)   JsonElementVisitor visitor boolean visitNulls [VARIABLES] JsonElementVisitor  visitor  boolean  visitNulls  
[P11_Insert_Donor_Statement]^this.visitor = visitor;this.visitNulls = visitNulls;^33^^^^^31^34^this.visitNulls = visitNulls;^[CLASS] JsonTreeNavigator  [METHOD] <init> [RETURN_TYPE] JsonElementVisitor,boolean)   JsonElementVisitor visitor boolean visitNulls [VARIABLES] JsonElementVisitor  visitor  boolean  visitNulls  
[P5_Replace_Variable]^if  ( child.isJsonNull (  )  )  {^37^^^^^36^64^if  ( element.isJsonNull (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^if  ( element .getAsJsonNull (  )   )  {^37^^^^^36^64^if  ( element.isJsonNull (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^} else if  ( child.isJsonArray (  )  )  {^39^^^^^36^64^} else if  ( element.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P6_Replace_Expression]^} else {^39^^^^^36^64^} else if  ( element.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^} else if  ( element .getAsJsonArray (  )   )  {^39^^^^^36^64^} else if  ( element.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P9_Replace_Statement]^} else if  ( element.isJsonObject (  )  )  {^39^^^^^36^64^} else if  ( element.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^} else if  ( child.isJsonObject (  )  )  {^50^^^^^36^64^} else if  ( element.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P6_Replace_Expression]^} else {^50^^^^^36^64^} else if  ( element.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^} else if  ( element .getAsJsonObject (  )   )  {^50^^^^^36^64^} else if  ( element.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitor.visitPrimitive ( child.getAsJsonPrimitive (  )  ) ;^62^^^^^50^63^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor.startArray ( element.getAsJsonPrimitive (  )  ) ;^62^^^^^50^63^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^62^^^^^50^63^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^62^^^^^50^63^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^62^^^^^50^63^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P2_Replace_Operator]^if  ( visited || isFirst )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^if  ( visitNulls && isFirst )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^if  ( visited && visitNulls )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^if  ( isFirst && visited )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P6_Replace_Expression]^if  ( visited ) {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P6_Replace_Expression]^if  (  isFirst )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P15_Unwrap_Block]^isFirst = false;^56^57^58^^^36^64^if  ( visited && isFirst )  { isFirst = false; }^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P16_Remove_Block]^^56^57^58^^^36^64^if  ( visited && isFirst )  { isFirst = false; }^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P13_Insert_Block]^if  ( isFirst )  {     isFirst = false; }^56^^^^^36^64^[Delete]^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P3_Replace_Literal]^isFirst = true;^57^^^^^36^64^isFirst = false;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^JsonObject object = child.getAsJsonObject (  ) ;^51^^^^^36^64^JsonObject object = element.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^JsonObject object = element .isJsonObject (  )  ;^51^^^^^36^64^JsonObject object = element.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^JsonArray array = element.getAsJsonArray (  ) ;JsonObject object = element.getAsJsonObject (  ) ;^51^^^^^36^64^JsonObject object = element.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^JsonObject childAsObject = child.getAsJsonObject (  ) ;JsonObject object = element.getAsJsonObject (  ) ;^51^^^^^36^64^JsonObject object = element.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P3_Replace_Literal]^boolean isFirst = false;^53^^^^^36^64^boolean isFirst = true;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( object, this.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , visitNulls ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild (  member.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( object.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  )  ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( isFirst, member.getKey (  ) , member.getValue (  ) , object ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( member, object.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( object, isFirst.getKey (  ) , member.getValue (  ) , member ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^boolean visited = visitChild ( object, member .getValue (  )  , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^51^^^^^36^64^JsonObject object = element.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor.endObject ( object ) ;^52^^^^^36^64^visitor.startObject ( object ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^52^53^^^^36^64^visitor.startObject ( object ) ; boolean isFirst = true;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.endObject ( object ) ;visitor.startObject ( object ) ;^52^^^^^36^64^visitor.startObject ( object ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.startArray ( array ) ;visitor.startObject ( object ) ;^52^^^^^36^64^visitor.startObject ( object ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^54^55^56^57^58^36^64^for  ( Map.Entry<String, JsonElement> member : object.entrySet (  )  )  { boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ; if  ( visited && isFirst )  { isFirst = false; }^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , visited ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^boolean visited = visitChild ( object, member .getValue (  )  , member.getValue (  ) , visited ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor.startObject ( object ) ;^60^^^^^36^64^visitor.endObject ( object ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^60^^^^^36^64^visitor.endObject ( object ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.startObject ( object ) ;visitor.endObject ( object ) ;^60^^^^^36^64^visitor.endObject ( object ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.endArray ( array ) ;visitor.endObject ( object ) ;^60^^^^^36^64^visitor.endObject ( object ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^boolean visited = visitChild ( object, member.getKey (  ) , member .getKey (  )  , visitNulls ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^boolean visited = visitChild ( object, member.getKey (  ) , member .getKey (  )  , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitor.visitPrimitive ( child.getAsJsonPrimitive (  )  ) ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor.startArray ( element.getAsJsonPrimitive (  )  ) ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^visitor.startArray ( child.getAsJsonPrimitive (  )  ) ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^if  ( visited )  {^45^^^^^36^64^if  ( isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P15_Unwrap_Block]^isFirst = false;^45^46^47^^^36^64^if  ( isFirst )  { isFirst = false; }^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P16_Remove_Block]^^45^46^47^^^36^64^if  ( isFirst )  { isFirst = false; }^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P13_Insert_Block]^if  ( visited && isFirst )  {     isFirst = false; }^45^^^^^36^64^[Delete]^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P3_Replace_Literal]^isFirst = true;^46^^^^^36^64^isFirst = false;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^JsonArray array = child.getAsJsonArray (  ) ;^40^^^^^36^64^JsonArray array = element.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^JsonArray array = element .isJsonArray (  )  ;^40^^^^^36^64^JsonArray array = element.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^JsonObject object = element.getAsJsonObject (  ) ;JsonArray array = element.getAsJsonArray (  ) ;^40^^^^^36^64^JsonArray array = element.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^JsonArray childAsArray = child.getAsJsonArray (  ) ;JsonArray array = element.getAsJsonArray (  ) ;^40^^^^^36^64^JsonArray array = element.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P3_Replace_Literal]^boolean isFirst = false;^42^^^^^36^64^boolean isFirst = true;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^40^41^^^^36^64^JsonArray array = element.getAsJsonArray (  ) ; visitor.startArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor.endArray ( array ) ;^41^^^^^36^64^visitor.startArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^41^42^^^^36^64^visitor.startArray ( array ) ; boolean isFirst = true;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.startObject ( object ) ;visitor.startArray ( array ) ;^41^^^^^36^64^visitor.startArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.visitNull (  ) ;visitor.startArray ( array ) ;^41^^^^^36^64^visitor.startArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.endArray ( array ) ;visitor.startArray ( array ) ;^41^^^^^36^64^visitor.startArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitChild ( array, element, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitChild ( array, child, visited ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitChild (  child, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitChild ( array,  isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitChild ( array, child ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitChild ( isFirst, child, array ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitChild ( array, isFirst, child ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;visitChild ( array, child, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;visitChild ( array, child, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;visitChild ( array, child, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor.startArray ( array ) ;^49^^^^^36^64^visitor.endArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^49^^^^^36^64^visitor.endArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.endObject ( object ) ;visitor.endArray ( array ) ;^49^^^^^36^64^visitor.endArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.startArray ( array ) ;visitor.endArray ( array ) ;^49^^^^^36^64^visitor.endArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor.visitPrimitive ( element .getAsJsonArray (  )   ) ;^62^^^^^50^63^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^JsonObject object = child .isJsonObject (  )  ;^51^^^^^36^64^JsonObject object = element.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( object, 0.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^51^52^^^^36^64^JsonObject object = element.getAsJsonObject (  ) ; visitor.startObject ( object ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^52^^^^^36^64^visitor.startObject ( object ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor.visitPrimitive (  ) ;^38^^^^^36^64^visitor.visitNull (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor .visitNullArrayMember ( array , isFirst )  ;^38^^^^^36^64^visitor.visitNull (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^38^^^^^36^64^visitor.visitNull (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P11_Insert_Donor_Statement]^visitor.startArray ( array ) ;visitor.visitNull (  ) ;^38^^^^^36^64^visitor.visitNull (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^}  if  ( element.isJsonArray (  )  )  {^39^^^^^36^64^} else if  ( element.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^}  if  ( child.isJsonObject (  )  )  {^50^^^^^36^64^} else if  ( element.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^if  (  visitNulls )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^boolean visited = visitChild ( object, null.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor .visitArrayMember ( array , array , isFirst )  ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor.visitPrimitive ( element .getAsJsonArray (  )   ) ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^visitor.visitPrimitive ( child .getAsJsonArray (  )   ) ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^40^^^^^36^64^JsonArray array = element.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P5_Replace_Variable]^visitChild ( child, array, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^boolean visited = visitChild ( object, member.getKey (  ) , member .getKey (  )  , visited ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P8_Replace_Mix]^JsonArray array = child .isJsonArray (  )  ;^40^^^^^36^64^JsonArray array = element.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P14_Delete_Statement]^^41^^^^^36^64^visitor.startArray ( array ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^visitor .visitArrayMember ( array , array , visited )  ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[P7_Replace_Invocation]^if  ( child .getAsJsonNull (  )   )  {^71^^^^^69^90^if  ( child.isJsonNull (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P9_Replace_Statement]^if  ( element.isJsonNull (  )  )  {^71^^^^^69^90^if  ( child.isJsonNull (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P6_Replace_Expression]^} else {^78^^^^^69^90^} else if  ( child.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^} else if  ( child .getAsJsonArray (  )   )  {^78^^^^^69^90^} else if  ( child.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P9_Replace_Statement]^} else if  ( element.isJsonObject (  )  )  {^78^^^^^69^90^} else if  ( child.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P6_Replace_Expression]^} else {^82^^^^^69^90^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P8_Replace_Mix]^}  if  ( child.isJsonObject (  )  )  {^82^^^^^69^90^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P9_Replace_Statement]^} else if  ( element.isJsonObject (  )  )  {^82^^^^^69^90^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P9_Replace_Statement]^} else if  ( child.isJsonArray (  )  )  {^82^^^^^69^90^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( childAsObject, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember (  childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent,  child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parentName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  )  ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, isFirst, child.getAsJsonPrimitive (  ) , childName ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( child, parentName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitObjectMember ( childAsObject , childName , isFirst )  ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^visitor.visitObjectMember ( parent, childName, child .getAsJsonArray (  )  , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^JsonObject childAsObject = child .isJsonObject (  )  ;^83^^^^^69^90^JsonObject childAsObject = child.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^JsonObject object = element.getAsJsonObject (  ) ;JsonObject childAsObject = child.getAsJsonObject (  ) ;^83^^^^^69^90^JsonObject childAsObject = child.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^JsonArray childAsArray = child.getAsJsonArray (  ) ;JsonObject childAsObject = child.getAsJsonObject (  ) ;^83^^^^^69^90^JsonObject childAsObject = child.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^83^^^^^69^90^JsonObject childAsObject = child.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName, parent, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName, childAsObject, visited ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember (  childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent,  childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName,  isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName, childAsObject ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( childAsObject, childName, parent, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childAsObject, childName, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, isFirst, childAsObject, childName ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitObjectMember ( childAsObject , childName , isFirst )  ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullArrayMember ( parent, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P8_Replace_Mix]^navigate ( parent ) ;^85^^^^^69^90^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^85^^^^^69^90^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( child.getAsJsonNull (  )  ) ;navigate ( childAsObject ) ;^85^^^^^69^90^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( child ) ;navigate ( childAsObject ) ;^85^^^^^69^90^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( childAsArray ) ;navigate ( childAsObject ) ;^85^^^^^69^90^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^} else if  ( child .getAsJsonObject (  )   )  {^82^^^^^69^90^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^83^84^^^^69^90^JsonObject childAsObject = child.getAsJsonObject (  ) ; visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( isFirst, childName, childAsObject, parent ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^84^85^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ; navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , visited ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( childName, parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, child, childName.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitObjectMember ( parent , childName , visited )  ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^JsonArray childAsArray = child .isJsonArray (  )  ;^79^^^^^69^90^JsonArray childAsArray = child.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^JsonArray array = element.getAsJsonArray (  ) ;JsonArray childAsArray = child.getAsJsonArray (  ) ;^79^^^^^69^90^JsonArray childAsArray = child.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^JsonObject childAsObject = child.getAsJsonObject (  ) ;JsonArray childAsArray = child.getAsJsonArray (  ) ;^79^^^^^69^90^JsonArray childAsArray = child.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^79^80^^^^69^90^JsonArray childAsArray = child.getAsJsonArray (  ) ; visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName, childAsArray, visited ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember (  childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent,  childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName,  isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName, childAsArray ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( isFirst, childName, childAsArray, parent ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childName, isFirst, childAsArray ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^80^81^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ; navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullArrayMember ( parent, isFirst ) ;visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^81^^^^^69^90^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( child.getAsJsonNull (  )  ) ;navigate ( childAsArray ) ;^81^^^^^69^90^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( child ) ;navigate ( childAsArray ) ;^81^^^^^69^90^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( childAsObject ) ;navigate ( childAsArray ) ;^81^^^^^69^90^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( isFirst, childName, child.getAsJsonPrimitive (  ) , parent ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitObjectMember ( childAsObject , childName , visitNulls )  ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( childAsObject, childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( childAsArray, childName, parent, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, isFirstName, child.getAsJsonPrimitive (  ) , child ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^if  ( visited )  {^72^^^^^69^90^if  ( visitNulls )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P15_Unwrap_Block]^visitor.visitNullObjectMember(parent, childName, isFirst); navigate(child.getAsJsonNull());^72^73^74^75^76^69^90^if  ( visitNulls )  { visitor.visitNullObjectMember ( parent, childName, isFirst ) ; navigate ( child.getAsJsonNull (  )  ) ; } else { return false; }^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P16_Remove_Block]^^72^73^74^75^76^69^90^if  ( visitNulls )  { visitor.visitNullObjectMember ( parent, childName, isFirst ) ; navigate ( child.getAsJsonNull (  )  ) ; } else { return false; }^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P3_Replace_Literal]^return true;^76^^^^^69^90^return false;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullObjectMember ( childAsObject, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullObjectMember ( parent, childName, visited ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullObjectMember (  childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullObjectMember ( parent,  isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullObjectMember ( parent, childName ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullObjectMember ( isFirst, childName, parent ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullObjectMember ( childName, parent, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^visitor.visitObjectMember ( parent, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitObjectMember ( childAsObject , childName , childAsArray , visitNulls )  ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^73^74^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ; navigate ( child.getAsJsonNull (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitChild ( array, child, isFirst ) ;visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullArrayMember ( parent, isFirst ) ;visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P8_Replace_Mix]^navigate ( child .isJsonNull (  )   ) ;^74^^^^^69^90^navigate ( child.getAsJsonNull (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^74^^^^^69^90^navigate ( child.getAsJsonNull (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( childAsObject ) ;navigate ( child.getAsJsonNull (  )  ) ;^74^^^^^69^90^navigate ( child.getAsJsonNull (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( childAsArray ) ;navigate ( child.getAsJsonNull (  )  ) ;^74^^^^^69^90^navigate ( child.getAsJsonNull (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P12_Insert_Condition]^if  ( element.isJsonNull (  )  )  { navigate ( child.getAsJsonNull (  )  ) ; }^74^^^^^69^90^navigate ( child.getAsJsonNull (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P12_Insert_Condition]^if  ( child.isJsonNull (  )  )  { navigate ( child.getAsJsonNull (  )  ) ; }^74^^^^^69^90^navigate ( child.getAsJsonNull (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullObjectMember ( parent, isFirst, childName ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P8_Replace_Mix]^visitor .visitObjectMember ( childAsObject , childName , childAsArray , visited )  ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, childNameName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitObjectMember ( parent , childName , visitNulls )  ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( childAsObject, childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitObjectMember ( parent , childName , visitNulls )  ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( childName, parent, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P5_Replace_Variable]^visitor.visitObjectMember ( parent, isFirst, childAsArray, childName ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P14_Delete_Statement]^^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P8_Replace_Mix]^visitor.visitObjectMember ( parent, childName, visited ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P3_Replace_Literal]^return false;^89^^^^^69^90^return true;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[P8_Replace_Mix]^if  ( child .getAsJsonNull (  )   )  {^96^^^^^95^110^if  ( child.isJsonNull (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P9_Replace_Statement]^if  ( element.isJsonNull (  )  )  {^96^^^^^95^110^if  ( child.isJsonNull (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P6_Replace_Expression]^} else {^99^^^^^95^110^} else if  ( child.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^} else if  ( child .getAsJsonArray (  )   )  {^99^^^^^95^110^} else if  ( child.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P8_Replace_Mix]^}  if  ( child.isJsonArray (  )  )  {^99^^^^^95^110^} else if  ( child.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P9_Replace_Statement]^} else if  ( element.isJsonObject (  )  )  {^99^^^^^95^110^} else if  ( child.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P6_Replace_Expression]^} else {^103^^^^^95^110^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P8_Replace_Mix]^} else if  ( child .getAsJsonObject (  )   )  {^103^^^^^95^110^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P9_Replace_Statement]^} else if  ( element.isJsonObject (  )  )  {^103^^^^^95^110^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P9_Replace_Statement]^} else if  ( child.isJsonArray (  )  )  {^103^^^^^95^110^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( childAsArray, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember (  child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  )  ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( isFirst, child.getAsJsonPrimitive (  ) , parent ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent, isFirst.getAsJsonPrimitive (  ) , child ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitArrayMember ( parent , isFirst )  ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P8_Replace_Mix]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , visited ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullArrayMember ( parent, isFirst ) ;visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P8_Replace_Mix]^visitor.visitArrayMember ( parent, child .getAsJsonArray (  )  , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^JsonObject childAsObject = child .isJsonObject (  )  ;^104^^^^^95^110^JsonObject childAsObject = child.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^JsonObject object = element.getAsJsonObject (  ) ;JsonObject childAsObject = child.getAsJsonObject (  ) ;^104^^^^^95^110^JsonObject childAsObject = child.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^JsonArray childAsArray = child.getAsJsonArray (  ) ;JsonObject childAsObject = child.getAsJsonObject (  ) ;^104^^^^^95^110^JsonObject childAsObject = child.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^104^105^^^^95^110^JsonObject childAsObject = child.getAsJsonObject (  ) ; visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( childAsArray, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent, childAsObject, visited ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember (  childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent,  isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent, childAsObject ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent, isFirst, childAsObject ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitChild ( array, child, isFirst ) ;visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullArrayMember ( parent, isFirst ) ;visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^106^^^^^95^110^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( child.getAsJsonNull (  )  ) ;navigate ( childAsObject ) ;^106^^^^^95^110^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( child ) ;navigate ( childAsObject ) ;^106^^^^^95^110^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( childAsArray ) ;navigate ( childAsObject ) ;^106^^^^^95^110^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( isFirst, childAsObject, parent ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^105^106^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ; navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitArrayMember ( childAsArray , visited )  ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^JsonArray array = element.getAsJsonArray (  ) ;JsonArray childAsArray = child.getAsJsonArray (  ) ;^100^^^^^95^110^JsonArray childAsArray = child.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^JsonObject childAsObject = child.getAsJsonObject (  ) ;JsonArray childAsArray = child.getAsJsonArray (  ) ;^100^^^^^95^110^JsonArray childAsArray = child.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P8_Replace_Mix]^JsonArray childAsArray = child .isJsonArray (  )  ;^100^^^^^95^110^JsonArray childAsArray = child.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^100^^^^^95^110^JsonArray childAsArray = child.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent, parent, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent, childAsArray, visited ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember (  childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent,  isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent, childAsArray ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( childAsArray, parent, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( isFirst, childAsArray, parent ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^101^102^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ; navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitChild ( array, child, isFirst ) ;visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^visitor.visitNullArrayMember ( parent, isFirst ) ;visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^navigate ( parent ) ;^102^^^^^95^110^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^102^^^^^95^110^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( child.getAsJsonNull (  )  ) ;navigate ( childAsArray ) ;^102^^^^^95^110^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( child ) ;navigate ( childAsArray ) ;^102^^^^^95^110^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( childAsObject ) ;navigate ( childAsArray ) ;^102^^^^^95^110^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( child, parent.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^104^^^^^95^110^JsonObject childAsObject = child.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( childAsObject, parent, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitArrayMember ( parent , visitNulls )  ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^100^101^^^^95^110^JsonArray childAsArray = child.getAsJsonArray (  ) ; visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( childAsArray, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitArrayMember ( parent , visited )  ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullArrayMember ( childAsArray, isFirst ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullArrayMember ( parent, visited ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullArrayMember (  isFirst ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullArrayMember ( parent ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor.visitArrayMember ( parent, isFirst ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^98^^^^^95^110^navigate ( child ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( childAsObject ) ;navigate ( child ) ;^98^^^^^95^110^navigate ( child ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P11_Insert_Donor_Statement]^navigate ( childAsArray ) ;navigate ( child ) ;^98^^^^^95^110^navigate ( child ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P8_Replace_Mix]^}  if  ( child .getAsJsonObject (  )   )  {^103^^^^^95^110^} else if  ( child.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitArrayMember ( childAsArray , visitNulls )  ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitArrayMember ( childAsArray , isFirst )  ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitArrayMember ( parent, isFirst, childAsArray ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P14_Delete_Statement]^^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitArrayMember ( childAsArray , visitNulls )  ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P8_Replace_Mix]^visitor .visitArrayMember ( parent , visited )  ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitArrayMember ( childAsArray , visited )  ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P5_Replace_Variable]^visitor.visitNullArrayMember ( isFirst, parent ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[P7_Replace_Invocation]^visitor .visitArrayMember ( parent , parent , visitNulls )  ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
