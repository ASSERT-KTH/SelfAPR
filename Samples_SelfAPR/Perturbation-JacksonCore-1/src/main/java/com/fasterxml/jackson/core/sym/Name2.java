[P1_Replace_Type]^final  short  mQuad1;^15^^^^^10^20^final int mQuad1;^[CLASS] Name2   [VARIABLES] 
[P8_Replace_Mix]^final  long  mQuad1;^15^^^^^10^20^final int mQuad1;^[CLASS] Name2   [VARIABLES] 
[P1_Replace_Type]^final  long  mQuad2;^17^^^^^12^22^final int mQuad2;^[CLASS] Name2   [VARIABLES] 
[P5_Replace_Variable]^super ( name, quad2 ) ;^21^^^^^19^24^super ( name, hash ) ;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P5_Replace_Variable]^super (  hash ) ;^21^^^^^19^24^super ( name, hash ) ;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P5_Replace_Variable]^super ( name ) ;^21^^^^^19^24^super ( name, hash ) ;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P5_Replace_Variable]^super ( hash, name ) ;^21^^^^^19^24^super ( name, hash ) ;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P14_Delete_Statement]^^21^22^^^^19^24^super ( name, hash ) ; mQuad1 = quad1;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P5_Replace_Variable]^mQuad1 = quad2;^22^^^^^19^24^mQuad1 = quad1;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P11_Insert_Donor_Statement]^mQuad2 = quad2;mQuad1 = quad1;^22^^^^^19^24^mQuad1 = quad1;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P5_Replace_Variable]^mQuad2 = mQuad2;^23^^^^^19^24^mQuad2 = quad2;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P8_Replace_Mix]^mQuad2 =  quad1;^23^^^^^19^24^mQuad2 = quad2;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P11_Insert_Donor_Statement]^mQuad1 = quad1;mQuad2 = quad2;^23^^^^^19^24^mQuad2 = quad2;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[P3_Replace_Literal]^public boolean equals ( int quad )  { return true; }^27^^^^^22^32^public boolean equals ( int quad )  { return false; }^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P2_Replace_Operator]^return  ( quad1 == mQuad1 )  ||  ( quad2 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P2_Replace_Operator]^return  ( quad1 != mQuad1 )  &&  ( quad2 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P2_Replace_Operator]^return  ( quad1 == mQuad1 )  &&  ( quad2 < mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P5_Replace_Variable]^return  ( quad2 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P5_Replace_Variable]^return  ( quad1 == mQuad1 )  &&  ( quad1 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P5_Replace_Variable]^return  ( quad1 == quad1 )  &&  ( quad2 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P5_Replace_Variable]^return  ( quad1 == mQuad1 )  &&  ( quad2 == quad1 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P5_Replace_Variable]^return  ( quad2 == mQuad1 )  &&  ( quad1 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P5_Replace_Variable]^return  ( quad1 == quad2 )  &&  ( mQuad1 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P5_Replace_Variable]^return  ( quad1 == mQuad1 )  &&  ( mQuad2 == quad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P8_Replace_Mix]^return true ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[P2_Replace_Operator]^return  ( qlen == 2 || quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P2_Replace_Operator]^return  ( qlen != 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P2_Replace_Operator]^return  ( qlen == 2 && quads[0] > mQuad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P2_Replace_Operator]^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] < mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P3_Replace_Literal]^return  ( qlen == quad2 && quads[0] == mQuad1 && quads[1] == mQuadquad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P3_Replace_Literal]^return  ( qlen == 2 && quads[mQuad1] == mQuad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P3_Replace_Literal]^return  ( qlen == 2 && quads[0] == mQuadhash && quads[hash] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P5_Replace_Variable]^return  ( qlen == 2 && quads[0] == quad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P5_Replace_Variable]^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == quad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P5_Replace_Variable]^return  ( mQuad2 == 2 && quads[0] == mQuad1 && quads[1] == qlen ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P5_Replace_Variable]^return  ( qlen == 2 && mQuad1[0] == quads && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P5_Replace_Variable]^return  ( qlen == 2 && quads[0] == mQuad2 && quads[1] == mQuad1 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[P8_Replace_Mix]^return  ( qlen ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
