[P3_Replace_Literal]^public final static String VERSION_FILE = "VERSION.txtVER";^30^^^^^25^35^public final static String VERSION_FILE = "VERSION.txt";^[CLASS] VersionUtil   [VARIABLES] 
[P8_Replace_Mix]^private final static String VERSION_FILE = "VERSION.txt";^30^^^^^25^35^public final static String VERSION_FILE = "VERSION.txt";^[CLASS] VersionUtil   [VARIABLES] 
[P1_Replace_Type]^public final static char PACKAGE_VERSION_CLASS_NAME = "PackageVersion";^31^^^^^26^36^public final static String PACKAGE_VERSION_CLASS_NAME = "PackageVersion";^[CLASS] VersionUtil   [VARIABLES] 
[P3_Replace_Literal]^public final static String PACKAGE_VERSION_CLASS_NAME = "Packa";^31^^^^^26^36^public final static String PACKAGE_VERSION_CLASS_NAME = "PackageVersion";^[CLASS] VersionUtil   [VARIABLES] 
[P3_Replace_Literal]^private final static Pattern VERSION_SEPARATOR = Pattern.compile ( ";:-_./;:]" ) ;^34^^^^^29^39^private final static Pattern VERSION_SEPARATOR = Pattern.compile ( "[-_./;:]" ) ;^[CLASS] VersionUtil   [VARIABLES] 
[P7_Replace_Invocation]^private final static Pattern VERSION_SEPARATOR = Pattern.split ( "[-_./;:]" ) ;^34^^^^^29^39^private final static Pattern VERSION_SEPARATOR = Pattern.compile ( "[-_./;:]" ) ;^[CLASS] VersionUtil   [VARIABLES] 
[P8_Replace_Mix]^private final  Pattern VERSION_SEPARATOR = Pattern.compile ( "[-_./;:]" ) ;^34^^^^^29^39^private final static Pattern VERSION_SEPARATOR = Pattern.compile ( "[-_./;:]" ) ;^[CLASS] VersionUtil   [VARIABLES] 
[P8_Replace_Mix]^v ;^51^^^^^44^59^v = VersionUtil.versionFor ( getClass (  )  ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P14_Delete_Statement]^^51^^^^^44^59^v = VersionUtil.versionFor ( getClass (  )  ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P8_Replace_Mix]^v  =  v ;^51^^^^^44^59^v = VersionUtil.versionFor ( getClass (  )  ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P2_Replace_Operator]^System.err.println ( "ERROR: Failed to load Version information for bundle   instanceof   ( via "+getClass (  ) .getName (  ) +" ) ." ) ;^53^^^^^44^59^System.err.println ( "ERROR: Failed to load Version information for bundle  ( via "+getClass (  ) .getName (  ) +" ) ." ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P2_Replace_Operator]^System.err.println ( "ERROR: Failed to load Version information for bundle  ==  ( via "+getClass (  ) .getName (  ) +" ) ." ) ;^53^^^^^44^59^System.err.println ( "ERROR: Failed to load Version information for bundle  ( via "+getClass (  ) .getName (  ) +" ) ." ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P7_Replace_Invocation]^System.err.println ( "ERROR: Failed to load Version information for bundle  ( via "+getClass (  ) .getPackage (  ) +" ) ." ) ;^53^^^^^44^59^System.err.println ( "ERROR: Failed to load Version information for bundle  ( via "+getClass (  ) .getName (  ) +" ) ." ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P14_Delete_Statement]^^53^54^^^^44^59^System.err.println ( "ERROR: Failed to load Version information for bundle  ( via "+getClass (  ) .getName (  ) +" ) ." ) ; }^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P2_Replace_Operator]^if  ( v != null )  {^55^^^^^44^59^if  ( v == null )  {^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P5_Replace_Variable]^if  ( _version == null )  {^55^^^^^44^59^if  ( v == null )  {^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P8_Replace_Mix]^if  ( v == false )  {^55^^^^^44^59^if  ( v == null )  {^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P9_Replace_Statement]^if  ( versionStr == null )  {^55^^^^^44^59^if  ( v == null )  {^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P9_Replace_Statement]^if  ( version != null )  {^55^^^^^44^59^if  ( v == null )  {^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P15_Unwrap_Block]^v = com.fasterxml.jackson.core.Version.unknownVersion();^55^56^57^^^44^59^if  ( v == null )  { v = Version.unknownVersion (  ) ; }^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P16_Remove_Block]^^55^56^57^^^44^59^if  ( v == null )  { v = Version.unknownVersion (  ) ; }^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P8_Replace_Mix]^v  =  v ;^56^^^^^44^59^v = Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P11_Insert_Donor_Statement]^v = versionInfoClass.newInstance (  ) ;v = Version.unknownVersion (  ) ;^56^^^^^44^59^v = Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P14_Delete_Statement]^^56^^^^^44^59^v = Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P11_Insert_Donor_Statement]^return  (  ( Versioned )  v ) .version (  ) ;v = Version.unknownVersion (  ) ;^56^^^^^44^59^v = Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P11_Insert_Donor_Statement]^return Version.unknownVersion (  ) ;v = Version.unknownVersion (  ) ;^56^^^^^44^59^v = Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P5_Replace_Variable]^_version = _version;^58^^^^^44^59^_version = v;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P8_Replace_Mix]^_version =  null;^58^^^^^44^59^_version = v;^[CLASS] VersionUtil  [METHOD] <init> [RETURN_TYPE] VersionUtil()   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  Exception  e  
[P5_Replace_Variable]^public Version version (  )  { return v; }^61^^^^^56^66^public Version version (  )  { return _version; }^[CLASS] VersionUtil  [METHOD] version [RETURN_TYPE] Version   [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  boolean  Version  _version  v  
[P7_Replace_Invocation]^Version packageVersion = versionFor ( cls ) ;^84^^^^^83^113^Version packageVersion = packageVersionFor ( cls ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P14_Delete_Statement]^^84^^^^^83^113^Version packageVersion = packageVersionFor ( cls ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P2_Replace_Operator]^if  ( packageVersion == null )  {^85^^^^^83^113^if  ( packageVersion != null )  {^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P5_Replace_Variable]^if  ( v != null )  {^85^^^^^83^113^if  ( packageVersion != null )  {^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P8_Replace_Mix]^if  ( packageVersion != true )  {^85^^^^^83^113^if  ( packageVersion != null )  {^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P9_Replace_Statement]^if  ( versionStr == null )  {^85^^^^^83^113^if  ( packageVersion != null )  {^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P9_Replace_Statement]^if  ( version != null )  {^85^^^^^83^113^if  ( packageVersion != null )  {^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P9_Replace_Statement]^if  ( pomPoperties != null )  {^85^^^^^83^113^if  ( packageVersion != null )  {^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P15_Unwrap_Block]^return packageVersion;^85^86^87^^^83^113^if  ( packageVersion != null )  { return packageVersion; }^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P16_Remove_Block]^^85^86^87^^^83^113^if  ( packageVersion != null )  { return packageVersion; }^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P13_Insert_Block]^if  ( versionStr == null )  {     return null; }^85^^^^^83^113^[Delete]^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P5_Replace_Variable]^return v;^86^^^^^83^113^return packageVersion;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P5_Replace_Variable]^final InputStream in = cls.getResourceAsStream ( PACKAGE_VERSION_CLASS_NAME ) ;^89^^^^^83^113^final InputStream in = cls.getResourceAsStream ( VERSION_FILE ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P5_Replace_Variable]^final InputStream in = VERSION_FILE.getResourceAsStream ( cls ) ;^89^^^^^83^113^final InputStream in = cls.getResourceAsStream ( VERSION_FILE ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P7_Replace_Invocation]^final InputStream in = cls .getPackage (  )  ;^89^^^^^83^113^final InputStream in = cls.getResourceAsStream ( VERSION_FILE ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P5_Replace_Variable]^final InputStream in = 1.getResourceAsStream ( VERSION_FILE ) ;^89^^^^^83^113^final InputStream in = cls.getResourceAsStream ( VERSION_FILE ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P8_Replace_Mix]^final InputStream in = null.getResourceAsStream ( VERSION_FILE ) ;^89^^^^^83^113^final InputStream in = cls.getResourceAsStream ( VERSION_FILE ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P14_Delete_Statement]^^89^^^^^83^113^final InputStream in = cls.getResourceAsStream ( VERSION_FILE ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P2_Replace_Operator]^if  ( in != null ) return Version.unknownVersion (  ) ;^91^92^^^^83^113^if  ( in == null ) return Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P8_Replace_Mix]^if  ( in == false ) return Version.unknownVersion (  ) ;^91^92^^^^83^113^if  ( in == null ) return Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P13_Insert_Block]^if  ( v == null )  {     v = unknownVersion (  ) ; }^91^^^^^83^113^[Delete]^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P14_Delete_Statement]^^92^^^^^83^113^return Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P7_Replace_Invocation]^return parseVersion ( reader ) ;^97^^^^^83^113^return doReadVersion ( reader ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P14_Delete_Statement]^^97^^^^^83^113^return doReadVersion ( reader ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P7_Replace_Invocation]^reader .InputStreamReader ( in , PACKAGE_VERSION_CLASS_NAME )  ;^100^^^^^83^113^reader.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P14_Delete_Statement]^^100^^^^^83^113^reader.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P11_Insert_Donor_Statement]^in.close (  ) ;reader.close (  ) ;^100^^^^^83^113^reader.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P11_Insert_Donor_Statement]^br.close (  ) ;reader.close (  ) ;^100^^^^^83^113^reader.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P11_Insert_Donor_Statement]^pomPoperties.close (  ) ;reader.close (  ) ;^100^^^^^83^113^reader.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P3_Replace_Literal]^InputStreamReader reader = new InputStreamReader ( in, "UTF-8UT" ) ;^95^^^^^83^113^InputStreamReader reader = new InputStreamReader ( in, "UTF-8" ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P3_Replace_Literal]^InputStreamReader reader = new InputStreamReader ( in, "UTF-8T" ) ;^95^^^^^83^113^InputStreamReader reader = new InputStreamReader ( in, "UTF-8" ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P8_Replace_Mix]^in .InputStreamReader ( in , PACKAGE_VERSION_CLASS_NAME )  ;^108^^^^^83^113^in.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P14_Delete_Statement]^^108^^^^^83^113^in.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P11_Insert_Donor_Statement]^br.close (  ) ;in.close (  ) ;^108^^^^^83^113^in.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P11_Insert_Donor_Statement]^reader.close (  ) ;in.close (  ) ;^108^^^^^83^113^in.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P11_Insert_Donor_Statement]^pomPoperties.close (  ) ;in.close (  ) ;^108^^^^^83^113^in.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P3_Replace_Literal]^InputStreamReader reader = new InputStreamReader ( in, "UTTF-8" ) ;^95^^^^^83^113^InputStreamReader reader = new InputStreamReader ( in, "UTF-8" ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P3_Replace_Literal]^InputStreamReader reader = new InputStreamReader ( in, "U" ) ;^95^^^^^83^113^InputStreamReader reader = new InputStreamReader ( in, "UTF-8" ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P8_Replace_Mix]^return true;^110^^^^^83^113^throw new RuntimeException  (" ")  ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P5_Replace_Variable]^} catch  ( IOException ignored )  {^109^^^^^83^113^} catch  ( IOException e )  {^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P8_Replace_Mix]^reader .InputStreamReader ( in , VERSION_FILE )  ;^100^^^^^83^113^reader.close (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P14_Delete_Statement]^^105^^^^^83^113^return Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] versionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  InputStreamReader  reader  Version  _version  packageVersion  v  InputStream  in  UnsupportedEncodingException  e  Class  cls  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  IOException  e  ignored  
[P12_Insert_Condition]^if  ( versionInfoClass == null )  { Class<?> versionInfoClass = null; }^124^^^^^109^139^Class<?> versionInfoClass = null;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P3_Replace_Literal]^versionInfoClass = Class.forName ( versionInfoClassName, false, cls.getClassLoader (  )  ) ;^132^^^^^117^147^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^versionInfoClass = Class.forName ( VERSION_FILE, true, cls.getClassLoader (  )  ) ;^132^^^^^117^147^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^versionInfoClass = Class.forName (  true, cls.getClassLoader (  )  ) ;^132^^^^^117^147^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^versionInfoClass = Class.forName ( versionInfoClassName, true.getClassLoader (  )  ) ;^132^^^^^117^147^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^versionInfoClass = Class.forName ( cls, true, versionInfoClassName.getClassLoader (  )  ) ;^132^^^^^117^147^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^versionInfoClass = Class .getName (  )  ;^132^^^^^117^147^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getResourceAsStream (  )  ) ;^132^^^^^117^147^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^Package p = cls.getResourceAsStream (  ) ;^126^^^^^111^141^Package p = cls.getPackage (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P1_Replace_Type]^char versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )^127^128^129^130^^112^142^String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P3_Replace_Literal]^String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "" ) .append ( PACKAGE_VERSION_CLASS_NAME )^127^128^129^130^^112^142^String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( VERSION_FILE )^127^128^129^130^^112^142^String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^String versionInfoClassName = new StringBuilder ( PACKAGE_VERSION_CLASS_NAME.getName (  )  ) .append ( "." ) .append ( p )^127^128^129^130^^112^142^String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^String versionInfoClassName = new StringBuilder ( p.getName (  )  )  .StringBuilder ( versionInfoClassName )^127^128^129^130^^112^142^String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^Package p = 1.getPackage (  ) ;^126^^^^^111^141^Package p = cls.getPackage (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P14_Delete_Statement]^^126^^^^^111^141^Package p = cls.getPackage (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P3_Replace_Literal]^new StringBuilder ( p.getName (  )  ) .append ( "" ) .append ( PACKAGE_VERSION_CLASS_NAME ) .toString (  ) ;^128^129^130^131^^113^143^new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME ) .toString (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( versionInfoClassName ) .toString (  ) ;^128^129^130^131^^113^143^new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME ) .toString (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^new StringBuilder ( PACKAGE_VERSION_CLASS_NAME.getName (  )  ) .append ( "." ) .append ( p ) .toString (  ) ;^128^129^130^131^^113^143^new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME ) .toString (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )  .StringBuilder ( versionInfoClassName )  ;^128^129^130^131^^113^143^new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME ) .toString (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P8_Replace_Mix]^new StringBuilder ( p.getName (  )  )  .StringBuilder ( PACKAGE_VERSION_CLASS_NAME )^128^129^130^131^^113^143^new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME ) .toString (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P8_Replace_Mix]^versionInfoClass = Class.forName ( versionInfoClassName, true, cls .getPackage (  )   ) ;^132^^^^^117^147^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P14_Delete_Statement]^^132^133^134^135^^117^147^versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ; } catch  ( Exception e )  { return null; }^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P8_Replace_Mix]^return this;^134^^^^^119^149^return null;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P5_Replace_Variable]^Package p = this.getPackage (  ) ;^126^^^^^111^141^Package p = cls.getPackage (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^String versionInfoClassName = new StringBuilder ( p.getName (  )  )  .StringBuilder ( PACKAGE_VERSION_CLASS_NAME )^127^128^129^130^^112^142^String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^if  ( versionInfoClass != null )  {^136^^^^^121^151^if  ( versionInfoClass == null )  {^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P8_Replace_Mix]^if  ( versionInfoClass == this )  {^136^^^^^121^151^if  ( versionInfoClass == null )  {^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P9_Replace_Statement]^if  ( versionStr == null )  {^136^^^^^121^151^if  ( versionInfoClass == null )  {^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P9_Replace_Statement]^if  ( version != null )  {^136^^^^^121^151^if  ( versionInfoClass == null )  {^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P15_Unwrap_Block]^return null;^136^137^138^^^121^151^if  ( versionInfoClass == null )  { return null; }^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P16_Remove_Block]^^136^137^138^^^121^151^if  ( versionInfoClass == null )  { return null; }^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P13_Insert_Block]^if  ( versionStr == null )  {     return null; }^136^^^^^121^151^[Delete]^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P13_Insert_Block]^if  (  ( versionStr.length (  )  )  == 0 )  {     return null; }^136^^^^^121^151^[Delete]^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P8_Replace_Mix]^return true;^137^^^^^122^152^return null;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P8_Replace_Mix]^return this;^137^^^^^122^152^return null;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^v = versionInfoClass.getResourceAsStream (  ) ;^142^^^^^127^157^v = versionInfoClass.newInstance (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P8_Replace_Mix]^v =  null.newInstance (  ) ;^142^^^^^127^157^v = versionInfoClass.newInstance (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P11_Insert_Donor_Statement]^v = Version.unknownVersion (  ) ;v = versionInfoClass.newInstance (  ) ;^142^^^^^127^157^v = versionInfoClass.newInstance (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P12_Insert_Condition]^if  ( versionInfoClass == null )  { v = versionInfoClass.newInstance (  ) ; }^142^^^^^127^157^v = versionInfoClass.newInstance (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P14_Delete_Statement]^^142^^^^^127^157^v = versionInfoClass.newInstance (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException   instanceof   (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  >  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  >>  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P3_Replace_Literal]^throw new IllegalArgumentException  (" ") +" to find version information, problem: sion information, problem"+e.getMessage (  ) , e ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P4_Replace_Constructor]^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  )  ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  <  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  !=  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P3_Replace_Literal]^throw new IllegalArgumentException  (" ") +"rmatito find version information, problem: "+e.getMessage (  ) , e ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P14_Delete_Statement]^^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P11_Insert_Donor_Statement]^+" to find version information, problem: "+e.getMessage (  ) , e ) ;throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^146^147^^^^131^161^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P14_Delete_Statement]^^147^148^^^^132^162^+" to find version information, problem: "+e.getMessage (  ) , e ) ; }^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;+" to find version information, problem: "+e.getMessage (  ) , e ) ;^147^^^^^132^162^+" to find version information, problem: "+e.getMessage (  ) , e ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^if  ( ! ( v  >  Versioned )  )  {^149^^^^^134^164^if  ( ! ( v instanceof Versioned )  )  {^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P6_Replace_Expression]^if  (  ( "Bad version class " +  ( versionInfoClass.getName (  )  )  )  + ": does not implement " + getName (  ) )  {^149^^^^^134^164^if  ( ! ( v instanceof Versioned )  )  {^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P6_Replace_Expression]^if  ( "Bad version class " +  ( versionInfoClass.getName (  )  )  + ": does not implement " )  {^149^^^^^134^164^if  ( ! ( v instanceof Versioned )  )  {^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P6_Replace_Expression]^if  ( "Bad version class " + versionInfoClass.getName (  ) )  {^149^^^^^134^164^if  ( ! ( v instanceof Versioned )  )  {^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(((("Bad version class " + (versionInfoClass.getName())) + ": does not implement ") + (com.fasterxml.jackson.core.Versioned.class.getName())));^149^150^151^152^^134^164^if  ( ! ( v instanceof Versioned )  )  { throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ; }^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P16_Remove_Block]^^149^150^151^152^^134^164^if  ( ! ( v instanceof Versioned )  )  { throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ; }^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  >=  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException   instanceof   (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P3_Replace_Literal]^throw new IllegalArgumentException  (" ") +"do"+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getResourceAsStream (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getPackage (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P13_Insert_Block]^if  ( ! ( v instanceof Versioned )  )  {     throw new IllegalArgumentException (  (  (  ( "Bad version class " +  ( versionInfoClass.getName (  )  )  )  + ": does not implement " )  +  ( getName (  )  )  )  ) ; }^150^^^^^135^165^[Delete]^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  ==  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P3_Replace_Literal]^throw new IllegalArgumentException  (" ") +": does not implement t implem"+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ; ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P14_Delete_Statement]^^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P11_Insert_Donor_Statement]^+": does not implement "+Versioned.class.getName (  )  ) ;throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^+": does not implement "+Versioned.class.getPackage (  )  ) ;^151^^^^^136^166^+": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P14_Delete_Statement]^^151^^^^^136^166^+": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;+": does not implement "+Versioned.class.getName (  )  ) ;^151^^^^^136^166^+": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  |  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  >  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  ||  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P3_Replace_Literal]^throw new IllegalArgumentException  (" ") +": does not implement  i"+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  &  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P2_Replace_Operator]^throw new IllegalArgumentException  !=  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P3_Replace_Literal]^throw new IllegalArgumentException  (" ") +": does not implement oes not"+Versioned.class.getName (  )  ) ;^150^151^^^^135^165^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P7_Replace_Invocation]^return  (  ( Versioned )  v )  .version (  )  ;^153^^^^^138^168^return  (  ( Versioned )  v ) .version (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P14_Delete_Statement]^^153^^^^^138^168^return  (  ( Versioned )  v ) .version (  ) ;^[CLASS] VersionUtil  [METHOD] packageVersionFor [RETURN_TYPE] Version   Class<?> cls [VARIABLES] Pattern  VERSION_SEPARATOR  RuntimeException  e  boolean  Version  _version  packageVersion  v  Class  cls  versionInfoClass  Object  v  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  Package  p  Exception  e  
[P1_Replace_Type]^char version = null, group = null, artifact = null;^158^^^^^157^182^String version = null, group = null, artifact = null;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P2_Replace_Operator]^if  ( version == null )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^if  ( versionInfoClassName != null )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P6_Replace_Expression]^if  ( group != null )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^if  ( version != this )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P9_Replace_Statement]^if  ( versionInfoClass == null )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P9_Replace_Statement]^if  ( versionStr == null )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P9_Replace_Statement]^if  ( pomPoperties != null )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P9_Replace_Statement]^if  ( v == null )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P9_Replace_Statement]^if  ( packageVersion != null )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P15_Unwrap_Block]^group = br.readLine(); if (group != null)    artifact = br.readLine();;^163^164^165^166^167^157^182^if  ( version != null )  { group = br.readLine (  ) ; if  ( group != null ) artifact = br.readLine (  ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P16_Remove_Block]^^163^164^165^166^167^157^182^if  ( version != null )  { group = br.readLine (  ) ; if  ( group != null ) artifact = br.readLine (  ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P2_Replace_Operator]^if  ( group == null ) artifact = br.readLine (  ) ;^165^166^^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^if  ( versionInfoClassName != null ) artifact = br.readLine (  ) ;^165^166^^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^if  ( br != null ) artifact = group.readLine (  ) ;^165^166^^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^if  ( group != null ) artifact = br.BufferedReader (  ) ;^165^166^^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^if  ( group != true ) artifact = br.readLine (  ) ;^165^166^^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P15_Unwrap_Block]^artifact = br.readLine();^165^166^167^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P16_Remove_Block]^^165^166^167^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^artifact = br.BufferedReader (  ) ;^166^^^^^157^182^artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^artifact =  null.readLine (  ) ;^166^^^^^157^182^artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^group = br.readLine (  ) ;artifact = br.readLine (  ) ;^166^^^^^157^182^artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^artifact = artifact.trim (  ) ;artifact = br.readLine (  ) ;^166^^^^^157^182^artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^version = br.readLine (  ) ;artifact = br.readLine (  ) ;^166^^^^^157^182^artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P14_Delete_Statement]^^166^167^^^^157^182^artifact = br.readLine (  ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^group = br.BufferedReader (  ) ;^164^^^^^157^182^group = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^group = br .close (  )  ;^164^^^^^157^182^group = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^group =  null.readLine (  ) ;^164^^^^^157^182^group = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^artifact = br.readLine (  ) ;group = br.readLine (  ) ;^164^^^^^157^182^group = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^version = br.readLine (  ) ;group = br.readLine (  ) ;^164^^^^^157^182^group = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^group = group.trim (  ) ;group = br.readLine (  ) ;^164^^^^^157^182^group = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P14_Delete_Statement]^^164^^^^^157^182^group = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^if  ( group != null ) artifact = br .close (  )  ;^165^166^^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^if  ( group != this ) artifact = br.readLine (  ) ;^165^166^^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^artifact = br .close (  )  ;^166^^^^^157^182^artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^if  ( versionInfoClassName != true )  {^163^^^^^157^182^if  ( version != null )  {^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^if  ( group != true ) artifact = br.BufferedReader (  ) ;^165^166^^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^if  ( version != null ) artifact = br.readLine (  ) ;^165^166^^^^157^182^if  ( group != null ) artifact = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^version = br.BufferedReader (  ) ;^162^^^^^157^182^version = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^version =  null.readLine (  ) ;^162^^^^^157^182^version = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^group = br.readLine (  ) ;version = br.readLine (  ) ;^162^^^^^157^182^version = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^versionStr = versionStr.trim (  ) ;version = br.readLine (  ) ;^162^^^^^157^182^version = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^artifact = br.readLine (  ) ;version = br.readLine (  ) ;^162^^^^^157^182^version = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^version = br .close (  )  ;^162^^^^^157^182^version = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P14_Delete_Statement]^^162^^^^^157^182^version = br.readLine (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^br.BufferedReader (  ) ;^171^^^^^157^182^br.close (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P14_Delete_Statement]^^171^^^^^157^182^br.close (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^in.close (  ) ;br.close (  ) ;^171^^^^^157^182^br.close (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^reader.close (  ) ;br.close (  ) ;^171^^^^^157^182^br.close (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^pomPoperties.close (  ) ;br.close (  ) ;^171^^^^^157^182^br.close (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P2_Replace_Operator]^if  ( group == null ) group = group.trim (  ) ;^177^178^^^^157^182^if  ( group != null ) group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^if  ( version != null ) group = group.trim (  ) ;^177^178^^^^157^182^if  ( group != null ) group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^if  ( group != null ) group = group.charAt (  ) ;^177^178^^^^157^182^if  ( group != null ) group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^if  ( group != true ) group = group.trim (  ) ;^177^178^^^^157^182^if  ( group != null ) group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P15_Unwrap_Block]^group = group.trim();^177^178^179^180^181^157^182^if  ( group != null ) group = group.trim (  ) ; if  ( artifact != null ) artifact = artifact.trim (  ) ; return parseVersion ( version, group, artifact ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P16_Remove_Block]^^177^178^179^180^181^157^182^if  ( group != null ) group = group.trim (  ) ; if  ( artifact != null ) artifact = artifact.trim (  ) ; return parseVersion ( version, group, artifact ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^group = version.trim (  ) ;^178^^^^^157^182^group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^group = group.charAt (  ) ;^178^^^^^157^182^group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^group =  versionInfoClassName.trim (  ) ;^178^^^^^157^182^group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^group = br.readLine (  ) ;group = group.trim (  ) ;^178^^^^^157^182^group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^versionStr = versionStr.trim (  ) ;group = group.trim (  ) ;^178^^^^^157^182^group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^artifact = artifact.trim (  ) ;group = group.trim (  ) ;^178^^^^^157^182^group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^group = group .toString (  )  ;^178^^^^^157^182^group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P14_Delete_Statement]^^178^^^^^157^182^group = group.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P2_Replace_Operator]^if  ( artifact == null ) artifact = artifact.trim (  ) ;^179^180^^^^157^182^if  ( artifact != null ) artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^if  ( versionInfoClassName != null ) artifact = artifact.trim (  ) ;^179^180^^^^157^182^if  ( artifact != null ) artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^if  ( artifact != null ) artifact = artifact.charAt (  ) ;^179^180^^^^157^182^if  ( artifact != null ) artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^if  ( artifact != null ) artifact = artifact .toString (  )  ;^179^180^^^^157^182^if  ( artifact != null ) artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^if  ( artifact != true ) artifact = artifact.trim (  ) ;^179^180^^^^157^182^if  ( artifact != null ) artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P15_Unwrap_Block]^artifact = artifact.trim();^179^180^181^182^^157^182^if  ( artifact != null ) artifact = artifact.trim (  ) ; return parseVersion ( version, group, artifact ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P16_Remove_Block]^^179^180^181^182^^157^182^if  ( artifact != null ) artifact = artifact.trim (  ) ; return parseVersion ( version, group, artifact ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^artifact = versionInfoClassName.trim (  ) ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^artifact = artifact.charAt (  ) ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^versionStr = versionStr.trim (  ) ;artifact = artifact.trim (  ) ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^partStr = partStr.toString (  ) ;artifact = artifact.trim (  ) ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^artifact = br.readLine (  ) ;artifact = artifact.trim (  ) ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P11_Insert_Donor_Statement]^group = group.trim (  ) ;artifact = artifact.trim (  ) ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^artifact = version.trim (  ) ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^artifact = version.charAt (  ) ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P14_Delete_Statement]^^180^181^182^^^157^182^artifact = artifact.trim (  ) ; return parseVersion ( version, group, artifact ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^artifact = artifact .toString (  )  ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P8_Replace_Mix]^artifact =  null.trim (  ) ;^180^^^^^157^182^artifact = artifact.trim (  ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^return parseVersion ( versionInfoClassName, group, artifact ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^return parseVersion ( version, versionInfoClassName, artifact ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^return parseVersion ( version, group, versionInfoClassName ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^return parseVersion (  group, artifact ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^return parseVersion ( version,  artifact ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^return parseVersion ( version, group ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^return parseVersion ( artifact, group, version ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^return parseVersion ( group, version, artifact ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P5_Replace_Variable]^return parseVersion ( version, artifact, group ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P7_Replace_Invocation]^return mavenVersionFor ( version, group, artifact ) ;^181^^^^^157^182^return parseVersion ( version, group, artifact ) ;^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P14_Delete_Statement]^^181^182^^^^157^182^return parseVersion ( version, group, artifact ) ; }^[CLASS] VersionUtil  [METHOD] doReadVersion [RETURN_TYPE] Version   Reader reader [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  BufferedReader  br  Reader  reader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  IOException  ignored  
[P2_Replace_Operator]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/"  >=  groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/-I" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.\\", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties.p" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + pomPropertiesGroupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + version + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^InputStream pomPoperties = artifactId.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + classLoader + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^InputStream pomPoperties = groupId.getResourceAsStream ( "META-INF/maven/" + classLoader.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + artifactId.replaceAll ( "\\.", "/" ) + "/" + groupId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P7_Replace_Invocation]^InputStream pomPoperties = classLoader .getPackage (  )  ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P8_Replace_Mix]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + pomPropertiesArtifactId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P2_Replace_Operator]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/"  <  groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^InputStream pomPoperties = classLoader.getResourceAsStream ( "M" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "" ) + "" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.propertiespom." ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + version.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + versionStr + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P14_Delete_Statement]^^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + versionStr.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P8_Replace_Mix]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + versionInfoClassName.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^196^197^^^^195^217^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P2_Replace_Operator]^if  ( pomPoperties == null )  {^198^^^^^195^217^if  ( pomPoperties != null )  {^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P8_Replace_Mix]^if  ( pomPoperties != true )  {^198^^^^^195^217^if  ( pomPoperties != null )  {^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P9_Replace_Statement]^if  ( version != null )  {^198^^^^^195^217^if  ( pomPoperties != null )  {^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P9_Replace_Statement]^if  ( packageVersion != null )  {^198^^^^^195^217^if  ( pomPoperties != null )  {^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( groupId, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr, versionStr, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesGroupId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion (  pomPropertiesGroupId, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr,  pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr, pomPropertiesGroupId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( pomPropertiesGroupId, versionStr, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( pomPropertiesArtifactId, pomPropertiesGroupId, versionStr ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P7_Replace_Invocation]^return mavenVersionFor ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P8_Replace_Mix]^return mavenVersionFor ( versionStr, pomPropertiesGroupId, groupId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P1_Replace_Type]^char versionStr = props.getProperty ( "version" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String versionStr = props.getProperty ( "veersion" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P11_Insert_Donor_Statement]^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;String versionStr = props.getProperty ( "version" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P11_Insert_Donor_Statement]^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;String versionStr = props.getProperty ( "version" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P1_Replace_Type]^char pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesArtifactId = props.getProperty ( "artifactIdartifactI" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P11_Insert_Donor_Statement]^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P11_Insert_Donor_Statement]^String versionStr = props.getProperty ( "version" ) ;String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P1_Replace_Type]^char pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesGroupId = props.getProperty ( "grouproupId" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P8_Replace_Mix]^String pomPropertiesGroupId = props .Properties (  )  ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P11_Insert_Donor_Statement]^String versionStr = props.getProperty ( "version" ) ;String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P11_Insert_Donor_Statement]^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P8_Replace_Mix]^props .Properties (  )  ;^201^^^^^195^217^props.load ( pomPoperties ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P14_Delete_Statement]^^201^^^^^195^217^props.load ( pomPoperties ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P14_Delete_Statement]^^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesArtifactId = props.getProperty ( "artifactIdc" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesGroupId = props.getProperty ( "pIroupId" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P14_Delete_Statement]^^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionInfoClassName, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr, version, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr, pomPropertiesGroupId, groupId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P8_Replace_Mix]^return parseVersion ( versionStr, pomPropertiesGroupId, versionInfoClassName ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P14_Delete_Statement]^^210^^^^^195^217^pomPoperties.close (  ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P11_Insert_Donor_Statement]^in.close (  ) ;pomPoperties.close (  ) ;^210^^^^^195^217^pomPoperties.close (  ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P11_Insert_Donor_Statement]^br.close (  ) ;pomPoperties.close (  ) ;^210^^^^^195^217^pomPoperties.close (  ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P11_Insert_Donor_Statement]^reader.close (  ) ;pomPoperties.close (  ) ;^210^^^^^195^217^pomPoperties.close (  ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( pomPropertiesGroupId, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr, groupId, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr, pomPropertiesArtifactId, pomPropertiesGroupId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String versionStr = props.getProperty ( "versionv" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P8_Replace_Mix]^String versionStr = props .Properties (  )  ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesArtifactId = props.getProperty ( "artif" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesGroupId = props.getProperty ( "grouroupId" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String versionStr = props.getProperty ( "versionersi" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P14_Delete_Statement]^^202^203^^^^195^217^String versionStr = props.getProperty ( "version" ) ; String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesArtifactId = props.getProperty ( "artifact" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P7_Replace_Invocation]^String pomPropertiesArtifactId = props .Properties (  )  ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesGroupId = props.getProperty ( "groupIdr" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr, pomPropertiesGroupId, version ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String versionStr = props.getProperty ( "eersion" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesArtifactId = props.getProperty ( "artifactIdartifa" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesGroupId = props.getProperty ( "g" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String versionStr = props.getProperty ( "versionsi" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesArtifactId = props.getProperty ( "artifactIdar" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesGroupId = props.getProperty ( "groupIdg" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( versionStr, versionInfoClassName, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( version, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^205^^^^^195^217^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String versionStr = props.getProperty ( "versionsio" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesArtifactId = props.getProperty ( "art" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesGroupId = props.getProperty ( "rouroupId" ) ;^204^^^^^195^217^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String versionStr = props.getProperty ( "versiersion" ) ;^202^^^^^195^217^String versionStr = props.getProperty ( "version" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P3_Replace_Literal]^String pomPropertiesArtifactId = props.getProperty ( "artirtifactId" ) ;^203^^^^^195^217^String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P14_Delete_Statement]^^216^^^^^195^217^return Version.unknownVersion (  ) ;^[CLASS] VersionUtil  [METHOD] mavenVersionFor [RETURN_TYPE] Version   ClassLoader classLoader String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  boolean  Version  _version  packageVersion  v  InputStream  pomPoperties  ClassLoader  classLoader  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  IOException  e  Properties  props  
[P5_Replace_Variable]^return parseVersion ( groupId, null, null ) ;^226^^^^^225^227^return parseVersion ( versionStr, null, null ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  
[P7_Replace_Invocation]^return mavenVersionFor ( versionStr, null, null ) ;^226^^^^^225^227^return parseVersion ( versionStr, null, null ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  
[P8_Replace_Mix]^return mavenVersionFor ( versionStr, true, true ) ;^226^^^^^225^227^return parseVersion ( versionStr, null, null ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  
[P5_Replace_Variable]^return parseVersion ( versionInfoClassName, null, null ) ;^226^^^^^225^227^return parseVersion ( versionStr, null, null ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  
[P8_Replace_Mix]^return parseVersion ( pomPropertiesArtifactId, null, null ) ;^226^^^^^225^227^return parseVersion ( versionStr, null, null ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  
[P14_Delete_Statement]^^226^^^^^225^227^return parseVersion ( versionStr, null, null ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  
[P2_Replace_Operator]^if  ( versionStr != null )  {^231^^^^^229^246^if  ( versionStr == null )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^if  ( snapshot == null )  {^231^^^^^229^246^if  ( versionStr == null )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P8_Replace_Mix]^if  ( pomPropertiesArtifactId == false )  {^231^^^^^229^246^if  ( versionStr == null )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P9_Replace_Statement]^if  ( versionInfoClass == null )  {^231^^^^^229^246^if  ( versionStr == null )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P9_Replace_Statement]^if  ( version != null )  {^231^^^^^229^246^if  ( versionStr == null )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P9_Replace_Statement]^if  ( v == null )  {^231^^^^^229^246^if  ( versionStr == null )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P9_Replace_Statement]^if  ( packageVersion != null )  {^231^^^^^229^246^if  ( versionStr == null )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P15_Unwrap_Block]^return null;^231^232^233^^^229^246^if  ( versionStr == null )  { return null; }^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P16_Remove_Block]^^231^232^233^^^229^246^if  ( versionStr == null )  { return null; }^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P13_Insert_Block]^if  ( versionInfoClass == null )  {     return null; }^231^^^^^229^246^[Delete]^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P13_Insert_Block]^if  ( packageVersion != null )  {     return packageVersion; }^231^^^^^229^246^[Delete]^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P13_Insert_Block]^if  (  ( versionStr.length (  )  )  == 0 )  {     return null; }^231^^^^^229^246^[Delete]^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P8_Replace_Mix]^return this;^232^^^^^229^246^return null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P8_Replace_Mix]^return false;^232^^^^^229^246^return null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^versionStr = versionInfoClassName.trim (  ) ;^234^^^^^229^246^versionStr = versionStr.trim (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P7_Replace_Invocation]^versionStr = versionStr.charAt (  ) ;^234^^^^^229^246^versionStr = versionStr.trim (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^partStr = partStr.toString (  ) ;versionStr = versionStr.trim (  ) ;^234^^^^^229^246^versionStr = versionStr.trim (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^artifact = artifact.trim (  ) ;versionStr = versionStr.trim (  ) ;^234^^^^^229^246^versionStr = versionStr.trim (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^version = br.readLine (  ) ;versionStr = versionStr.trim (  ) ;^234^^^^^229^246^versionStr = versionStr.trim (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^group = group.trim (  ) ;versionStr = versionStr.trim (  ) ;^234^^^^^229^246^versionStr = versionStr.trim (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P14_Delete_Statement]^^234^^^^^229^246^versionStr = versionStr.trim (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P2_Replace_Operator]^if  ( versionStr.length (  )  <= 0 )  {^235^^^^^229^246^if  ( versionStr.length (  )  == 0 )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^if  ( versionStr.length (  )  == -1 )  {^235^^^^^229^246^if  ( versionStr.length (  )  == 0 )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^if  ( versionStr.length() + 1  == 0 )  {^235^^^^^229^246^if  ( versionStr.length (  )  == 0 )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^if  ( version.length (  )  == 0 )  {^235^^^^^229^246^if  ( versionStr.length (  )  == 0 )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P7_Replace_Invocation]^if  ( versionStr.charAt (  )  == 0 )  {^235^^^^^229^246^if  ( versionStr.length (  )  == 0 )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P8_Replace_Mix]^if  ( versionStr .replaceAll ( versionInfoClassName , artifactId )   == 0  )  {^235^^^^^229^246^if  ( versionStr.length (  )  == 0 )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P15_Unwrap_Block]^return null;^235^236^237^^^229^246^if  ( versionStr.length (  )  == 0 )  { return null; }^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P16_Remove_Block]^^235^236^237^^^229^246^if  ( versionStr.length (  )  == 0 )  { return null; }^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P13_Insert_Block]^if  ( versionInfoClass == null )  {     return null; }^235^^^^^229^246^[Delete]^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P13_Insert_Block]^if  ( versionStr == null )  {     return null; }^235^^^^^229^246^[Delete]^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P8_Replace_Mix]^return this;^236^^^^^229^246^return null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P8_Replace_Mix]^return true;^236^^^^^229^246^return null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^if  ( pomPropertiesArtifactId.length (  )  == 0 )  {^235^^^^^229^246^if  ( versionStr.length (  )  == 0 )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P8_Replace_Mix]^if  ( versionInfoClassName.charAt (  )  == 0 )  {^235^^^^^229^246^if  ( versionStr.length (  )  == 0 )  {^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^String[] parts = VERSION_SEPARATOR.split ( pomPropertiesArtifactId ) ;^238^^^^^229^246^String[] parts = VERSION_SEPARATOR.split ( versionStr ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^String[] parts = versionStr.split ( VERSION_SEPARATOR ) ;^238^^^^^229^246^String[] parts = VERSION_SEPARATOR.split ( versionStr ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^String[] parts = VERSION_SEPARATOR.split ( versionInfoClassName ) ;^238^^^^^229^246^String[] parts = VERSION_SEPARATOR.split ( versionStr ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P14_Delete_Statement]^^238^239^^^^229^246^String[] parts = VERSION_SEPARATOR.split ( versionStr ) ; int major = parseVersionPart ( parts[0] ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P1_Replace_Type]^short  major = parseVersionPart ( parts[0] ) ;^239^^^^^229^246^int major = parseVersionPart ( parts[0] ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^int major = parseVersionPart ( parts[-8] ) ;^239^^^^^229^246^int major = parseVersionPart ( parts[0] ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;int major = parseVersionPart ( parts[0] ) ;^239^^^^^229^246^int major = parseVersionPart ( parts[0] ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;int major = parseVersionPart ( parts[0] ) ;^239^^^^^229^246^int major = parseVersionPart ( parts[0] ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^int major = parseVersionPart ( parts[-1] ) ;^239^^^^^229^246^int major = parseVersionPart ( parts[0] ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P14_Delete_Statement]^^239^^^^^229^246^int major = parseVersionPart ( parts[0] ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P1_Replace_Type]^short  minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P2_Replace_Operator]^int minor =  ( parts.length >= 1 )  ? parseVersionPart ( parts[1] )  : 0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^int minor =  ( parts.length > patch )  ? parseVersionPart ( parts[patch] )  : 0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^int minor =  ( parts.length > major )  ? parseVersionPart ( parts[major] )  : 0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 6;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^int minor =  ( patch > 1 )  ? parseVersionPart ( parts[1] )  : 0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^int minor =  ( parts.length.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^int minor =  ( parts > 1 )  ? parseVersionPart ( parts.length[1] )  : 0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P6_Replace_Expression]^int minor  =  0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P6_Replace_Expression]^int minor  =  parseVersionPart ( parts[1] )  ;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^int major = parseVersionPart ( parts[0] ) ;int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P14_Delete_Statement]^^240^^^^^229^246^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P1_Replace_Type]^short  patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P2_Replace_Operator]^int patch =  ( parts.length >= 2 )  ? parseVersionPart ( parts[2] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^int patch =  ( parts.length > minor )  ? parseVersionPart ( parts[minor] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^int patch =  ( parts.length > 5 )  ? parseVersionPart ( parts[5] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^int patch =  ( minor > 2 )  ? parseVersionPart ( parts[2] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^int patch =  ( parts.length.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^int patch =  ( parts > 2 )  ? parseVersionPart ( parts.length[2] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P6_Replace_Expression]^int patch  =  0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P6_Replace_Expression]^int patch  =  parseVersionPart ( parts[2] )  ;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P11_Insert_Donor_Statement]^int major = parseVersionPart ( parts[0] ) ;int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^int patch =  ( parts.length > 7 )  ? parseVersionPart ( parts[7] )  : 0;^241^^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P14_Delete_Statement]^^241^242^^^^229^246^int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0; String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P1_Replace_Type]^char snapshot =  ( parts.length > 3 )  ? parts[3] : null;^242^^^^^229^246^String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P2_Replace_Operator]^String snapshot =  ( parts.length == 3 )  ? parts[3] : null;^242^^^^^229^246^String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P3_Replace_Literal]^String snapshot =  ( parts.length > minor )  ? parts[minor] : null;^242^^^^^229^246^String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^String snapshot =  ( patch > 3 )  ? parts[3] : null;^242^^^^^229^246^String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^String snapshot =  ( parts.length.length > 3 )  ? parts[3] : null;^242^^^^^229^246^String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^String snapshot =  ( parts > 3 )  ? parts.length[3] : null;^242^^^^^229^246^String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P6_Replace_Expression]^String snapshot  =  null;^242^^^^^229^246^String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P6_Replace_Expression]^String snapshot  =  parts[3] ;^242^^^^^229^246^String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P4_Replace_Constructor]^return new Version (  minor, patch, snapshot, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P4_Replace_Constructor]^return new Version ( major,  patch, snapshot, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P4_Replace_Constructor]^return new Version ( major, minor,  snapshot, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P4_Replace_Constructor]^return new Version ( major, minor, patch,  groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P4_Replace_Constructor]^return new Version ( major, minor, patch, snapshot,  artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P4_Replace_Constructor]^return new Version ( major, minor, patch, snapshot, groupId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, patch, patch, snapshot, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, minor, snapshot, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, patch, versionStr, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, patch, snapshot, version, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, patch, snapshot, groupId, versionStr ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( minor, major, patch, snapshot, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, groupId, snapshot, patch, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( snapshot, minor, patch, major, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, patch, snapshot, artifactId, groupId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P8_Replace_Mix]^return new Version ( major, minor, patch, versionInfoClassName, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( patch, minor, patch, snapshot, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, patch, snapshot, versionInfoClassName, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, patch, snapshot, groupId, pomPropertiesGroupId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, patch, minor, snapshot, groupId, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, patch, groupId, snapshot, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( groupId, minor, patch, snapshot, major, artifactId ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P5_Replace_Variable]^return new Version ( major, minor, patch, artifactId, groupId, snapshot ) ;^244^245^^^^229^246^return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[CLASS] VersionUtil  [METHOD] parseVersion [RETURN_TYPE] Version   String versionStr String groupId String artifactId [VARIABLES] Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  String[]  parts  boolean  Version  _version  packageVersion  v  int  major  minor  patch  
[P1_Replace_Type]^partStr = partStr.tochar (  ) ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^partStr = snapshot.toString (  ) ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P7_Replace_Invocation]^partStr = partStr.charAt (  ) ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P8_Replace_Mix]^partStr =  version.toString (  ) ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P11_Insert_Donor_Statement]^versionStr = versionStr.trim (  ) ;partStr = partStr.toString (  ) ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P11_Insert_Donor_Statement]^artifact = artifact.trim (  ) ;partStr = partStr.toString (  ) ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P7_Replace_Invocation]^partStr = partStr .StringBuilder ( PACKAGE_VERSION_CLASS_NAME )  ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P8_Replace_Mix]^partStr = versionStr.toString (  ) ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P14_Delete_Statement]^^250^251^^^^248^259^partStr = partStr.toString (  ) ; int len = partStr.length (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P11_Insert_Donor_Statement]^int len = partStr.length (  ) ;partStr = partStr.toString (  ) ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P11_Insert_Donor_Statement]^char c = partStr.charAt ( i ) ;partStr = partStr.toString (  ) ;^250^^^^^248^259^partStr = partStr.toString (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P1_Replace_Type]^long  len = partStr.length (  ) ;^251^^^^^248^259^int len = partStr.length (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P3_Replace_Literal]^int len = partStr.length() + 9 ;^251^^^^^248^259^int len = partStr.length (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^int len = pomPropertiesArtifactId.length (  ) ;^251^^^^^248^259^int len = partStr.length (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P7_Replace_Invocation]^int len = partStr.charAt (  ) ;^251^^^^^248^259^int len = partStr.length (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P11_Insert_Donor_Statement]^char c = partStr.charAt ( i ) ;int len = partStr.length (  ) ;^251^^^^^248^259^int len = partStr.length (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P3_Replace_Literal]^int len = partStr.length() + 0 ;^251^^^^^248^259^int len = partStr.length (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P7_Replace_Invocation]^int len = partStr .replaceAll ( PACKAGE_VERSION_CLASS_NAME , artifact )  ;^251^^^^^248^259^int len = partStr.length (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P14_Delete_Statement]^^251^252^^^^248^259^int len = partStr.length (  ) ; int number = 0;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P11_Insert_Donor_Statement]^partStr = partStr.toString (  ) ;int len = partStr.length (  ) ;^251^^^^^248^259^int len = partStr.length (  ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P1_Replace_Type]^long  number = 0;^252^^^^^248^259^int number = 0;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P3_Replace_Literal]^int number = 5;^252^^^^^248^259^int number = 0;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^if  ( c > '9' && c < '0' )  break;^255^^^^^248^259^if  ( c > '9' || c < '0' )  break;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^if  ( c == '9' || c < '0' )  break;^255^^^^^248^259^if  ( c > '9' || c < '0' )  break;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^if  ( c > '9' || c <= '0' )  break;^255^^^^^248^259^if  ( c > '9' || c < '0' )  break;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P6_Replace_Expression]^if  ( c > '9' )  break;^255^^^^^248^259^if  ( c > '9' || c < '0' )  break;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P6_Replace_Expression]^if  ( c < '0' )  break;^255^^^^^248^259^if  ( c > '9' || c < '0' )  break;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P15_Unwrap_Block]^break;^255^256^257^^^248^259^if  ( c > '9' || c < '0' )  break; number =  ( number * 10 )  +  ( c - '0' ) ; }^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P16_Remove_Block]^^255^256^257^^^248^259^if  ( c > '9' || c < '0' )  break; number =  ( number * 10 )  +  ( c - '0' ) ; }^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P1_Replace_Type]^for  (  short  i = 0; i < len; ++i )  {^253^^^^^248^259^for  ( int i = 0; i < len; ++i )  {^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^for  ( int i = 0; i <= len; ++i )  {^253^^^^^248^259^for  ( int i = 0; i < len; ++i )  {^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^for  <=  ( int i = 0; i < len; ++i )  {^253^^^^^248^259^for  ( int i = 0; i < len; ++i )  {^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^for  ( numbernt i = 0; i < len; ++i )  {^253^^^^^248^259^for  ( int i = 0; i < len; ++i )  {^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^if  ( c >= '9' || c < '0' )  break;^255^^^^^248^259^if  ( c > '9' || c < '0' )  break;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^if  ( c > '9' || c == '0' )  break;^255^^^^^248^259^if  ( c > '9' || c < '0' )  break;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^number =  ^  ( number * 10 )  +  ( c - '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^number =  ( number - 10 )  +  ( c - '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^number =  ( number * 10 )  +  ( c  <=  '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P3_Replace_Literal]^number =  ( number * 15 )  +  ( c - '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^number =  ( len * 10 )  +  ( c - '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^number =  ( c * 10 )  +  ( number - '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P8_Replace_Mix]^number =  ( number * 1 )  +  ( c - '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P1_Replace_Type]^int c = partStr.charAt ( i ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^char c = pomPropertiesArtifactId.charAt ( i ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^char c = partStr.charAt ( number ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^char c = i.charAt ( partStr ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P7_Replace_Invocation]^char c = partStr.replaceAll ( i ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P7_Replace_Invocation]^char c = partStr .replaceAll ( groupId , group )  ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P11_Insert_Donor_Statement]^int len = partStr.length (  ) ;char c = partStr.charAt ( i ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^char c = versionStr.charAt ( i ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P14_Delete_Statement]^^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P11_Insert_Donor_Statement]^partStr = partStr.toString (  ) ;char c = partStr.charAt ( i ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^number =  !=  ( number * 10 )  +  ( c - '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P2_Replace_Operator]^number =  ( number * 10 )  +  ( c  |  '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P3_Replace_Literal]^number =  ( number * 17 )  +  ( c - '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P8_Replace_Mix]^number =  ( number * 10 * 2 )  +  ( c - '0' ) ;^256^^^^^248^259^number =  ( number * 10 )  +  ( c - '0' ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P3_Replace_Literal]^for  ( int i = number; i < len; ++i )  {^253^^^^^248^259^for  ( int i = 0; i < len; ++i )  {^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^char c = pomPropertiesGroupId.charAt ( i ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P8_Replace_Mix]^char c = version.charAt ( i ) ;^254^^^^^248^259^char c = partStr.charAt ( i ) ;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P14_Delete_Statement]^^254^255^^^^248^259^char c = partStr.charAt ( i ) ; if  ( c > '9' || c < '0' )  break;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
[P5_Replace_Variable]^return len;^258^^^^^248^259^return number;^[CLASS] VersionUtil  [METHOD] parseVersionPart [RETURN_TYPE] int   String partStr [VARIABLES] char  c  Pattern  VERSION_SEPARATOR  String  PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  boolean  Version  _version  packageVersion  v  int  i  len  number  
