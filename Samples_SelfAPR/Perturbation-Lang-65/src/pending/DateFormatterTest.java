[P14_Delete_Statement]^^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;DateFormatter.parseCVS ( null ) ;^42^^^^^27^57^DateFormatter.parseCVS ( null ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^43^^^^^28^58^fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^42^43^^^^27^57^DateFormatter.parseCVS ( null ) ; fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^DateFormatter.parseCVS ( "egoo" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^46^47^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ; fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;DateFormatter.parseCVS ( "gobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^47^^^^^32^62^fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^DateFormatter.parseCVS ( "goobbledegook" ) ;^46^^^^^31^61^DateFormatter.parseCVS ( "gobbledegook" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^DateFormatter.parseCVS ( "go" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^50^51^^^^35^65^DateFormatter.parseCVS ( "ago" ) ; fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;DateFormatter.parseCVS ( "ago" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^51^^^^^36^66^fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^DateFormatter.parseCVS ( "ag" ) ;^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^50^^^^^35^65^DateFormatter.parseCVS ( "ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;DateFormatter.parseCVS ( "1 junk ago" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^55^^^^^40^70^fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^DateFormatter.parseCVS ( "1 junk ago1 j" ) ;^54^^^^^39^69^DateFormatter.parseCVS ( "1 junk ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^DateFormatter.parseCVS ( "onth" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^58^59^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ; fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;DateFormatter.parseCVS ( "1month ago" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^59^^^^^44^74^fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^DateFormatter.parseCVS ( "mo" ) ;^58^^^^^43^73^DateFormatter.parseCVS ( "1month ago" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^DateFormatter.parseCVS ( "laast month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^62^63^^^^47^77^DateFormatter.parseCVS ( "last month" ) ; fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;DateFormatter.parseCVS ( "last month" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^63^^^^^48^78^fail (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^DateFormatter.parseCVS ( "ast" ) ;^62^^^^^47^77^DateFormatter.parseCVS ( "last month" ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^76^^^^^61^91^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.set ( Calendar.MILLISECOND, -8 ) ;^77^^^^^62^92^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.set ( Calendar. 0 ) ;^77^^^^^62^92^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.add ( Calendar.MILLISECOND, 0 ) ;^77^^^^^62^92^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^77^^^^^62^92^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.MONTH )  == 0 )  { now.set ( Calendar.MILLISECOND, 0 ) ; }^77^^^^^62^92^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z:m" ) .format ( now.getTime (  )  )  ) , 50 ) ;^79^^^^^64^94^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now, DateFormatter.parseCVS ( now, DateFormatter.parseCVS (  new SimpleDateFormat ( "MMM d, yyyy h:mm a" )  .format ( now.getTime (  )  )  ) , 50 ) ;^79^^^^^64^94^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "VS format MarseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^78^79^^^^63^93^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "y" ) .format ( now.getTime (  )  )  ) , 50 ) ;^78^79^^^^63^93^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) ,  ) ;^78^79^^^^63^93^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS (  new SimpleDateFormat ( "MMM d, yyyy h:mm a" )  .format ( now.getTime (  )  )  ) , 50 ) ;^78^79^^^^63^93^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.get (  )  )  ) , 50 ) ;^78^79^^^^63^93^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^78^79^^^^63^93^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^78^79^^^^63^93^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z/d" ) .format ( now.getTime (  )  )  ) , 50 ) ;^79^^^^^64^94^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.get (  )  )  ) , 50 ) ;^79^^^^^64^94^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^79^^^^^64^94^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "y H:mm:ss" ) .format ( now.getTime (  )  )  ) , 50 ) ;^79^^^^^64^94^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  = null ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^81^82^^^^66^96^now = Calendar.getInstance (  ) ; now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^81^^^^^66^96^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.set ( Calendar.MILLISECOND, -2 ) ;^82^^^^^67^97^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.set ( Calendar. 0 ) ;^82^^^^^67^97^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.add ( Calendar.MILLISECOND, 0 ) ;^82^^^^^67^97^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^82^83^^^^67^97^now.set ( Calendar.MILLISECOND, 0 ) ; now.set ( Calendar.SECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.MONTH )  == 0 )  { now.set ( Calendar.MILLISECOND, 0 ) ; }^82^^^^^67^97^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.set ( Calendar.SECOND, -2 ) ;^83^^^^^68^98^now.set ( Calendar.SECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.set ( Calendar. 0 ) ;^83^^^^^68^98^now.set ( Calendar.SECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.add ( Calendar.SECOND, 0 ) ;^83^^^^^68^98^now.set ( Calendar.SECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now .get ( 0 )  ;^83^^^^^68^98^now.set ( Calendar.SECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^83^^^^^68^98^now.set ( Calendar.SECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.MONTH )  == 0 )  { now.set ( Calendar.SECOND, 0 ) ; }^83^^^^^68^98^now.set ( Calendar.SECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "d, yyyyMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^85^^^^^70^100^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now, DateFormatter.parseCVS ( now, DateFormatter.parseCVS (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .format ( now.getTime (  )  )  ) , 50 ) ;^85^^^^^70^100^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "arseCVS formatarseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^84^85^^^^69^99^assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MM" ) .format ( now.getTime (  )  )  ) , 50 ) ;^84^85^^^^69^99^assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 58 ) ;^84^85^^^^69^99^assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .format ( now.getTime (  )  )  ) , 50 ) ;^84^85^^^^69^99^assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.get (  )  )  ) , 50 ) ;^84^85^^^^69^99^assertEquals ( "parseCVS format MMM d, yyyy h:mm a", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d," ) .format ( now.getTime (  )  )  ) , 50 ) ;^85^^^^^70^100^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now, DateFormatter .parseCVS ( 3 )   )  ) , 50 ) ;^85^^^^^70^100^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.get (  )  )  ) , 50 ) ;^85^^^^^70^100^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "d,MM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^85^^^^^70^100^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^93^^^^^78^108^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "" ) .parse ( "16:30 GMT" )  ) ;^94^^^^^79^109^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now.setTime ( now.setTime (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .parse ( "16:30 GMT" )  ) ;^94^^^^^79^109^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm zh:m" ) .parse ( "16:30 GMT" )  ) ;^94^^^^^79^109^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GM6:30 GMT" )  ) ;^94^^^^^79^109^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now .getTime (  )   ) ;^94^^^^^79^109^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^94^^^^^79^109^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "" )  ) ;^94^^^^^79^109^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 16:30 GMTS format h:mm z", now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^95^96^^^^80^110^assertEquals ( "parseCVS format h:mm z 16:30 GMT", now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 16:30 GMT", now, DateFormatter.parseCVS ( "16:306:30 GMT" ) , 50 ) ;^95^96^^^^80^110^assertEquals ( "parseCVS format h:mm z 16:30 GMT", now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 16:30 GMT", now, DateFormatter.parseCVS ( "16:30 GMT" ) , null ) ;^95^96^^^^80^110^assertEquals ( "parseCVS format h:mm z 16:30 GMT", now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "16:30 GMT6" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS format h:mm z 16:30 GMT", now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^96^^^^^81^111^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^97^98^^^^82^112^now = Calendar.getInstance (  ) ; now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^97^^^^^82^112^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now.setTime ( now.setTime (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .parse ( "16:30 EST" )  ) ;^98^^^^^83^113^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm zh:" ) .parse ( "16:30 EST" )  ) ;^98^^^^^83^113^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST6:30 " )  ) ;^98^^^^^83^113^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getTime (  )   ) ;^98^^^^^83^113^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^98^^^^^83^113^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h::mm z" ) .parse ( "16:30 EST" )  ) ;^98^^^^^83^113^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( ":30 ES6:30 EST" )  ) ;^98^^^^^83^113^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( " 16arseCVS format h:mm z 16:30 EST", now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^99^100^^^^84^114^assertEquals ( "parseCVS format h:mm z 16:30 EST", now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 16:30 EST", now, DateFormatter.parseCVS ( "16:30 EST" ) , 46 ) ;^99^100^^^^84^114^assertEquals ( "parseCVS format h:mm z 16:30 EST", now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "16:30 EST6:30 " ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS format h:mm z 16:30 EST", now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^100^^^^^85^115^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^101^^^^^86^116^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( ":mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^102^^^^^87^117^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now.setTime ( now.setTime (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .parse ( "16:30 GMT-05:00" )  ) ;^102^^^^^87^117^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm zh:" ) .parse ( "16:30 GMT-05:00" )  ) ;^102^^^^^87^117^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:0016:30" )  ) ;^102^^^^^87^117^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^102^^^^^87^117^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm zh:m" ) .parse ( "16:30 GMT-05:00" )  ) ;^102^^^^^87^117^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:006:30 G" )  ) ;^102^^^^^87^117^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( " ", now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^103^104^^^^88^118^assertEquals ( "parseCVS format h:mm z 16:30 GMT-05:00", now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 16:30 GMT-05:00", now, DateFormatter.parseCVS ( "16:36:30 GMT-05:00" ) , 50 ) ;^103^104^^^^88^118^assertEquals ( "parseCVS format h:mm z 16:30 GMT-05:00", now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 16:30 GMT-05:00", now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 53 ) ;^103^104^^^^88^118^assertEquals ( "parseCVS format h:mm z 16:30 GMT-05:00", now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00 GMT-0" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^104^105^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ; now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS format h:mm z 16:30 GMT-05:00", now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^104^^^^^89^119^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^105^106^^^^90^120^now = Calendar.getInstance (  ) ; now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^105^^^^^90^120^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z:mm " ) .parse ( "16:30 GMT+01:00" )  ) ;^106^^^^^91^121^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now.setTime ( now.setTime (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .parse ( "16:30 GMT+01:00" )  ) ;^106^^^^^91^121^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm zh" ) .parse ( "16:30 GMT+01:00" )  ) ;^106^^^^^91^121^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "6:30 GMT+01:00" )  ) ;^106^^^^^91^121^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getTime (  )   ) ;^106^^^^^91^121^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^106^^^^^91^121^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z " ) .parse ( "16:30 GMT+01:00" )  ) ;^106^^^^^91^121^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "+06:30 GMT+01:00" )  ) ;^106^^^^^91^121^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "CVS format h:mm z arseCVS format h:mm z 16:30 GMT+01:00", now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^107^108^^^^92^122^assertEquals ( "parseCVS format h:mm z 16:30 GMT+01:00", now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 16:30 GMT+01:00", now, DateFormatter.parseCVS ( "T6:30 GMT+01:00" ) , 50 ) ;^107^108^^^^92^122^assertEquals ( "parseCVS format h:mm z 16:30 GMT+01:00", now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 16:30 GMT+01:00", now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 43 ) ;^107^108^^^^92^122^assertEquals ( "parseCVS format h:mm z 16:30 GMT+01:00", now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "6:30 GMT+01:06:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS format h:mm z 16:30 GMT+01:00", now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^108^^^^^93^123^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  = null ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^110^^^^^95^125^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now.setTime ( now.setTime (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .parse ( "06:30 GMT" )  ) ;^111^^^^^96^126^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm zh:" ) .parse ( "06:30 GMT" )  ) ;^111^^^^^96^126^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT06:3" )  ) ;^111^^^^^96^126^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now .getTime (  )   ) ;^111^^^^^96^126^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^111^^^^^96^126^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "" ) .parse ( "06:30 GMT" )  ) ;^111^^^^^96^126^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "" )  ) ;^111^^^^^96^126^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "arsearseCVS format h:mm z 06:30 GMT", now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^112^113^^^^97^127^assertEquals ( "parseCVS format h:mm z 06:30 GMT", now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 06:30 GMT", now, DateFormatter.parseCVS ( "" ) , 50 ) ;^112^113^^^^97^127^assertEquals ( "parseCVS format h:mm z 06:30 GMT", now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 06:30 GMT", now, DateFormatter.parseCVS ( "06:30 GMT" ) , 45 ) ;^112^113^^^^97^127^assertEquals ( "parseCVS format h:mm z 06:30 GMT", now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS format h:mm z 06:30 GMT", now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^113^^^^^98^128^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^114^^^^^99^129^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:" ) .parse ( "06:30 EST" )  ) ;^115^^^^^100^130^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now.setTime ( now.setTime (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .parse ( "06:30 EST" )  ) ;^115^^^^^100^130^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:m:mm z" ) .parse ( "06:30 EST" )  ) ;^115^^^^^100^130^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "6:30 EST" )  ) ;^115^^^^^100^130^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^115^^^^^100^130^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( ":mm:mm z" ) .parse ( "06:30 EST" )  ) ;^115^^^^^100^130^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "6:6:30 EST" )  ) ;^115^^^^^100^130^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 EST" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "seCVS format h:mmarseCVS format h:mm z 06:30 EST", now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^116^117^^^^101^131^assertEquals ( "parseCVS format h:mm z 06:30 EST", now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 06:30 EST", now, DateFormatter.parseCVS ( "S" ) , 50 ) ;^116^117^^^^101^131^assertEquals ( "parseCVS format h:mm z 06:30 EST", now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 06:30 EST", now, DateFormatter.parseCVS ( "06:30 EST" ) , 56 ) ;^116^117^^^^101^131^assertEquals ( "parseCVS format h:mm z 06:30 EST", now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "0 E6:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^117^118^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ; now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS format h:mm z 06:30 EST", now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^117^^^^^102^132^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^118^119^^^^103^133^now = Calendar.getInstance (  ) ; now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^118^^^^^103^133^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm" ) .parse ( "06:30 GMT-05:00" )  ) ;^119^^^^^104^134^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now.setTime ( now.setTime (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .parse ( "06:30 GMT-05:00" )  ) ;^119^^^^^104^134^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( ":mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^119^^^^^104^134^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:0006:30 " )  ) ;^119^^^^^104^134^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^119^^^^^104^134^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "" ) .parse ( "06:30 GMT-05:00" )  ) ;^119^^^^^104^134^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00G" )  ) ;^119^^^^^104^134^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "rmat h:mm z 06:30", now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^120^121^^^^105^135^assertEquals ( "parseCVS format h:mm z 06:30 GMT-05:00", now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 06:30 GMT-05:00", now, DateFormatter.parseCVS ( "06:30 GMT-05:0006:30 " ) , 50 ) ;^120^121^^^^105^135^assertEquals ( "parseCVS format h:mm z 06:30 GMT-05:00", now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 06:30 GMT-05:00", now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 41 ) ;^120^121^^^^105^135^assertEquals ( "parseCVS format h:mm z 06:30 GMT-05:00", now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "0" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS format h:mm z 06:30 GMT-05:00", now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^121^^^^^106^136^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^122^^^^^107^137^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm zm" ) .parse ( "06:30 GMT+01:00" )  ) ;^123^^^^^108^138^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P4_Replace_Constructor]^now.setTime ( now.setTime (  new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )  .parse ( "06:30 GMT+01:00" )  ) ;^123^^^^^108^138^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "mm:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^123^^^^^108^138^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:006:30 GMT" )  ) ;^123^^^^^108^138^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^123^^^^^108^138^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "::mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^123^^^^^108^138^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( ":6:30 GMT+01:00" )  ) ;^123^^^^^108^138^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( ":mm ", now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^124^125^^^^109^139^assertEquals ( "parseCVS format h:mm z 06:30 GMT+01:00", now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 06:30 GMT+01:00", now, DateFormatter.parseCVS ( "" ) , 50 ) ;^124^125^^^^109^139^assertEquals ( "parseCVS format h:mm z 06:30 GMT+01:00", now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS format h:mm z 06:30 GMT+01:00", now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 56 ) ;^124^125^^^^109^139^assertEquals ( "parseCVS format h:mm z 06:30 GMT+01:00", now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "30 GMT+0" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS format h:mm z 06:30 GMT+01:00", now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^125^^^^^110^140^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^127^^^^^112^142^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.WEEK_OF_MONTH, -4 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now = Calendar.getInstance (  ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS a week agoCVS a ", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^129^130^^^^114^144^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week agoee" ) , 50 ) ;^129^130^^^^114^144^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 57 ) ;^129^130^^^^114^144^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( " ag" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^130^131^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ; now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^130^^^^^115^145^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^131^^^^^116^146^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.WEEK_OF_MONTH, --3 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now = Calendar.getInstance (  ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "eCV", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^133^134^^^^118^148^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an wn week ago" ) , 50 ) ;^133^134^^^^118^148^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 41 ) ;^133^134^^^^118^148^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "an week " ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^134^^^^^119^149^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^136^^^^^121^151^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DAY_OF_MONTH, -15 ) ;^137^^^^^122^152^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -14 ) ;^137^^^^^122^152^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.DAY_OF_MONTH, -14 ) ;^137^^^^^122^152^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^137^^^^^122^152^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^137^^^^^122^152^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  { now.add ( Calendar.DAY_OF_MONTH, -14 ) ; }^137^^^^^122^152^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 fortnight agoseCVS 1 f", now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^138^139^^^^123^153^assertEquals ( "parseCVS 1 fortnight ago", now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 fortnight ago", now, DateFormatter.parseCVS ( "1 fortnight agoght a" ) , 50 ) ;^138^139^^^^123^153^assertEquals ( "parseCVS 1 fortnight ago", now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 fortnight ago", now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 1 ) ;^138^139^^^^123^153^assertEquals ( "parseCVS 1 fortnight ago", now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "1 fortnigh fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 fortnights ago", now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 fortnight ago", now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^139^^^^^124^154^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  = null ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^140^^^^^125^155^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DAY_OF_MONTH, -23 ) ;^141^^^^^126^156^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -14 ) ;^141^^^^^126^156^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.DAY_OF_MONTH, -14 ) ;^141^^^^^126^156^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^141^^^^^126^156^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  { now.add ( Calendar.DAY_OF_MONTH, -14 ) ; }^141^^^^^126^156^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 fortnights agoseC", now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^142^143^^^^127^157^assertEquals ( "parseCVS 1 fortnights ago", now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 fortnights ago", now, DateFormatter.parseCVS ( "1 fortnights  fortnights ago" ) , 50 ) ;^142^143^^^^127^157^assertEquals ( "parseCVS 1 fortnights ago", now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 fortnights ago", now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 58 ) ;^142^143^^^^127^157^assertEquals ( "parseCVS 1 fortnights ago", now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "rtni" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 fortnights ago", now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 fortnight ago", now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^143^^^^^128^158^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^145^^^^^130^160^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now .getInstance (  )  ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now = Calendar.getInstance (  ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.MINUTE, -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.MONTH )  == 0 )  { now.add ( Calendar.MINUTE, -1 ) ; }^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "in", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^147^148^^^^132^162^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "" ) , 50 ) ;^147^148^^^^132^162^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 41 ) ;^147^148^^^^132^162^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "minute a" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^148^^^^^133^163^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^149^^^^^134^164^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.MINUTE, -16 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now = Calendar.getInstance (  ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.MINUTE, -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.MONTH )  == 0 )  { now.add ( Calendar.MINUTE, -8 ) ; }^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 8 minutes agoparseCVS ", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^151^152^^^^136^166^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes agoinute" ) , 50 ) ;^151^152^^^^136^166^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 59 ) ;^151^152^^^^136^166^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "8 minutes ago8 " ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^152^^^^^137^167^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^154^155^^^^139^169^now = Calendar.getInstance (  ) ; now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^154^^^^^139^169^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now .getInstance (  )  ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now = Calendar.getInstance (  ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.MILLISECOND, -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "llisearseCVS 1 millisecond ago", now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^156^157^^^^141^171^assertEquals ( "parseCVS 1 millisecond ago", now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 millisecond ago", now, DateFormatter.parseCVS ( "ill" ) , 50 ) ;^156^157^^^^141^171^assertEquals ( "parseCVS 1 millisecond ago", now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 millisecond ago", now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 59 ) ;^156^157^^^^141^171^assertEquals ( "parseCVS 1 millisecond ago", now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "ll millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^157^158^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ; now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 milliseconds ago", now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 millisecond ago", now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^157^^^^^142^172^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^158^159^^^^143^173^now = Calendar.getInstance (  ) ; now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^158^^^^^143^173^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.MILLISECOND, -99 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now = Calendar.getInstance (  ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.MILLISECOND, -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "s", now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^160^161^^^^145^175^assertEquals ( "parseCVS 1 milliseconds ago", now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 milliseconds ago", now, DateFormatter.parseCVS ( "100 mi00 milliseconds ago" ) , 50 ) ;^160^161^^^^145^175^assertEquals ( "parseCVS 1 milliseconds ago", now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 1 milliseconds ago", now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 53 ) ;^160^161^^^^145^175^assertEquals ( "parseCVS 1 milliseconds ago", now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 milliseconds ago", now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 millisecond ago", now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^161^^^^^146^176^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  = null ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^162^163^^^^147^177^now = Calendar.getInstance (  ) ; now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^162^^^^^147^177^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.SECOND, -24 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.SECOND, -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "CVS 30arseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^164^165^^^^149^179^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago30" ) , 50 ) ;^164^165^^^^149^179^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "se" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 milliseconds ago", now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 millisecond ago", now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^165^^^^^150^180^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^166^^^^^151^181^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.SECOND, -25 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.SECOND, -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 30 seconds agoonds ", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^168^169^^^^153^183^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "" ) , 50 ) ;^168^169^^^^153^183^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 46 ) ;^168^169^^^^153^183^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "n0 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 milliseconds ago", now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^169^^^^^154^184^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  = null ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^170^171^^^^155^185^now = Calendar.getInstance (  ) ; now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^170^^^^^155^185^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.HOUR, -1 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.HOUR, -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "r ag", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^172^173^^^^157^187^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( " a hour ago" ) , 50 ) ;^172^173^^^^157^187^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 47 ) ;^172^173^^^^157^187^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "2 hour a hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^173^^^^^158^188^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^174^175^^^^159^189^now = Calendar.getInstance (  ) ; now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^174^^^^^159^189^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.HOUR, -null ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.HOUR, -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 hours agop", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^176^177^^^^161^191^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago2 " ) , 50 ) ;^176^177^^^^161^191^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 54 ) ;^176^177^^^^161^191^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "2 hours ag" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^177^^^^^162^192^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  = null ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^178^^^^^163^193^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DAY_OF_MONTH, -1 ) ;^179^^^^^164^194^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -2 ) ;^179^^^^^164^194^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.DAY_OF_MONTH, -2 ) ;^179^^^^^164^194^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^179^^^^^164^194^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  { now.add ( Calendar.DAY_OF_MONTH, -2 ) ; }^179^^^^^164^194^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "p", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^180^181^^^^165^195^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ag" ) , 50 ) ;^180^181^^^^165^195^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 48 ) ;^180^181^^^^165^195^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "da day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^181^^^^^166^196^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^182^^^^^167^197^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DAY_OF_MONTH, -7 ) ;^183^^^^^168^198^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -2 ) ;^183^^^^^168^198^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.DAY_OF_MONTH, -2 ) ;^183^^^^^168^198^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^183^^^^^168^198^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  { now.add ( Calendar.DAY_OF_MONTH, -2 ) ; }^183^^^^^168^198^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "pa", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^184^185^^^^169^199^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days a days ago" ) , 50 ) ;^184^185^^^^169^199^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 47 ) ;^184^185^^^^169^199^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "2 days agoa" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^185^^^^^170^200^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^186^187^^^^171^201^now = Calendar.getInstance (  ) ; now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^186^^^^^171^201^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.MONTH, -7 ) ;^187^^^^^172^202^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -2 ) ;^187^^^^^172^202^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.MONTH, -2 ) ;^187^^^^^172^202^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^187^^^^^172^202^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^187^^^^^172^202^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.MONTH )  == 0 )  { now.add ( Calendar.MONTH, -2 ) ; }^187^^^^^172^202^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "VS 2arseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^188^189^^^^173^203^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ag" ) , 50 ) ;^188^189^^^^173^203^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 45 ) ;^188^189^^^^173^203^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "2 month agoonth" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 fortnight ago", now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^189^^^^^174^204^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^190^191^^^^175^205^now = Calendar.getInstance (  ) ; now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^190^^^^^175^205^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.MONTH, -6 ) ;^191^^^^^176^206^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -2 ) ;^191^^^^^176^206^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.MONTH, -2 ) ;^191^^^^^176^206^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^191^^^^^176^206^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.MONTH )  == 0 )  { now.add ( Calendar.MONTH, -2 ) ; }^191^^^^^176^206^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "arsearseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^192^193^^^^177^207^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "th months ago" ) , 50 ) ;^192^193^^^^177^207^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 42 ) ;^192^193^^^^177^207^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "2 months agoonths " ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^193^194^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ; now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 fortnight ago", now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 fortnights ago", now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^193^^^^^178^208^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  = null ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^194^^^^^179^209^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now = Calendar.getInstance (  ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.YEAR, -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "arseCVS 2 ", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^196^197^^^^181^211^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( " year a" ) , 50 ) ;^196^197^^^^181^211^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 52 ) ;^196^197^^^^181^211^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^197^198^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ; now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^197^^^^^182^212^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now  =  now ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^198^199^^^^183^213^now = Calendar.getInstance (  ) ; now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^198^^^^^183^213^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.YEAR, --4 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now = Calendar.getInstance (  ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.YEAR, -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "arsarseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^200^201^^^^185^215^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 year years ago" ) , 50 ) ;^200^201^^^^185^215^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 56 ) ;^200^201^^^^185^215^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 month ago", now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 day ago", now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 years ago", now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 months ago", now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 8 minutes ago", now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 1 minute ago", now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 year ago", now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 seconds ago", now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 30 second ago", now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hours ago", now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 days ago", now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS 2 hour ago", now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^201^^^^^186^216^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^203^204^^^^188^218^now = Calendar.getInstance (  ) ; now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^203^^^^^188^218^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DATE, -10 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now .getInstance (  )  ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.DATE, -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "estarseCVS yesterday", now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^205^206^^^^190^220^assertEquals ( "parseCVS yesterday", now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS yesterday", now, DateFormatter.parseCVS ( "esterday" ) , 50 ) ;^205^206^^^^190^220^assertEquals ( "parseCVS yesterday", now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS yesterday", now, DateFormatter.parseCVS ( "yesterday" ) , 52 ) ;^205^206^^^^190^220^assertEquals ( "parseCVS yesterday", now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "esterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS yesterday", now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last Sunday", now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^206^^^^^191^221^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^208^209^^^^193^223^now = Calendar.getInstance (  ) ; now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^208^^^^^193^223^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DATE, -5 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -7 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.DATE, 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS tomorrowparseC", now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^210^211^^^^195^225^assertEquals ( "parseCVS tomorrow", now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS tomorrow", now, DateFormatter.parseCVS ( "tom" ) , 50 ) ;^210^211^^^^195^225^assertEquals ( "parseCVS tomorrow", now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS tomorrow", now, DateFormatter.parseCVS ( "tomorrow" ) , 41 ) ;^210^211^^^^195^225^assertEquals ( "parseCVS tomorrow", now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "tomorrowtomorr" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS tomorrow", now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^211^^^^^196^226^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^213^^^^^198^228^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P2_Replace_Operator]^if  ( now.get ( Calendar.DAY_OF_WEEK )  != 1 )  {^215^^^^^200^230^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^if  ( now.get ( Calendar.DAY_OF_WEEK )  == -3 )  {^215^^^^^200^230^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 3 )  {^215^^^^^200^230^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P6_Replace_Expression]^if  ( 1 - now.get ( DAY_OF_WEEK ) )  {^215^^^^^200^230^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^if  ( now.setTime ( Calendar.DAY_OF_WEEK )  == 1 )  {^215^^^^^200^230^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^if  ( now.setTime ( Calendar.DAY_OF_WEEK )  == 0 )  {^215^^^^^200^230^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P9_Replace_Statement]^if  ( now.get ( Calendar.MONTH )  == 0 )  {^215^^^^^200^230^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P15_Unwrap_Block]^now.add(java.util.Calendar.DATE, (-7));^215^216^217^218^219^200^230^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {  now.add ( Calendar.DATE, -7 ) ; } else { now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ; }^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P16_Remove_Block]^^215^216^217^218^219^200^230^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {  now.add ( Calendar.DATE, -7 ) ; } else { now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ; }^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P13_Insert_Block]^if  (  ( now.get ( MONTH )  )  == 0 )  {     now.add ( MONTH,  ( -12 )  ) ; }else {     now.add ( MONTH,  ( 0 -  ( now.get ( MONTH )  )  )  ) ; }^215^^^^^200^230^[Delete]^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P2_Replace_Operator]^now.add ( Calendar.DATE, 1  ^  now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^215^220^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DATE, -7 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^215^220^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^215^220^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.add ( Calendar.DATE, 1 - now.setTime ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^215^220^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now .getInstance (  )  ;^219^^^^^215^220^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^219^^^^^215^220^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^215^220^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DATE, -4 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now .getInstance (  )  ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.DATE, -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DATE, -11 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P2_Replace_Operator]^now.add ( Calendar.DATE, 1  <<  now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^204^234^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DATE, 7 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^204^234^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^204^234^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^219^^^^^204^234^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.add ( Calendar.DATE, 1 - now.setTime ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^204^234^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^219^^^^^204^234^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^204^234^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseC", now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^221^222^^^^206^236^assertEquals ( "parseCVS last Sunday", now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS last Sunday", now, DateFormatter.parseCVS ( " Sun" ) , 50 ) ;^221^222^^^^206^236^assertEquals ( "parseCVS last Sunday", now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "last Sundaylast Sun" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS yesterday", now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last Sunday", now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last January", now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^222^^^^^207^237^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^224^^^^^209^239^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.DATE, -0 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now .getInstance (  )  ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.SECOND, -30 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, -1 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.HOUR, -2 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now.add ( Calendar.DATE, -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS last weekarseCVS la", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^226^227^^^^211^241^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "ast week" ) , 50 ) ;^226^227^^^^211^241^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 55 ) ;^226^227^^^^211^241^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "last weekt w" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS yesterday", now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS a week ago", now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last Sunday", now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS an week ago", now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last January", now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^227^^^^^212^242^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now = Calendar.getTime (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.YEAR, -2 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -8 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.SECOND, 0 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -1 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.set ( Calendar.MILLISECOND, 0 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MINUTE, -1 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MILLISECOND, -100 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now = Calendar.getInstance (  ) ;^229^^^^^214^244^now = Calendar.getInstance (  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P2_Replace_Operator]^if  ( now.get ( Calendar.MONTH )  >= 0 )  {^231^^^^^216^246^if  ( now.get ( Calendar.MONTH )  == 0 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^if  ( now.get ( Calendar.MONTH )  == -4 )  {^231^^^^^216^246^if  ( now.get ( Calendar.MONTH )  == 0 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^if  ( now.get ( Calendar.MONTH )  == -7 )  {^231^^^^^216^246^if  ( now.get ( Calendar.MONTH )  == 0 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P6_Replace_Expression]^if  ( 0 - now.get ( MONTH ) )  {^231^^^^^216^246^if  ( now.get ( Calendar.MONTH )  == 0 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^if  ( now.setTime ( Calendar.MONTH )  == 0 )  {^231^^^^^216^246^if  ( now.get ( Calendar.MONTH )  == 0 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^if  ( now.get ( Calendar.MONTH )  == 4 )  {^231^^^^^216^246^if  ( now.get ( Calendar.MONTH )  == 0 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P9_Replace_Statement]^if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {^231^^^^^216^246^if  ( now.get ( Calendar.MONTH )  == 0 )  {^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P15_Unwrap_Block]^now.add(java.util.Calendar.MONTH, (-12));^231^232^233^234^235^216^246^if  ( now.get ( Calendar.MONTH )  == 0 )  {  now.add ( Calendar.MONTH, -12 ) ; } else { now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ; }^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P16_Remove_Block]^^231^232^233^234^235^216^246^if  ( now.get ( Calendar.MONTH )  == 0 )  {  now.add ( Calendar.MONTH, -12 ) ; } else { now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ; }^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P13_Insert_Block]^if  (  ( now.get ( DAY_OF_WEEK )  )  == 1 )  {     now.add ( DATE,  ( -7 )  ) ; }else {     now.add ( DATE,  ( 1 -  ( now.get ( DAY_OF_WEEK )  )  )  ) ; }^231^^^^^216^246^[Delete]^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P2_Replace_Operator]^now.add ( Calendar.MONTH, 0  >  now.get ( Calendar.MONTH )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.MONTH, 7 - now.get ( Calendar.MONTH )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.add ( Calendar.MONTH, 0 - now.setTime ( Calendar.MONTH )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P8_Replace_Mix]^now.add ( Calendar.MONTH, 0 - now.setTime ( Calendar.this )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.MONTH, -21 ) ;^233^^^^^218^248^now.add ( Calendar.MONTH, -12 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. -12 ) ;^233^^^^^218^248^now.add ( Calendar.MONTH, -12 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.set ( Calendar.MONTH, -12 ) ;^233^^^^^218^248^now.add ( Calendar.MONTH, -12 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^233^^^^^218^248^now.add ( Calendar.MONTH, -12 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^233^^^^^218^248^now.add ( Calendar.MONTH, -12 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P12_Insert_Condition]^if  ( now.get ( Calendar.MONTH )  == 0 )  { now.add ( Calendar.MONTH, -12 ) ; }^233^^^^^218^248^now.add ( Calendar.MONTH, -12 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.MONTH, -null ) ;^233^^^^^218^248^now.add ( Calendar.MONTH, -12 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P2_Replace_Operator]^now.add ( Calendar.MONTH, 0  |  now.get ( Calendar.MONTH )  ) ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now.add ( Calendar.MONTH, -3 - now.get ( Calendar.MONTH )  ) ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P5_Replace_Variable]^now.add ( Calendar. 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now .getInstance (  )  ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P7_Replace_Invocation]^now.add ( Calendar.MONTH, 0 - now.setTime ( Calendar.MONTH )  ) ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -12 ) ;now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now.add ( Calendar.MONTH, -2 ) ;now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "paarseCVS last January", now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^237^238^^^^222^252^assertEquals ( "parseCVS last January", now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^assertEquals ( "parseCVS last January", now, DateFormatter.parseCVS ( "" ) , 50 ) ;^237^238^^^^222^252^assertEquals ( "parseCVS last January", now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P3_Replace_Literal]^now, DateFormatter.parseCVS ( "ast Janast January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P14_Delete_Statement]^^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "gobbledegook" ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last week", now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "ago" ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last Sunday", now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "last month" ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1month ago" ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( "1 junk ago" ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^assertEquals ( "parseCVS last January", now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^DateFormatter.parseCVS ( null ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P11_Insert_Donor_Statement]^now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^238^^^^^223^253^now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[P2_Replace_Operator]^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  >= delta )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )   ==  cal2.getTime (  ) .getTime (  )  )  > delta )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P5_Replace_Variable]^if  ( Math.abs ( cal2.getTime (  ) .getTime (  )  - cal1.getTime (  ) .getTime (  )  )  > delta )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P5_Replace_Variable]^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - delta.getTime (  ) .getTime (  )  )  > cal2 )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P6_Replace_Expression]^if  ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  ) )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P6_Replace_Expression]^if  (  (  ( message + " expected " )  +  ( cal1.getTime (  )  )  )  + " but got " + cal2.getTime (  ) )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P6_Replace_Expression]^if  (  ( message + " expected " )  +  ( cal1.getTime (  )  )  + " but got " )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P6_Replace_Expression]^if  ( message + " expected " + cal1.getTime (  ) )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P6_Replace_Expression]^if  ( message + " expected " )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P7_Replace_Invocation]^if  ( Math.abs ( cal1.get (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P8_Replace_Mix]^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal1.getTime (  ) .getTime (  )  )  > delta )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P15_Unwrap_Block]^throw new junit.framework.AssertionFailedError(((((message + " expected ") + (cal1.getTime())) + " but got ") + (cal2.getTime())));^246^247^248^249^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  { throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ; }^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P16_Remove_Block]^^246^247^248^249^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  { throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ; }^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  &  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  >=  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message  <=  " expected "  <=  cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message  >=  " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P3_Replace_Literal]^throw new AssertionFailedError ( message + " expected  " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P5_Replace_Variable]^throw new AssertionFailedError ( message + " expected " + cal2.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P5_Replace_Variable]^throw new AssertionFailedError ( cal2 + " expected " + cal1.getTime (  )  + " but got " + message.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P5_Replace_Variable]^throw new AssertionFailedError ( cal1 + " expected " + message.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P5_Replace_Variable]^throw new AssertionFailedError ( message + " expected " + cal2.getTime (  )  + " but got " + cal1.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P7_Replace_Invocation]^throw new AssertionFailedError ( message + " expected " + cal1.get (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P13_Insert_Block]^if  (  ( abs (  (  ( cal1.getTime (  ) .getTime (  )  )  -  ( cal2.getTime (  ) .getTime (  )  )  )  )  )  > delta )  {     throw new AssertionFailedError (  (  (  (  ( message + " expected " )  +  ( cal1.getTime (  )  )  )  + " but got " )  +  ( cal2.getTime (  )  )  )  ) ; }^247^^^^^245^250^[Delete]^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  &&  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  ||  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message  ||  " expected "  ||  cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message  <<  " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P3_Replace_Literal]^throw new AssertionFailedError ( message + " expe" + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P8_Replace_Mix]^return ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P7_Replace_Invocation]^message + " expected " + cal1.get (  )  + " but got " + cal2.getTime (  )  ) ;^248^^^^^245^250^message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P8_Replace_Mix]^message + " expected " + cal2.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^248^^^^^245^250^message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P14_Delete_Statement]^^248^^^^^245^250^message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P5_Replace_Variable]^message + " expected " + cal1.getTime (  )  + " but got " + cal1.getTime (  )  ) ;^248^^^^^245^250^message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  !=  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message  |  " expected "  |  cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P3_Replace_Literal]^throw new AssertionFailedError ( message + " expected expected" + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P3_Replace_Literal]^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got  but " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message  >=  " expected "  >=  cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^throw new AssertionFailedError ( message   instanceof   " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P3_Replace_Literal]^throw new AssertionFailedError ( message + "xpect" + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P5_Replace_Variable]^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal1.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P8_Replace_Mix]^return false;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P2_Replace_Operator]^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )   >>  cal2.getTime (  ) .getTime (  )  )  > delta )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P5_Replace_Variable]^if  ( Math.abs ( cal2.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P8_Replace_Mix]^if  ( Math.abs ( cal1.get (  ) .getTime (  )  - cal1.getTime (  ) .getTime (  )  )  > delta )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[P8_Replace_Mix]^message + " expected " + cal1 .setTime ( 0 )   + " but got " + cal1^248^^^^^245^250^message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
