[P1_Replace_Type]^private static final  short  STATE_UNSTARTED = 0;^53^^^^^48^58^private static final int STATE_UNSTARTED = 0;^[CLASS] StopWatch   [VARIABLES] 
[P3_Replace_Literal]^private static final int STATE_UNSTARTED = -3;^53^^^^^48^58^private static final int STATE_UNSTARTED = 0;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private static final int STATE_UNSTARTED = 0 << 2;^53^^^^^48^58^private static final int STATE_UNSTARTED = 0;^[CLASS] StopWatch   [VARIABLES] 
[P1_Replace_Type]^private static final  long  STATE_RUNNING   = 1;^54^^^^^49^59^private static final int STATE_RUNNING   = 1;^[CLASS] StopWatch   [VARIABLES] 
[P3_Replace_Literal]^private static final int STATE_RUNNING   = null;^54^^^^^49^59^private static final int STATE_RUNNING   = 1;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private static final int STATE_RUNNING   ;^54^^^^^49^59^private static final int STATE_RUNNING   = 1;^[CLASS] StopWatch   [VARIABLES] 
[P1_Replace_Type]^private static final  short  STATE_STOPPED   = 2;^55^^^^^50^60^private static final int STATE_STOPPED   = 2;^[CLASS] StopWatch   [VARIABLES] 
[P3_Replace_Literal]^private static final int STATE_STOPPED   = 0;^55^^^^^50^60^private static final int STATE_STOPPED   = 2;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private static final int STATE_STOPPED    = null ;^55^^^^^50^60^private static final int STATE_STOPPED   = 2;^[CLASS] StopWatch   [VARIABLES] 
[P1_Replace_Type]^private static final  short  STATE_SUSPENDED = 3;^56^^^^^51^61^private static final int STATE_SUSPENDED = 3;^[CLASS] StopWatch   [VARIABLES] 
[P3_Replace_Literal]^private static final int STATE_SUSPENDED = null;^56^^^^^51^61^private static final int STATE_SUSPENDED = 3;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private static final int STATE_SUSPENDED = 2;^56^^^^^51^61^private static final int STATE_SUSPENDED = 3;^[CLASS] StopWatch   [VARIABLES] 
[P1_Replace_Type]^private static final  short  STATE_UNSPLIT = 10;^59^^^^^54^64^private static final int STATE_UNSPLIT = 10;^[CLASS] StopWatch   [VARIABLES] 
[P3_Replace_Literal]^private static final int STATE_UNSPLIT = 3;^59^^^^^54^64^private static final int STATE_UNSPLIT = 10;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private static final int STATE_UNSPLIT  = null ;^59^^^^^54^64^private static final int STATE_UNSPLIT = 10;^[CLASS] StopWatch   [VARIABLES] 
[P1_Replace_Type]^private static final  short  STATE_SPLIT   = 11;^60^^^^^55^65^private static final int STATE_SPLIT   = 11;^[CLASS] StopWatch   [VARIABLES] 
[P3_Replace_Literal]^private static final int STATE_SPLIT   = 5;^60^^^^^55^65^private static final int STATE_SPLIT   = 11;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private static final int STATE_SPLIT   = 12;^60^^^^^55^65^private static final int STATE_SPLIT   = 11;^[CLASS] StopWatch   [VARIABLES] 
[P1_Replace_Type]^private  short  runningState = STATE_UNSTARTED;^65^^^^^60^70^private int runningState = STATE_UNSTARTED;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private  long  runningState = STATE_UNSTARTED;^65^^^^^60^70^private int runningState = STATE_UNSTARTED;^[CLASS] StopWatch   [VARIABLES] 
[P12_Insert_Condition]^if ( this.runningState == STATE_UNSTARTED )  { private int runningState = STATE_UNSTARTED; }^65^^^^^60^70^private int runningState = STATE_UNSTARTED;^[CLASS] StopWatch   [VARIABLES] 
[P12_Insert_Condition]^if ( this.runningState != STATE_SUSPENDED )  { private int runningState = STATE_UNSTARTED; }^65^^^^^60^70^private int runningState = STATE_UNSTARTED;^[CLASS] StopWatch   [VARIABLES] 
[P12_Insert_Condition]^if ( this.runningState == STATE_STOPPED )  { private int runningState = STATE_UNSTARTED; }^65^^^^^60^70^private int runningState = STATE_UNSTARTED;^[CLASS] StopWatch   [VARIABLES] 
[P12_Insert_Condition]^if ( this.runningState == STATE_RUNNING )  { private int runningState = STATE_UNSTARTED; }^65^^^^^60^70^private int runningState = STATE_UNSTARTED;^[CLASS] StopWatch   [VARIABLES] 
[P12_Insert_Condition]^if ( this.runningState != STATE_RUNNING )  { private int runningState = STATE_UNSTARTED; }^65^^^^^60^70^private int runningState = STATE_UNSTARTED;^[CLASS] StopWatch   [VARIABLES] 
[P12_Insert_Condition]^if ( this.runningState != STATE_UNSTARTED )  { private int runningState = STATE_UNSTARTED; }^65^^^^^60^70^private int runningState = STATE_UNSTARTED;^[CLASS] StopWatch   [VARIABLES] 
[P1_Replace_Type]^private  long  splitState   = STATE_UNSPLIT;^70^^^^^65^75^private int splitState   = STATE_UNSPLIT;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private  short  splitState   = STATE_UNSPLIT;^70^^^^^65^75^private int splitState   = STATE_UNSPLIT;^[CLASS] StopWatch   [VARIABLES] 
[P12_Insert_Condition]^if ( this.splitState != STATE_SPLIT )  { private int splitState   = STATE_UNSPLIT; }^70^^^^^65^75^private int splitState   = STATE_UNSPLIT;^[CLASS] StopWatch   [VARIABLES] 
[P1_Replace_Type]^private  int  startTime = -1;^75^^^^^70^80^private long startTime = -1;^[CLASS] StopWatch   [VARIABLES] 
[P3_Replace_Literal]^private long startTime = --5;^75^^^^^70^80^private long startTime = -1;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private long startTime = -4;^75^^^^^70^80^private long startTime = -1;^[CLASS] StopWatch   [VARIABLES] 
[P1_Replace_Type]^private  short  stopTime = -1;^79^^^^^74^84^private long stopTime = -1;^[CLASS] StopWatch   [VARIABLES] 
[P3_Replace_Literal]^private long stopTime = -3;^79^^^^^74^84^private long stopTime = -1;^[CLASS] StopWatch   [VARIABLES] 
[P8_Replace_Mix]^private long stopTime = -2;^79^^^^^74^84^private long stopTime = -1;^[CLASS] StopWatch   [VARIABLES] 
[P14_Delete_Statement]^^85^^^^^84^86^super (  ) ;^[CLASS] StopWatch  [METHOD] <init> [RETURN_TYPE] StopWatch()   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState <= STATE_STOPPED )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( splitState == STATE_STOPPED )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState == splitState )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_STOPPED == this.runningState )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^if ( ! this.runningState == STATE_STOPPED )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_UNSTARTED )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_SUSPENDED )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_RUNNING )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_RUNNING )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_UNSTARTED )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.splitState != STATE_SPLIT )  {^96^^^^^95^105^if ( this.runningState == STATE_STOPPED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Stopwatch must be reset before being restarted. ");^96^97^98^^^95^105^if ( this.runningState == STATE_STOPPED )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^96^97^98^^^95^105^if ( this.runningState == STATE_STOPPED )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {     return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ; }^96^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch must be split to get the split time. " ) ; }^96^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^96^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  &&  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^96^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch has not been split. " ) ; }^96^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch must be running to suspend. " ) ; }^96^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_UNSTARTED )  )  {     throw new IllegalStateException ( "Stopwatch already started. " ) ; }^96^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  {     throw new IllegalStateException ( "Stopwatch must be suspended to resume. " ) ; }^96^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Stopwatch must be running to suspend. " )   ;^97^^^^^95^105^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return 0;^97^^^^^95^105^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IllegalStateException  (" ")  ;^97^^^^^95^105^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_STOPPED )  )  {     throw new IllegalStateException ( "Stopwatch must be reset before being restarted. " ) ; }^97^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState <= STATE_UNSTARTED )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( runningState != STATE_UNSTARTED )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState != splitState )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_UNSTARTED != this.runningState )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^if ( splitState != STATE_UNSTARTED )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_UNSTARTED )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_SUSPENDED )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_STOPPED )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_RUNNING )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_RUNNING )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.splitState != STATE_SPLIT )  {^99^^^^^95^105^if ( this.runningState != STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Stopwatch already started. ");^99^100^101^^^95^105^if ( this.runningState != STATE_UNSTARTED )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^99^100^101^^^95^105^if ( this.runningState != STATE_UNSTARTED )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {     return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ; }^99^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch must be split to get the split time. " ) ; }^99^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^99^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  &&  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^99^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch has not been split. " ) ; }^99^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch must be running to suspend. " ) ; }^99^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  {     throw new IllegalStateException ( "Stopwatch must be suspended to resume. " ) ; }^99^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_STOPPED )  )  {     throw new IllegalStateException ( "Stopwatch must be reset before being restarted. " ) ; }^99^^^^^95^105^[Delete]^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Stopwatch must be running to suspend. " )   ;^100^^^^^95^105^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IllegalStateException  (" ")  ;^100^^^^^95^105^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P3_Replace_Literal]^stopTime = -;^102^^^^^95^105^stopTime = -1;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^stopTime = -1 + 2;^102^^^^^95^105^stopTime = -1;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime = -1;stopTime = -1;^102^^^^^95^105^stopTime = -1;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^startTime  =  startTime ;^103^^^^^95^105^startTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;startTime = System.currentTimeMillis (  ) ;^103^^^^^95^105^startTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^stopTime = System.currentTimeMillis (  ) ;startTime = System.currentTimeMillis (  ) ;^103^^^^^95^105^startTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P14_Delete_Statement]^^103^^^^^95^105^startTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^return System.currentTimeMillis (  )  - this.startTime;startTime = System.currentTimeMillis (  ) ;^103^^^^^95^105^startTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^this.runningState = STATE_UNSTARTED;^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^this.runningState ;^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_STOPPED;this.runningState = STATE_RUNNING;^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState = STATE_SPLIT;this.runningState = STATE_RUNNING;^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState   = STATE_UNSPLIT;this.runningState = STATE_RUNNING;^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_UNSTARTED;this.runningState = STATE_RUNNING;^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_SUSPENDED;this.runningState = STATE_RUNNING;^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_UNSTARTED )  { this.runningState = STATE_RUNNING; }^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_SUSPENDED )  { this.runningState = STATE_RUNNING; }^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_STOPPED )  { this.runningState = STATE_RUNNING; }^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_RUNNING )  { this.runningState = STATE_RUNNING; }^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_RUNNING )  { this.runningState = STATE_RUNNING; }^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_UNSTARTED )  { this.runningState = STATE_RUNNING; }^104^^^^^95^105^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] start [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState != STATE_RUNNING || this.runningState != STATE_SUSPENDED )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState <= STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState != STATE_RUNNING && this.runningState == STATE_SUSPENDED )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState != runningState && this.runningState != STATE_SUSPENDED )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState != STATE_RUNNING && this.runningState != splitState )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_SUSPENDED != STATE_RUNNING && this.runningState != this.runningState )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_RUNNING != this.runningState && this.runningState != STATE_SUSPENDED )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if ( this.runningState != STATE_RUNNING ) {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if (  this.runningState != STATE_SUSPENDED )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^115^^^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Stopwatch is not running. ");^115^116^117^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^115^116^117^^^114^120^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch must be split to get the split time. " ) ; }^115^^^^^114^120^[Delete]^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^115^^^^^114^120^[Delete]^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch has not been split. " ) ; }^115^^^^^114^120^[Delete]^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch must be running to suspend. " ) ; }^115^^^^^114^120^[Delete]^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_UNSTARTED )  )  {     throw new IllegalStateException ( "Stopwatch already started. " ) ; }^115^^^^^114^120^[Delete]^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_UNSTARTED )  )  {     return 0; }else     if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {         return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ;     }^115^^^^^114^120^[Delete]^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  {     throw new IllegalStateException ( "Stopwatch must be suspended to resume. " ) ; }^115^^^^^114^120^[Delete]^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_STOPPED )  )  {     throw new IllegalStateException ( "Stopwatch must be reset before being restarted. " ) ; }^115^^^^^114^120^[Delete]^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Stopwatch must be running to suspend. " )   ;^116^^^^^114^120^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return ;^116^^^^^114^120^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IllegalStateException  (" ")  ;^116^^^^^114^120^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^stopTime  =  stopTime ;^118^^^^^114^120^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;stopTime = System.currentTimeMillis (  ) ;^118^^^^^114^120^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime = System.currentTimeMillis (  ) ;stopTime = System.currentTimeMillis (  ) ;^118^^^^^114^120^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P14_Delete_Statement]^^118^119^^^^114^120^stopTime = System.currentTimeMillis (  ) ; this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^return System.currentTimeMillis (  )  - this.startTime;stopTime = System.currentTimeMillis (  ) ;^118^^^^^114^120^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^this.runningState = splitState;^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^this.runningState  = null ;^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState = STATE_SPLIT;this.runningState = STATE_STOPPED;^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_RUNNING;this.runningState = STATE_STOPPED;^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState   = STATE_UNSPLIT;this.runningState = STATE_STOPPED;^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_UNSTARTED;this.runningState = STATE_STOPPED;^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_SUSPENDED;this.runningState = STATE_STOPPED;^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_UNSTARTED )  { this.runningState = STATE_STOPPED; }^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_SUSPENDED )  { this.runningState = STATE_STOPPED; }^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_STOPPED )  { this.runningState = STATE_STOPPED; }^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_RUNNING )  { this.runningState = STATE_STOPPED; }^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_RUNNING )  { this.runningState = STATE_STOPPED; }^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_UNSTARTED )  { this.runningState = STATE_STOPPED; }^119^^^^^114^120^this.runningState = STATE_STOPPED;^[CLASS] StopWatch  [METHOD] stop [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^this.runningState = splitState;^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^this.runningState ;^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_STOPPED;this.runningState = STATE_UNSTARTED;^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState = STATE_SPLIT;this.runningState = STATE_UNSTARTED;^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_RUNNING;this.runningState = STATE_UNSTARTED;^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState   = STATE_UNSPLIT;this.runningState = STATE_UNSTARTED;^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_SUSPENDED;this.runningState = STATE_UNSTARTED;^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_UNSTARTED )  { this.runningState = STATE_UNSTARTED; }^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_SUSPENDED )  { this.runningState = STATE_UNSTARTED; }^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_STOPPED )  { this.runningState = STATE_UNSTARTED; }^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_RUNNING )  { this.runningState = STATE_UNSTARTED; }^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_RUNNING )  { this.runningState = STATE_UNSTARTED; }^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_UNSTARTED )  { this.runningState = STATE_UNSTARTED; }^128^^^^^127^132^this.runningState = STATE_UNSTARTED;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^this.splitState   = STATE_UNSTARTED;^129^^^^^127^132^this.splitState   = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^this.splitState    = null ;^129^^^^^127^132^this.splitState   = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_STOPPED;this.splitState   = STATE_UNSPLIT;^129^^^^^127^132^this.splitState   = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState = STATE_SPLIT;this.splitState   = STATE_UNSPLIT;^129^^^^^127^132^this.splitState   = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_RUNNING;this.splitState   = STATE_UNSPLIT;^129^^^^^127^132^this.splitState   = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_UNSTARTED;this.splitState   = STATE_UNSPLIT;^129^^^^^127^132^this.splitState   = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_SUSPENDED;this.splitState   = STATE_UNSPLIT;^129^^^^^127^132^this.splitState   = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.splitState != STATE_SPLIT )  { this.splitState   = STATE_UNSPLIT; startTime = -1; }^129^130^^^^127^132^this.splitState   = STATE_UNSPLIT; startTime = -1;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P3_Replace_Literal]^startTime = -;^130^^^^^127^132^startTime = -1;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^startTime = -0;^130^^^^^127^132^startTime = -1;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^stopTime = -1;startTime = -1;^130^^^^^127^132^startTime = -1;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P3_Replace_Literal]^stopTime = -STATE_SPLIT;^131^^^^^127^132^stopTime = -1;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^stopTime = -2;^131^^^^^127^132^stopTime = -1;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime = -1;stopTime = -1;^131^^^^^127^132^stopTime = -1;^[CLASS] StopWatch  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState >= STATE_RUNNING )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( splitState != STATE_RUNNING )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState != splitState )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_RUNNING != this.runningState )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_UNSTARTED )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_SUSPENDED )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_STOPPED )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_RUNNING )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_UNSTARTED )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.splitState != STATE_SPLIT )  {^144^^^^^143^149^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Stopwatch is not running. ");^144^145^146^^^143^149^if ( this.runningState != STATE_RUNNING )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^144^145^146^^^143^149^if ( this.runningState != STATE_RUNNING )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {     return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ; }^144^^^^^143^149^[Delete]^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch must be split to get the split time. " ) ; }^144^^^^^143^149^[Delete]^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  &&  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^144^^^^^143^149^[Delete]^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch has not been split. " ) ; }^144^^^^^143^149^[Delete]^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch must be running to suspend. " ) ; }^144^^^^^143^149^[Delete]^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_UNSTARTED )  )  {     throw new IllegalStateException ( "Stopwatch already started. " ) ; }^144^^^^^143^149^[Delete]^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  {     throw new IllegalStateException ( "Stopwatch must be suspended to resume. " ) ; }^144^^^^^143^149^[Delete]^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_STOPPED )  )  {     throw new IllegalStateException ( "Stopwatch must be reset before being restarted. " ) ; }^144^^^^^143^149^[Delete]^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Stopwatch must be running to suspend. " )   ;^145^^^^^143^149^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IllegalStateException  (" ")  ;^145^^^^^143^149^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^stopTime  = null ;^147^^^^^143^149^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;stopTime = System.currentTimeMillis (  ) ;^147^^^^^143^149^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime = System.currentTimeMillis (  ) ;stopTime = System.currentTimeMillis (  ) ;^147^^^^^143^149^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P14_Delete_Statement]^^147^148^^^^143^149^stopTime = System.currentTimeMillis (  ) ; this.splitState = STATE_SPLIT;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^return System.currentTimeMillis (  )  - this.startTime;stopTime = System.currentTimeMillis (  ) ;^147^^^^^143^149^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^this.splitState = STATE_UNSTARTED;^148^^^^^143^149^this.splitState = STATE_SPLIT;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^this.splitState ;^148^^^^^143^149^this.splitState = STATE_SPLIT;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_STOPPED;this.splitState = STATE_SPLIT;^148^^^^^143^149^this.splitState = STATE_SPLIT;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_RUNNING;this.splitState = STATE_SPLIT;^148^^^^^143^149^this.splitState = STATE_SPLIT;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState   = STATE_UNSPLIT;this.splitState = STATE_SPLIT;^148^^^^^143^149^this.splitState = STATE_SPLIT;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_UNSTARTED;this.splitState = STATE_SPLIT;^148^^^^^143^149^this.splitState = STATE_SPLIT;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_SUSPENDED;this.splitState = STATE_SPLIT;^148^^^^^143^149^this.splitState = STATE_SPLIT;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.splitState != STATE_SPLIT )  { this.splitState = STATE_SPLIT; }^148^^^^^143^149^this.splitState = STATE_SPLIT;^[CLASS] StopWatch  [METHOD] split [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.splitState <= STATE_SPLIT )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_UNSTARTED != STATE_SPLIT )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_SPLIT != this.splitState )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^if ( this.splitState != STATE_UNSTARTED )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_UNSTARTED )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_SUSPENDED )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_STOPPED )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_RUNNING )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_RUNNING )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_UNSTARTED )  {^160^^^^^159^165^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Stopwatch has not been split. ");^160^161^162^^^159^165^if ( this.splitState != STATE_SPLIT )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^160^161^162^^^159^165^if ( this.splitState != STATE_SPLIT )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {     return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ; }^160^^^^^159^165^[Delete]^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch must be split to get the split time. " ) ; }^160^^^^^159^165^[Delete]^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^160^^^^^159^165^[Delete]^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  &&  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^160^^^^^159^165^[Delete]^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch must be running to suspend. " ) ; }^160^^^^^159^165^[Delete]^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_UNSTARTED )  )  {     throw new IllegalStateException ( "Stopwatch already started. " ) ; }^160^^^^^159^165^[Delete]^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  {     throw new IllegalStateException ( "Stopwatch must be suspended to resume. " ) ; }^160^^^^^159^165^[Delete]^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_STOPPED )  )  {     throw new IllegalStateException ( "Stopwatch must be reset before being restarted. " ) ; }^160^^^^^159^165^[Delete]^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Stopwatch must be running to suspend. " )   ;^161^^^^^159^165^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IllegalStateException  (" ")  ;^161^^^^^159^165^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P3_Replace_Literal]^stopTime = -runningState;^163^^^^^159^165^stopTime = -1;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^stopTime = -2;^163^^^^^159^165^stopTime = -1;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime = -1;stopTime = -1;^163^^^^^159^165^stopTime = -1;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^this.splitState = STATE_UNSTARTED;^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^this.splitState ;^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_STOPPED;this.splitState = STATE_UNSPLIT;^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState = STATE_SPLIT;this.splitState = STATE_UNSPLIT;^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_RUNNING;this.splitState = STATE_UNSPLIT;^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_UNSTARTED;this.splitState = STATE_UNSPLIT;^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_SUSPENDED;this.splitState = STATE_UNSPLIT;^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_UNSTARTED )  { this.splitState = STATE_UNSPLIT; }^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_UNSTARTED )  { this.splitState = STATE_UNSPLIT; }^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.splitState != STATE_SPLIT )  { this.splitState = STATE_UNSPLIT; }^164^^^^^159^165^this.splitState = STATE_UNSPLIT;^[CLASS] StopWatch  [METHOD] unsplit [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState >= STATE_RUNNING )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( splitState != STATE_RUNNING )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState != runningState )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_RUNNING != this.runningState )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_UNSTARTED )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_SUSPENDED )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_STOPPED )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_RUNNING )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_UNSTARTED )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.splitState != STATE_SPLIT )  {^176^^^^^175^181^if ( this.runningState != STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Stopwatch must be running to suspend. ");^176^177^178^^^175^181^if ( this.runningState != STATE_RUNNING )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^176^177^178^^^175^181^if ( this.runningState != STATE_RUNNING )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {     return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ; }^176^^^^^175^181^[Delete]^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch must be split to get the split time. " ) ; }^176^^^^^175^181^[Delete]^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^176^^^^^175^181^[Delete]^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  &&  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^176^^^^^175^181^[Delete]^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch has not been split. " ) ; }^176^^^^^175^181^[Delete]^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_UNSTARTED )  )  {     throw new IllegalStateException ( "Stopwatch already started. " ) ; }^176^^^^^175^181^[Delete]^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  {     throw new IllegalStateException ( "Stopwatch must be suspended to resume. " ) ; }^176^^^^^175^181^[Delete]^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_STOPPED )  )  {     throw new IllegalStateException ( "Stopwatch must be reset before being restarted. " ) ; }^176^^^^^175^181^[Delete]^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Stopwatch has not been split. " )   ;^177^^^^^175^181^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IllegalStateException  (" ")  ;^177^^^^^175^181^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^stopTime  = null ;^179^^^^^175^181^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;stopTime = System.currentTimeMillis (  ) ;^179^^^^^175^181^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime = System.currentTimeMillis (  ) ;stopTime = System.currentTimeMillis (  ) ;^179^^^^^175^181^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P14_Delete_Statement]^^179^180^^^^175^181^stopTime = System.currentTimeMillis (  ) ; this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^return System.currentTimeMillis (  )  - this.startTime;stopTime = System.currentTimeMillis (  ) ;^179^^^^^175^181^stopTime = System.currentTimeMillis (  ) ;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^this.runningState ;^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_STOPPED;this.runningState = STATE_SUSPENDED;^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState = STATE_SPLIT;this.runningState = STATE_SUSPENDED;^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_RUNNING;this.runningState = STATE_SUSPENDED;^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState   = STATE_UNSPLIT;this.runningState = STATE_SUSPENDED;^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_UNSTARTED;this.runningState = STATE_SUSPENDED;^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_UNSTARTED )  { this.runningState = STATE_SUSPENDED; }^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_SUSPENDED )  { this.runningState = STATE_SUSPENDED; }^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_STOPPED )  { this.runningState = STATE_SUSPENDED; }^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_RUNNING )  { this.runningState = STATE_SUSPENDED; }^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_RUNNING )  { this.runningState = STATE_SUSPENDED; }^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_UNSTARTED )  { this.runningState = STATE_SUSPENDED; }^180^^^^^175^181^this.runningState = STATE_SUSPENDED;^[CLASS] StopWatch  [METHOD] suspend [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState >= STATE_SUSPENDED )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_UNSTARTED != STATE_SUSPENDED )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState != splitState )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_SUSPENDED != this.runningState )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^if ( this.runningState != runningState )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_UNSTARTED )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_STOPPED )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_RUNNING )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_RUNNING )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_UNSTARTED )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.splitState != STATE_SPLIT )  {^192^^^^^191^198^if ( this.runningState != STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Stopwatch must be suspended to resume. ");^192^193^194^^^191^198^if ( this.runningState != STATE_SUSPENDED )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^192^193^194^^^191^198^if ( this.runningState != STATE_SUSPENDED )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {     return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ; }^192^^^^^191^198^[Delete]^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch must be split to get the split time. " ) ; }^192^^^^^191^198^[Delete]^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^192^^^^^191^198^[Delete]^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  &&  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^192^^^^^191^198^[Delete]^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch has not been split. " ) ; }^192^^^^^191^198^[Delete]^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch must be running to suspend. " ) ; }^192^^^^^191^198^[Delete]^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_UNSTARTED )  )  {     throw new IllegalStateException ( "Stopwatch already started. " ) ; }^192^^^^^191^198^[Delete]^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_STOPPED )  )  {     throw new IllegalStateException ( "Stopwatch must be reset before being restarted. " ) ; }^192^^^^^191^198^[Delete]^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Stopwatch must be running to suspend. " )   ;^193^^^^^191^198^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IllegalStateException  (" ")  ;^193^^^^^191^198^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^throw new RuntimeException  (" ")  ; ;^193^^^^^191^198^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^startTime +=  ( System.currentTimeMillis (  )   >=  stopTime ) ;^195^^^^^191^198^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^startTime +=  ( System.currentTimeMillis (  )  - startTime ) ;^195^^^^^191^198^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^startTime + =  startTime +;^195^^^^^191^198^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime = System.currentTimeMillis (  ) ;startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^195^^^^^191^198^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^stopTime = System.currentTimeMillis (  ) ;startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^195^^^^^191^198^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P14_Delete_Statement]^^195^^^^^191^198^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^return System.currentTimeMillis (  )  - this.startTime;startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^195^^^^^191^198^startTime +=  ( System.currentTimeMillis (  )  - stopTime ) ;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P3_Replace_Literal]^stopTime = -STATE_SUSPENDED;^196^^^^^191^198^stopTime = -1;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^stopTime = -1 / 4;^196^^^^^191^198^stopTime = -1;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^startTime = -1;stopTime = -1;^196^^^^^191^198^stopTime = -1;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^this.runningState = runningState;^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^this.runningState  =  this.runningState ;^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_STOPPED;this.runningState = STATE_RUNNING;^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState = STATE_SPLIT;this.runningState = STATE_RUNNING;^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.splitState   = STATE_UNSPLIT;this.runningState = STATE_RUNNING;^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_UNSTARTED;this.runningState = STATE_RUNNING;^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^this.runningState = STATE_SUSPENDED;this.runningState = STATE_RUNNING;^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_UNSTARTED )  { this.runningState = STATE_RUNNING; }^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_SUSPENDED )  { this.runningState = STATE_RUNNING; }^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_STOPPED )  { this.runningState = STATE_RUNNING; }^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState == STATE_RUNNING )  { this.runningState = STATE_RUNNING; }^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_RUNNING )  { this.runningState = STATE_RUNNING; }^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P12_Insert_Condition]^if ( this.runningState != STATE_UNSTARTED )  { this.runningState = STATE_RUNNING; }^197^^^^^191^198^this.runningState = STATE_RUNNING;^[CLASS] StopWatch  [METHOD] resume [RETURN_TYPE] void   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState == STATE_STOPPED && this.runningState == STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState != STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState == STATE_STOPPED || this.runningState >= STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState >= STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( splitState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState == STATE_UNSTARTED || this.runningState == STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState == STATE_STOPPED || this.runningState == splitState )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_STOPPED == this.runningState || this.runningState == STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if ( this.runningState == STATE_STOPPED ) {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if (  this.runningState == STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if ( this.stopTime - this.startTime )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if ( this.runningState == STATE_UNSTARTED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if ( this.runningState == STATE_RUNNING )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if ( currentTimeMillis() - this.startTime )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^if ( ! this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED )  {^209^^^^^208^219^if ( this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_UNSTARTED )  )  {     return 0; }else     if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {         return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ;     }^209^^^^^208^219^[Delete]^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState != STATE_UNSTARTED )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState <= STATE_UNSTARTED )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( splitState == STATE_UNSTARTED )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState == splitState )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_UNSTARTED == this.runningState )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if ( this.runningState == STATE_RUNNING )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if ( currentTimeMillis() - this.startTime )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^if ( ! this.runningState == STATE_UNSTARTED )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_SUSPENDED )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_STOPPED )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_RUNNING )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.splitState != STATE_SPLIT )  {^212^^^^^208^219^if ( this.runningState == STATE_UNSTARTED )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^return 0;^212^213^214^215^216^208^219^if ( this.runningState == STATE_UNSTARTED )  { return 0; } else if ( this.runningState == STATE_RUNNING )  { return System.currentTimeMillis (  )  - this.startTime; }^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^212^213^214^215^216^208^219^if ( this.runningState == STATE_UNSTARTED )  { return 0; } else if ( this.runningState == STATE_RUNNING )  { return System.currentTimeMillis (  )  - this.startTime; }^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState < STATE_RUNNING )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( splitState == STATE_RUNNING )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState == runningState )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_RUNNING == this.runningState )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P6_Replace_Expression]^if ( currentTimeMillis() - this.startTime )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_UNSTARTED )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_SUSPENDED )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_STOPPED )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_RUNNING )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_UNSTARTED )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.splitState != STATE_SPLIT )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^return (java.lang.System.currentTimeMillis()) - (this.startTime);^215^216^217^^^208^219^if ( this.runningState == STATE_RUNNING )  { return System.currentTimeMillis (  )  - this.startTime; }^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^215^216^217^^^208^219^if ( this.runningState == STATE_RUNNING )  { return System.currentTimeMillis (  )  - this.startTime; }^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch must be split to get the split time. " ) ; }^215^^^^^208^219^[Delete]^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^215^^^^^208^219^[Delete]^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch has not been split. " ) ; }^215^^^^^208^219^[Delete]^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch must be running to suspend. " ) ; }^215^^^^^208^219^[Delete]^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_UNSTARTED )  )  {     throw new IllegalStateException ( "Stopwatch already started. " ) ; }^215^^^^^208^219^[Delete]^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_UNSTARTED )  )  {     return 0; }else     if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {         return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ;     }^215^^^^^208^219^[Delete]^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  {     throw new IllegalStateException ( "Stopwatch must be suspended to resume. " ) ; }^215^^^^^208^219^[Delete]^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_STOPPED )  )  {     throw new IllegalStateException ( "Stopwatch must be reset before being restarted. " ) ; }^215^^^^^208^219^[Delete]^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^return System.currentTimeMillis (  )   !=  this.startTime;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^return System.currentTimeMillis (  )  - stopTime;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P14_Delete_Statement]^^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^return System.currentTimeMillis (  )   >  this.startTime;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return System.currentTimeMillis (  )   |  this.startTime;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P3_Replace_Literal]^return ;^213^^^^^208^219^return 0;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return 0L;^213^^^^^208^219^return 0;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.runningState > STATE_RUNNING )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return System.currentTimeMillis (  )   ;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P3_Replace_Literal]^return -4;^213^^^^^208^219^return 0;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return 0 >> 3;^213^^^^^208^219^return 0;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^return System.currentTimeMillis (  )   &  this.startTime;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^return this.stopTime  ==  this.startTime;^210^^^^^208^219^return this.stopTime - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^return stopTime - this.startTime;^210^^^^^208^219^return this.stopTime - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^return this.stopTime - stopTime;^210^^^^^208^219^return this.stopTime - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^return this.startTime - this.stopTime;^210^^^^^208^219^return this.stopTime - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return stopTime - stopTime;^210^^^^^208^219^return this.stopTime - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( runningState == STATE_RUNNING )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.runningState == splitState )  {^215^^^^^208^219^if ( this.runningState == STATE_RUNNING )  {^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return System.currentTimeMillis (  )   &&  this.startTime;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^return System.currentTimeMillis (  )   <=  this.startTime;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return false ;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P3_Replace_Literal]^return -8;^213^^^^^208^219^return 0;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return 1;^213^^^^^208^219^return 0;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^return System.currentTimeMillis (  )    instanceof   this.startTime;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return System.currentTimeMillis (  )   !=  this.startTime;;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^return this.stopTime  <  this.startTime;^210^^^^^208^219^return this.stopTime - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P3_Replace_Literal]^return STATE_RUNNING;^213^^^^^208^219^return 0;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^return 4;^213^^^^^208^219^return 0;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^return System.currentTimeMillis (  )   ||  this.startTime;^216^^^^^208^219^return System.currentTimeMillis (  )  - this.startTime;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new RuntimeException  (" ")  ;^218^^^^^208^219^throw new RuntimeException  (" ")  ;^[CLASS] StopWatch  [METHOD] getTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^if ( this.splitState == STATE_SPLIT )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( splitState != STATE_SPLIT )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( this.splitState != STATE_UNSTARTED )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^if ( STATE_SPLIT != this.splitState )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_UNSTARTED )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_SUSPENDED )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_STOPPED )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState == STATE_RUNNING )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_RUNNING )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P9_Replace_Statement]^if ( this.runningState != STATE_UNSTARTED )  {^232^^^^^231^236^if ( this.splitState != STATE_SPLIT )  {^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Stopwatch must be split to get the split time. ");^232^233^234^^^231^236^if ( this.splitState != STATE_SPLIT )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P16_Remove_Block]^^232^233^234^^^231^236^if ( this.splitState != STATE_SPLIT )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_RUNNING )  )  {     return  ( currentTimeMillis (  )  )  -  ( this.startTime ) ; }^232^^^^^231^236^[Delete]^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^232^^^^^231^236^[Delete]^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  &&  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  )  {     throw new IllegalStateException ( "Stopwatch is not running. " ) ; }^232^^^^^231^236^[Delete]^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch has not been split. " ) ; }^232^^^^^231^236^[Delete]^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_RUNNING )  )  {     throw new IllegalStateException ( "Stopwatch must be running to suspend. " ) ; }^232^^^^^231^236^[Delete]^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_UNSTARTED )  )  {     throw new IllegalStateException ( "Stopwatch already started. " ) ; }^232^^^^^231^236^[Delete]^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  !=  ( STATE_SUSPENDED )  )  {     throw new IllegalStateException ( "Stopwatch must be suspended to resume. " ) ; }^232^^^^^231^236^[Delete]^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.runningState )  ==  ( STATE_STOPPED )  )  {     throw new IllegalStateException ( "Stopwatch must be reset before being restarted. " ) ; }^232^^^^^231^236^[Delete]^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Stopwatch must be running to suspend. " )   ;^233^^^^^231^236^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P8_Replace_Mix]^throw new RuntimeException  (" ")  ; ;^233^^^^^231^236^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IllegalStateException  (" ")  ;^233^^^^^231^236^throw new IllegalStateException  (" ")  ;^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P13_Insert_Block]^if  (  ( this.splitState )  !=  ( STATE_SPLIT )  )  {     throw new IllegalStateException ( "Stopwatch must be split to get the split time. " ) ; }^233^^^^^231^236^[Delete]^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P2_Replace_Operator]^return this.stopTime  &&  this.startTime;^235^^^^^231^236^return this.stopTime - this.startTime;^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^return this.stopTime - stopTime;^235^^^^^231^236^return this.stopTime - this.startTime;^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P5_Replace_Variable]^return this.startTime - this.stopTime;^235^^^^^231^236^return this.stopTime - this.startTime;^[CLASS] StopWatch  [METHOD] getSplitTime [RETURN_TYPE] long   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P7_Replace_Invocation]^return DurationFormatUtils.formatDurationHMS ( getSplitTime (  )  ) ;^247^^^^^246^248^return DurationFormatUtils.formatDurationHMS ( getTime (  )  ) ;^[CLASS] StopWatch  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P14_Delete_Statement]^^247^248^^^^246^248^return DurationFormatUtils.formatDurationHMS ( getTime (  )  ) ; }^[CLASS] StopWatch  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P7_Replace_Invocation]^return DurationFormatUtils.formatDurationHMS ( getTime (  )  ) ;^260^^^^^259^261^return DurationFormatUtils.formatDurationHMS ( getSplitTime (  )  ) ;^[CLASS] StopWatch  [METHOD] toSplitString [RETURN_TYPE] String   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
[P14_Delete_Statement]^^260^261^^^^259^261^return DurationFormatUtils.formatDurationHMS ( getSplitTime (  )  ) ; }^[CLASS] StopWatch  [METHOD] toSplitString [RETURN_TYPE] String   [VARIABLES] int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  
