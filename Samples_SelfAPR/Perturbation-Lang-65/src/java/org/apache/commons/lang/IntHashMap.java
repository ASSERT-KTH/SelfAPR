[P1_Replace_Type]^private transient  short  count;^47^^^^^42^52^private transient int count;^[CLASS] IntHashMap Entry   [VARIABLES] 
[P1_Replace_Type]^private  long  threshold;^55^^^^^50^60^private int threshold;^[CLASS] IntHashMap Entry   [VARIABLES] 
[P8_Replace_Mix]^private  short  threshold;^55^^^^^50^60^private int threshold;^[CLASS] IntHashMap Entry   [VARIABLES] 
[P1_Replace_Type]^private int loadFactor;^62^^^^^57^67^private float loadFactor;^[CLASS] IntHashMap Entry   [VARIABLES] 
[P1_Replace_Type]^short  hash;^69^^^^^64^74^int hash;^[CLASS] IntHashMap Entry   [VARIABLES] 
[P8_Replace_Mix]^long  hash;^69^^^^^64^74^int hash;^[CLASS] IntHashMap Entry   [VARIABLES] 
[P1_Replace_Type]^long  key;^70^^^^^65^75^int key;^[CLASS] IntHashMap Entry   [VARIABLES] 
[P8_Replace_Mix]^short  key;^70^^^^^65^75^int key;^[CLASS] IntHashMap Entry   [VARIABLES] 
[P5_Replace_Variable]^this.hash = threshold;^83^^^^^82^87^this.hash = hash;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this.value = value;this.hash = hash;^83^^^^^82^87^this.hash = hash;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this.next = next;this.hash = hash;^83^^^^^82^87^this.hash = hash;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this.key = key;this.hash = hash;^83^^^^^82^87^this.hash = hash;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P5_Replace_Variable]^this.key = threshold;^84^^^^^82^87^this.key = key;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this.hash = hash;this.key = key;^84^^^^^82^87^this.key = key;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this.next = next;this.key = key;^84^^^^^82^87^this.key = key;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P8_Replace_Mix]^this.value =  null;^85^^^^^82^87^this.value = value;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this.hash = hash;this.value = value;^85^^^^^82^87^this.value = value;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^e.value = null;this.value = value;^85^^^^^82^87^this.value = value;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^e.value = value;this.value = value;^85^^^^^82^87^this.value = value;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P8_Replace_Mix]^this.next =  null;^86^^^^^82^87^this.next = next;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this.hash = hash;this.next = next;^86^^^^^82^87^this.next = next;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^tab[index] = e.next;this.next = next;^86^^^^^82^87^this.next = next;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^prev.next = e.next;this.next = next;^86^^^^^82^87^this.next = next;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this.key = key;this.next = next;^86^^^^^82^87^this.next = next;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P3_Replace_Literal]^this ( count, 0.75f ) ;^95^^^^^94^96^this ( 20, 0.75f ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap()   [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P14_Delete_Statement]^^95^^^^^94^96^this ( 20, 0.75f ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap()   [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this ( initialCapacity, 0.75f ) ;this ( 20, 0.75f ) ;^95^^^^^94^96^this ( 20, 0.75f ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap()   [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  key  threshold  Entry[]  table  
[P8_Replace_Mix]^this ( threshold, 0.75f ) ;^107^^^^^106^108^this ( initialCapacity, 0.75f ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int)   int initialCapacity [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P14_Delete_Statement]^^107^^^^^106^108^this ( initialCapacity, 0.75f ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int)   int initialCapacity [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^this ( 20, 0.75f ) ;this ( initialCapacity, 0.75f ) ;^107^^^^^106^108^this ( initialCapacity, 0.75f ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int)   int initialCapacity [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P12_Insert_Condition]^if  ( initialCapacity < 0 )  { this ( initialCapacity, 0.75f ) ; }^107^^^^^106^108^this ( initialCapacity, 0.75f ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int)   int initialCapacity [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P12_Insert_Condition]^if  ( initialCapacity == 0 )  { this ( initialCapacity, 0.75f ) ; }^107^^^^^106^108^this ( initialCapacity, 0.75f ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int)   int initialCapacity [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P14_Delete_Statement]^^120^^^^^119^134^super (  ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^rehash (  ) ;super (  ) ;^120^^^^^119^134^super (  ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P2_Replace_Operator]^if  ( initialCapacity <= 0 )  {^121^^^^^119^134^if  ( initialCapacity < 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P3_Replace_Literal]^if  ( initialCapacity < initialCapacity )  {^121^^^^^119^134^if  ( initialCapacity < 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P5_Replace_Variable]^if  ( threshold < 0 )  {^121^^^^^119^134^if  ( initialCapacity < 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P6_Replace_Expression]^if  ( "Illegal Capacity: " + initialCapacity )  {^121^^^^^119^134^if  ( initialCapacity < 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^if  ( initialCapacity < 1 )  {^121^^^^^119^134^if  ( initialCapacity < 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P9_Replace_Statement]^if  ( initialCapacity == 0 )  {^121^^^^^119^134^if  ( initialCapacity < 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Illegal Capacity: " + initialCapacity));^121^122^123^^^119^134^if  ( initialCapacity < 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P16_Remove_Block]^^121^122^123^^^119^134^if  ( initialCapacity < 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P13_Insert_Block]^if  ( loadFactor <= 0 )  {     throw new IllegalArgumentException (  ( "Illegal Load: " + loadFactor )  ) ; }^121^^^^^119^134^[Delete]^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "Illegal Load: " + loadFactor )  )   ;^122^^^^^119^134^throw new IllegalArgumentException  (" ")  ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P13_Insert_Block]^if  ( initialCapacity < 0 )  {     throw new IllegalArgumentException (  ( "Illegal Capacity: " + initialCapacity )  ) ; }^122^^^^^119^134^[Delete]^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^122^^^^^119^134^throw new IllegalArgumentException  (" ")  ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P13_Insert_Block]^if  ( loadFactor <= 0 )  {     throw new IllegalArgumentException (  ( "Illegal Load: " + loadFactor )  ) ; }^122^^^^^119^134^[Delete]^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P2_Replace_Operator]^if  ( loadFactor < 0 )  {^124^^^^^119^134^if  ( loadFactor <= 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P3_Replace_Literal]^if  ( loadFactor <= -8 )  {^124^^^^^119^134^if  ( loadFactor <= 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P6_Replace_Expression]^if  ( "Illegal Load: " + loadFactor )  {^124^^^^^119^134^if  ( loadFactor <= 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^if  ( loadFactor <= 3 )  {^124^^^^^119^134^if  ( loadFactor <= 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Illegal Load: " + loadFactor));^124^125^126^^^119^134^if  ( loadFactor <= 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P16_Remove_Block]^^124^125^126^^^119^134^if  ( loadFactor <= 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P13_Insert_Block]^if  ( initialCapacity < 0 )  {     throw new IllegalArgumentException (  ( "Illegal Capacity: " + initialCapacity )  ) ; }^124^^^^^119^134^[Delete]^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "Illegal Capacity: " + initialCapacity )  )   ;^125^^^^^119^134^throw new IllegalArgumentException  (" ")  ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P13_Insert_Block]^if  ( loadFactor <= 0 )  {     throw new IllegalArgumentException (  ( "Illegal Load: " + loadFactor )  ) ; }^125^^^^^119^134^[Delete]^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P13_Insert_Block]^if  ( initialCapacity < 0 )  {     throw new IllegalArgumentException (  ( "Illegal Capacity: " + initialCapacity )  ) ; }^125^^^^^119^134^[Delete]^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^125^^^^^119^134^throw new IllegalArgumentException  (" ")  ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P2_Replace_Operator]^if  ( initialCapacity <= 0 )  {^127^^^^^119^134^if  ( initialCapacity == 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P3_Replace_Literal]^if  ( initialCapacity == threshold )  {^127^^^^^119^134^if  ( initialCapacity == 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P5_Replace_Variable]^if  ( threshold == 0 )  {^127^^^^^119^134^if  ( initialCapacity == 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^if  ( initialCapacity == 1 )  {^127^^^^^119^134^if  ( initialCapacity == 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P9_Replace_Statement]^if  ( initialCapacity < 0 )  {^127^^^^^119^134^if  ( initialCapacity == 0 )  {^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P15_Unwrap_Block]^initialCapacity = 1;^127^128^129^^^119^134^if  ( initialCapacity == 0 )  { initialCapacity = 1; }^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P16_Remove_Block]^^127^128^129^^^119^134^if  ( initialCapacity == 0 )  { initialCapacity = 1; }^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P3_Replace_Literal]^initialCapacity = 5;^128^^^^^119^134^initialCapacity = 1;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^initialCapacity = 2;^128^^^^^119^134^initialCapacity = 1;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P12_Insert_Condition]^if  ( initialCapacity < 0 )  { initialCapacity = 1; }^128^^^^^119^134^initialCapacity = 1;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P12_Insert_Condition]^if  ( initialCapacity == 0 )  { initialCapacity = 1; }^128^^^^^119^134^initialCapacity = 1;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P3_Replace_Literal]^initialCapacity = 4;^128^^^^^119^134^initialCapacity = 1;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^initialCapacity = 1 * 0;^128^^^^^119^134^initialCapacity = 1;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^this.loadFactor =  null;^131^^^^^119^134^this.loadFactor = loadFactor;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^table =  new Entry[threshold];^132^^^^^119^134^table = new Entry[initialCapacity];^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P1_Replace_Type]^threshold =  (  long  )   ( initialCapacity * loadFactor ) ;^133^^^^^119^134^threshold =  ( int )   ( initialCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P2_Replace_Operator]^threshold =  ( int )   ( initialCapacity + loadFactor ) ;^133^^^^^119^134^threshold =  ( int )   ( initialCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P5_Replace_Variable]^threshold =  ( int )   ( threshold * loadFactor ) ;^133^^^^^119^134^threshold =  ( int )   ( initialCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P5_Replace_Variable]^threshold =  ( int )   ( loadFactor * initialCapacity ) ;^133^^^^^119^134^threshold =  ( int )   ( initialCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^threshold =   ( int )   ( key * loadFactor ) ;^133^^^^^119^134^threshold =  ( int )   ( initialCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P11_Insert_Donor_Statement]^threshold =  ( int )   ( newCapacity * loadFactor ) ;threshold =  ( int )   ( initialCapacity * loadFactor ) ;^133^^^^^119^134^threshold =  ( int )   ( initialCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap(int,float)   int initialCapacity float loadFactor [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P5_Replace_Variable]^return threshold;^142^^^^^141^143^return count;^[CLASS] IntHashMap Entry  [METHOD] size [RETURN_TYPE] int   [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^return key;^142^^^^^141^143^return count;^[CLASS] IntHashMap Entry  [METHOD] size [RETURN_TYPE] int   [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P2_Replace_Operator]^return count <= 0;^152^^^^^151^153^return count == 0;^[CLASS] IntHashMap Entry  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P3_Replace_Literal]^return count == ;^152^^^^^151^153^return count == 0;^[CLASS] IntHashMap Entry  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P5_Replace_Variable]^return threshold == 0;^152^^^^^151^153^return count == 0;^[CLASS] IntHashMap Entry  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P8_Replace_Mix]^return true ;^152^^^^^151^153^return count == 0;^[CLASS] IntHashMap Entry  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Entry  next  Object  value  boolean  float  loadFactor  int  count  hash  initialCapacity  key  threshold  Entry[]  table  
[P2_Replace_Operator]^if  ( value != null )  {^174^^^^^173^187^if  ( value == null )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^if  ( value == true )  {^174^^^^^173^187^if  ( value == null )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P9_Replace_Statement]^if  ( prev != null )  {^174^^^^^173^187^if  ( value == null )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P15_Unwrap_Block]^throw new java.lang.NullPointerException();^174^175^176^^^173^187^if  ( value == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P16_Remove_Block]^^174^175^176^^^173^187^if  ( value == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P13_Insert_Block]^if  ( value == null )  {     throw new NullPointerException (  ) ; }^175^^^^^173^187^[Delete]^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^return 0;^175^^^^^173^187^throw new NullPointerException  (" ")  ;^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NullPointerException  (" ")  ;^175^^^^^173^187^throw new NullPointerException  (" ")  ;^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^175^^^^^173^187^throw new NullPointerException  (" ")  ;^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P11_Insert_Donor_Statement]^Entry oldMap[] = table;Entry tab[] = table;^178^^^^^173^187^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P11_Insert_Donor_Statement]^Entry e = old;Entry tab[] = table;^178^^^^^173^187^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( next.value.equals ( value )  )  {^181^^^^^173^187^if  ( e.value.equals ( value )  )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( value.value.equals ( e )  )  {^181^^^^^173^187^if  ( e.value.equals ( value )  )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( value.equals ( e.value )  )  {^181^^^^^173^187^if  ( e.value.equals ( value )  )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P15_Unwrap_Block]^return true;^181^182^183^^^173^187^if  ( e.value.equals ( value )  )  { return true; }^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P16_Remove_Block]^^181^182^183^^^173^187^if  ( e.value.equals ( value )  )  { return true; }^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P13_Insert_Block]^if  (  ( e.hash )  == hash )  {     return e.value; }^181^^^^^173^187^[Delete]^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P13_Insert_Block]^if  (  ( e.hash )  == hash )  {     return true; }^181^^^^^173^187^[Delete]^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P3_Replace_Literal]^return false;^182^^^^^173^187^return true;^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P1_Replace_Type]^for  (  long  i = tab.length; i-- > 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^for  ( int i = tab.length; i-- >= 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P3_Replace_Literal]^for  ( int i = tab.length; i-- > 7; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( int i = table.length; i-- > 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( thresholdnt i = tab.length; i-- > 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( int i = threshold; i-- > 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( tabnt i = i.length; i-- > 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( tab.lengthnt i = i; i-- > 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^if  ( value.equals ( value )  )  {^181^^^^^173^187^if  ( e.value.equals ( value )  )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^for  ( Entry e = tab[i]; e == null; e = e.next )  {^180^^^^^173^187^for  ( Entry e = tab[i]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e = table[i]; e != null; e = e.next )  {^180^^^^^173^187^for  ( Entry e = tab[i]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry next = tab[i]; e != null; e = e.next )  {^180^^^^^173^187^for  ( Entry e = tab[i]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e = tab[i]; e != null; e = next )  {^180^^^^^173^187^for  ( Entry e = tab[i]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry tab = e[i]; e != null; e = e.next )  {^180^^^^^173^187^for  ( Entry e = tab[i]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e = e.next[i]; e != null; e = tab )  {^180^^^^^173^187^for  ( Entry e = tab[i]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( e.value.value.equals ( value )  )  {^181^^^^^173^187^if  ( e.value.equals ( value )  )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( e.equals ( value )  )  {^181^^^^^173^187^if  ( e.value.equals ( value )  )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e.next = tab[i]; e != null; e = e )  {^180^^^^^173^187^for  ( Entry e = tab[i]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^for  ( Entry e =  tab[i]; null !^180^^^^^173^187^for  ( Entry e = tab[i]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^for  ( Entry e =  tab[i]; next !^180^^^^^173^187^for  ( Entry e = tab[i]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P1_Replace_Type]^for  (  short  i = tab.length; i-- > 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( int i = tab.length.length; i-- > 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( int i = tab; i-- > 0; )  {^179^^^^^173^187^for  ( int i = tab.length; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P3_Replace_Literal]^return true;^186^^^^^173^187^return false;^[CLASS] IntHashMap Entry  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P7_Replace_Invocation]^return containsValue ( value ) ;^202^^^^^201^203^return contains ( value ) ;^[CLASS] IntHashMap Entry  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P14_Delete_Statement]^^202^^^^^201^203^return contains ( value ) ;^[CLASS] IntHashMap Entry  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  initialCapacity  key  threshold  Entry[]  tab  table  
[P11_Insert_Donor_Statement]^Entry oldMap[] = table;Entry tab[] = table;^215^^^^^214^224^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P11_Insert_Donor_Statement]^Entry e = old;Entry tab[] = table;^215^^^^^214^224^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P1_Replace_Type]^long  hash = key;^216^^^^^214^224^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int hash = threshold;^216^^^^^214^224^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P1_Replace_Type]^short  index =  ( hash & 0x7FFFFFFF )  % tab.length;^217^^^^^214^224^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^int index =  ( hash & 0x7FFFFFFF )   <<  tab.length;^217^^^^^214^224^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^int index =  ( hash   instanceof   0x7FFFFFFF )  % tab.length;^217^^^^^214^224^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( threshold & 0x7FFFFFFF )  % tab.length;^217^^^^^214^224^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % table.length;^217^^^^^214^224^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % key;^217^^^^^214^224^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( tab.length & 0x7FFFFFFF )  % hash;^217^^^^^214^224^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % tab.length.length;^217^^^^^214^224^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P11_Insert_Donor_Statement]^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;int index =  ( hash & 0x7FFFFFFF )  % tab.length;^217^^^^^214^224^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^if  ( e.hash != hash )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( next.hash == hash )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( e.hash == initialCapacity )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( key == hash )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( e.hash.hash == hash )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( hash == e.hash )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^if  ( threshold == hash )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P15_Unwrap_Block]^return true;^219^220^221^^^214^224^if  ( e.hash == hash )  { return true; }^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P16_Remove_Block]^^219^220^221^^^214^224^if  ( e.hash == hash )  { return true; }^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P13_Insert_Block]^if  (  ( e.hash )  == hash )  {     return e.value; }^219^^^^^214^224^[Delete]^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P13_Insert_Block]^if  ( equals ( value )  )  {     return true; }^219^^^^^214^224^[Delete]^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P3_Replace_Literal]^return false;^220^^^^^214^224^return true;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^for  ( Entry e = tab[index]; e == null; e = e.next )  {^218^^^^^214^224^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e = table[index]; e != null; e = e.next )  {^218^^^^^214^224^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry next = tab[index]; e != null; e = e.next )  {^218^^^^^214^224^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e = tab[index]; e != null; e = next )  {^218^^^^^214^224^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e.next = tab[index]; e != null; e = e )  {^218^^^^^214^224^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^if  ( e.hash >= hash )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( e.hash == threshold )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( initialCapacity == hash )  {^219^^^^^214^224^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^for  ( Entry e =  tab[indnextx]; next !^218^^^^^214^224^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P3_Replace_Literal]^return true;^223^^^^^214^224^return false;^[CLASS] IntHashMap Entry  [METHOD] containsKey [RETURN_TYPE] boolean   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P11_Insert_Donor_Statement]^Entry oldMap[] = table;Entry tab[] = table;^236^^^^^235^245^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P11_Insert_Donor_Statement]^Entry e = old;Entry tab[] = table;^236^^^^^235^245^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P1_Replace_Type]^long  hash = key;^237^^^^^235^245^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int hash = threshold;^237^^^^^235^245^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^int hash = initialCapacity;^237^^^^^235^245^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P1_Replace_Type]^short  index =  ( hash & 0x7FFFFFFF )  % tab.length;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^int index =  ( hash & 0x7FFFFFFF )   &  tab.length;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^int index =  ( hash   instanceof   0x7FFFFFFF )  % tab.length;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( threshold & 0x7FFFFFFF )  % tab.length;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % key;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( tab.length & 0x7FFFFFFF )  % hash;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % tab.length.length;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % tab;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^int index =  ( hash & 0x7FFFFFFF )  % table.length;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P11_Insert_Donor_Statement]^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;int index =  ( hash & 0x7FFFFFFF )  % tab.length;^238^^^^^235^245^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^if  ( e.hash != hash )  {^240^^^^^235^245^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( next.hash == hash )  {^240^^^^^235^245^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( e.hash == initialCapacity )  {^240^^^^^235^245^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( threshold == hash )  {^240^^^^^235^245^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( e.hash.hash == hash )  {^240^^^^^235^245^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( hash == e.hash )  {^240^^^^^235^245^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P15_Unwrap_Block]^return e.value;^240^241^242^^^235^245^if  ( e.hash == hash )  { return e.value; }^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P16_Remove_Block]^^240^241^242^^^235^245^if  ( e.hash == hash )  { return e.value; }^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P13_Insert_Block]^if  ( equals ( value )  )  {     return true; }^240^^^^^235^245^[Delete]^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P13_Insert_Block]^if  (  ( e.hash )  == hash )  {     return true; }^240^^^^^235^245^[Delete]^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^return next.value;^241^^^^^235^245^return e.value;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^return value;^241^^^^^235^245^return e.value;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^return e.value.value;^241^^^^^235^245^return e.value;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^return e;^241^^^^^235^245^return e.value;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P2_Replace_Operator]^for  ( Entry e = tab[index]; e == null; e = e.next )  {^239^^^^^235^245^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e = table[index]; e != null; e = e.next )  {^239^^^^^235^245^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry next = tab[index]; e != null; e = e.next )  {^239^^^^^235^245^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e = tab[index]; e != null; e = next )  {^239^^^^^235^245^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^for  ( Entry e.next = tab[index]; e != null; e = e )  {^239^^^^^235^245^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P5_Replace_Variable]^if  ( e.hash == key )  {^240^^^^^235^245^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^if  ( key == hash )  {^240^^^^^235^245^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^for  ( Entry e =  tab[indnextx]; next !^239^^^^^235^245^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P8_Replace_Mix]^return this;^244^^^^^235^245^return null;^[CLASS] IntHashMap Entry  [METHOD] get [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  threshold  Entry[]  tab  table  
[P1_Replace_Type]^long  oldCapacity = table.length;^257^^^^^256^276^int oldCapacity = table.length;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int oldCapacity = threshold;^257^^^^^256^276^int oldCapacity = table.length;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int oldCapacity = tab.length;^257^^^^^256^276^int oldCapacity = table.length;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int oldCapacity = table;^257^^^^^256^276^int oldCapacity = table.length;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int oldCapacity = table.length.length;^257^^^^^256^276^int oldCapacity = table.length;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^int oldCapacity = initialCapacity;^257^^^^^256^276^int oldCapacity = table.length;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry oldMap[] = tab;^258^^^^^256^276^Entry oldMap[] = table;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Entry tab[] = table;Entry oldMap[] = table;^258^^^^^256^276^Entry oldMap[] = table;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^long  newCapacity = oldCapacity * 2 + 1;^260^^^^^256^276^int newCapacity = oldCapacity * 2 + 1;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int newCapacity = oldCapacity / 2 + 1;^260^^^^^256^276^int newCapacity = oldCapacity * 2 + 1;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P3_Replace_Literal]^int newCapacity = oldCapacity *  + 1;^260^^^^^256^276^int newCapacity = oldCapacity * 2 + 1;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P3_Replace_Literal]^int newCapacity = oldCapacity * 2 + threshold;^260^^^^^256^276^int newCapacity = oldCapacity * 2 + 1;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int newCapacity = threshold * 2 + 1;^260^^^^^256^276^int newCapacity = oldCapacity * 2 + 1;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^threshold =  (  long  )   ( newCapacity * loadFactor ) ;^263^^^^^256^276^threshold =  ( int )   ( newCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^threshold =  ( int )   ( newCapacity + loadFactor ) ;^263^^^^^256^276^threshold =  ( int )   ( newCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^threshold =  ( int )   ( initialCapacity * loadFactor ) ;^263^^^^^256^276^threshold =  ( int )   ( newCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^threshold =  ( int )   ( loadFactor * newCapacity ) ;^263^^^^^256^276^threshold =  ( int )   ( newCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^threshold =   ( int )   ( key * loadFactor ) ;^263^^^^^256^276^threshold =  ( int )   ( newCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^threshold =  ( int )   ( initialCapacity * loadFactor ) ;threshold =  ( int )   ( newCapacity * loadFactor ) ;^263^^^^^256^276^threshold =  ( int )   ( newCapacity * loadFactor ) ;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^table = table;^264^^^^^256^276^table = newMap;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^table =  tab;^264^^^^^256^276^table = newMap;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^for  (  short  i = oldCapacity; i-- > 0; )  {^266^^^^^256^276^for  ( int i = oldCapacity; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^for  ( int i = oldCapacity; i-- >= 0; )  {^266^^^^^256^276^for  ( int i = oldCapacity; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P3_Replace_Literal]^for  ( int i = oldCapacity; i-- > 5; )  {^266^^^^^256^276^for  ( int i = oldCapacity; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int i = threshold; i-- > 0; )  {^266^^^^^256^276^for  ( int i = oldCapacity; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( thresholdnt i = oldCapacity; i-- > 0; )  {^266^^^^^256^276^for  ( int i = oldCapacity; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int i = nextCapacity; i-- > 0; )  {^266^^^^^256^276^for  ( int i = oldCapacity; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( oldCapacitynt i = i; i-- > 0; )  {^266^^^^^256^276^for  ( int i = oldCapacity; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^for  ( Entry old = oldMap[i]; old == null; )  {^267^^^^^256^276^for  ( Entry old = oldMap[i]; old != null; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry old = table[i]; old != null; )  {^267^^^^^256^276^for  ( Entry old = oldMap[i]; old != null; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry next = oldMap[i]; old != null; )  {^267^^^^^256^276^for  ( Entry old = oldMap[i]; old != null; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^old = next.next;^269^^^^^256^276^old = old.next;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^old = next;^269^^^^^256^276^old = old.next;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^old = old.next.next;^269^^^^^256^276^old = old.next;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^old = old;^269^^^^^256^276^old = old.next;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^e.next = table[index];^272^^^^^256^276^e.next = newMap[index];^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^e.next =  noldwMap[indoldx];^272^^^^^256^276^e.next = newMap[index];^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^newMap[index] = old;^273^^^^^256^276^newMap[index] = e;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^newMap[index]  =  newMap[index] ;^273^^^^^256^276^newMap[index] = e;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^tab[index] = e;newMap[index] = e;^273^^^^^256^276^newMap[index] = e;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = next;^268^^^^^256^276^Entry e = old;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Entry tab[] = table;Entry e = old;^268^^^^^256^276^Entry e = old;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^short  index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( e.hash & 0x7FFFFFFF )   ^  newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( e.hash  ^  0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( old.hash & 0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( e.hash & 0x7FFFFFFF )  % key;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( threshold & 0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( newCapacity.hash & 0x7FFFFFFF )  % e;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( newCapacity & 0x7FFFFFFF )  % e.hash;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( e & 0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^int index =  ( hash & 0x7FFFFFFF )  % tab.length;int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^newMap[index]  = null ;^273^^^^^256^276^newMap[index] = e;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( e.hash & 0x7FFFFFFF )   ==  newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( e.hash  >  0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( newCapacity & 0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( e.hash & 0x7FFFFFFF )   &&  newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( e.hash & 0x7FFFFFFF )  % threshold;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( e.hash.hash & 0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^old =  null.next;^269^^^^^256^276^old = old.next;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^newMap[index] ;^273^^^^^256^276^newMap[index] = e;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^for  (  long  i = oldCapacity; i-- > 0; )  {^266^^^^^256^276^for  ( int i = oldCapacity; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int i = newCapacity; i-- > 0; )  {^266^^^^^256^276^for  ( int i = oldCapacity; i-- > 0; )  {^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( e.hash & 0x7FFFFFFF )   |  newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^int index =  ( key & 0x7FFFFFFF )  % newCapacity;^271^^^^^256^276^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;^[CLASS] IntHashMap Entry  [METHOD] rehash [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  Object  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry tab[] = oldMap;^295^^^^^293^319^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Entry oldMap[] = table;Entry tab[] = table;^295^^^^^293^319^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Entry e = old;Entry tab[] = table;^295^^^^^293^319^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^long  hash = key;^296^^^^^293^319^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int hash = threshold;^296^^^^^293^319^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^int hash = oldCapacity;^296^^^^^293^319^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^short  index =  ( hash & 0x7FFFFFFF )  % tab.length;^297^^^^^293^319^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( hash & 0x7FFFFFFF )   >=  tab.length;^297^^^^^293^319^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( hash  |  0x7FFFFFFF )  % tab.length;^297^^^^^293^319^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( threshold & 0x7FFFFFFF )  % tab.length;^297^^^^^293^319^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % table.length;^297^^^^^293^319^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % threshold;^297^^^^^293^319^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( tab.length & 0x7FFFFFFF )  % hash;^297^^^^^293^319^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % tab.length.length;^297^^^^^293^319^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;int index =  ( hash & 0x7FFFFFFF )  % tab.length;^297^^^^^293^319^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^if  ( e.hash > hash )  {^299^^^^^293^319^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( next.hash == hash )  {^299^^^^^293^319^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( e.hash == threshold )  {^299^^^^^293^319^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( hash.hash == e )  {^299^^^^^293^319^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( hash == e.hash )  {^299^^^^^293^319^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^if  ( initialCapacity == hash )  {^299^^^^^293^319^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P15_Unwrap_Block]^java.lang.Object old = e.value; e.value = value; return old;^299^300^301^302^303^293^319^if  ( e.hash == hash )  { Object old = e.value; e.value = value; return old; }^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P16_Remove_Block]^^299^300^301^302^303^293^319^if  ( e.hash == hash )  { Object old = e.value; e.value = value; return old; }^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^e.value = old;^301^^^^^293^319^e.value = value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^e.value =  valuold;^301^^^^^293^319^e.value = value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^this.value = value;e.value = value;^301^^^^^293^319^e.value = value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^e.value = null;e.value = value;^301^^^^^293^319^e.value = value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^return value;^302^^^^^293^319^return old;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Object old = next.value;^300^^^^^293^319^Object old = e.value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Object old = value;^300^^^^^293^319^Object old = e.value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Object old = e.value.value;^300^^^^^293^319^Object old = e.value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Object old = e;^300^^^^^293^319^Object old = e.value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Object oldValue = e.value;Object old = e.value;^300^^^^^293^319^Object old = e.value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^for  ( Entry e = tab[index]; e == null; e = e.next )  {^298^^^^^293^319^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e = table[index]; e != null; e = e.next )  {^298^^^^^293^319^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e = tab[index]; e != null; e = old )  {^298^^^^^293^319^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e.next = tab[index]; e != null; e = e )  {^298^^^^^293^319^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^if  ( e.hash <= hash )  {^299^^^^^293^319^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^if  ( newCapacity == hash )  {^299^^^^^293^319^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^e.valuold = value;^301^^^^^293^319^e.value = value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^e.value =  valunull;^301^^^^^293^319^e.value = value;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry old = tab[index]; e != null; e = e.next )  {^298^^^^^293^319^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^for  ( Entry e =  tab[indnullx]; null !^298^^^^^293^319^for  ( Entry e = tab[index]; e != null; e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^if  ( count > threshold )  {^306^^^^^293^319^if  ( count >= threshold )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( oldCapacity >= threshold )  {^306^^^^^293^319^if  ( count >= threshold )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P6_Replace_Expression]^if  ( hash & 2147483647 % tab.length )  {^306^^^^^293^319^if  ( count >= threshold )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P6_Replace_Expression]^if  ( (hash & 2147483647) )  {^306^^^^^293^319^if  ( count >= threshold )  {^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^tab = tab;^310^^^^^293^319^tab = table;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^tab  = null ;^310^^^^^293^319^tab = table;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^index =  ( hash & 0x7FFFFFFF )   >>  tab.length;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^index =  ( hash  <  0x7FFFFFFF )  % tab.length;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^index =  ( oldCapacity & 0x7FFFFFFF )  % tab.length;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^index =  ( hash & 0x7FFFFFFF )  % table.length;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^index =  ( hash & 0x7FFFFFFF )  % threshold;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^index =  ( tab.length & 0x7FFFFFFF )  % hash;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^index =  ( tab & 0x7FFFFFFF )  % hash.length;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P14_Delete_Statement]^^308^^^^^293^319^rehash (  ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^super (  ) ;rehash (  ) ;^308^^^^^293^319^rehash (  ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^index =  ( hash & 0x7FFFFFFF )   >=  tab.length;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^index =  ( hash  >  0x7FFFFFFF )  % tab.length;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^index =  ( newCapacity & 0x7FFFFFFF )  % tab.length;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^index =  ( hash & 0x7FFFFFFF )  % initialCapacity;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^index =  ( hash & 0x7FFFFFFF )  % tab.length.length;^311^^^^^293^319^index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P4_Replace_Constructor]^Entry e = new Entry (  key, value, tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P4_Replace_Constructor]^Entry e = new Entry ( hash,  value, tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P4_Replace_Constructor]^Entry e = new Entry ( hash, key,  tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P4_Replace_Constructor]^Entry e = new Entry ( hash, key, value[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = new Entry ( threshold, key, value, tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = new Entry ( hash, key, old, tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = new Entry ( hash, key, value, table[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = new Entry ( key, hash, value, tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = new Entry ( hash, value, key, tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = new Entry ( hash, tab, value, key[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = new Entry ( key, key, value, tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = new Entry ( hash, initialCapacity, value, tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry e = new Entry ( tab, key, value, hash[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^Entry e = new Entry ( newCapacity, key, value, tab[index] ) ;^315^^^^^293^319^Entry e = new Entry ( hash, key, value, tab[index] ) ;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^tab[index] = old;^316^^^^^293^319^tab[index] = e;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^tab[index]  =  tab[index] ;^316^^^^^293^319^tab[index] = e;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^tab[index] = e.next;tab[index] = e;^316^^^^^293^319^tab[index] = e;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^newMap[index] = e;tab[index] = e;^316^^^^^293^319^tab[index] = e;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^tab[index] = null;tab[index] = e;^316^^^^^293^319^tab[index] = e;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^return false;^318^^^^^293^319^return null;^[CLASS] IntHashMap Entry  [METHOD] put [RETURN_TYPE] Object   int key Object value [VARIABLES] Entry  e  next  old  Object  old  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry tab[] = oldMap;^333^^^^^332^350^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Entry oldMap[] = table;Entry tab[] = table;^333^^^^^332^350^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Entry e = old;Entry tab[] = table;^333^^^^^332^350^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^long  hash = key;^334^^^^^332^350^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int hash = newCapacity;^334^^^^^332^350^int hash = key;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^short  index =  ( hash & 0x7FFFFFFF )  % tab.length;^335^^^^^332^350^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( hash & 0x7FFFFFFF )   >>  tab.length;^335^^^^^332^350^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^int index =  ( hash  >=  0x7FFFFFFF )  % tab.length;^335^^^^^332^350^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( threshold & 0x7FFFFFFF )  % tab.length;^335^^^^^332^350^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % table.length;^335^^^^^332^350^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % key;^335^^^^^332^350^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( tab & 0x7FFFFFFF )  % hash.length;^335^^^^^332^350^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^int index =  ( hash & 0x7FFFFFFF )  % tab;^335^^^^^332^350^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^int index =  ( e.hash & 0x7FFFFFFF )  % newCapacity;int index =  ( hash & 0x7FFFFFFF )  % tab.length;^335^^^^^332^350^int index =  ( hash & 0x7FFFFFFF )  % tab.length;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^if  ( e.hash >= hash )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( prev.hash == hash )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( e.hash == oldCapacity )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( threshold == hash )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( e.hash.hash == hash )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( hash == e.hash )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P6_Replace_Expression]^if  ( prev != null )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^if  ( e.hash == threshold )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P15_Unwrap_Block]^if (prev != null) {    prev.next = e.next;}else {    tab[index] = e.next;}; (count)--; java.lang.Object oldValue = e.value; e.value = null; return oldValue;^337^338^339^340^341^332^350^if  ( e.hash == hash )  { if  ( prev != null )  { prev.next = e.next; } else { tab[index] = e.next; }^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P16_Remove_Block]^^337^338^339^340^341^332^350^if  ( e.hash == hash )  { if  ( prev != null )  { prev.next = e.next; } else { tab[index] = e.next; }^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^if  ( prev == null )  {^338^^^^^332^350^if  ( prev != null )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( old != null )  {^338^^^^^332^350^if  ( prev != null )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^if  ( prev != this )  {^338^^^^^332^350^if  ( prev != null )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P9_Replace_Statement]^if  ( value == null )  {^338^^^^^332^350^if  ( prev != null )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P15_Unwrap_Block]^prev.next = e.next;^338^339^340^341^342^332^350^if  ( prev != null )  { prev.next = e.next; } else { tab[index] = e.next; }^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P16_Remove_Block]^^338^339^340^341^342^332^350^if  ( prev != null )  { prev.next = e.next; } else { tab[index] = e.next; }^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^tab[index] = prev.next;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^tab[index] = prev;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^tab[index] = e.next.next;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^tab[index] ;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^prev.next = e.next;tab[index] = e.next;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^this.next = next;tab[index] = e.next;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^tab[index] = e;tab[index] = e.next;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^tab[index] = null;tab[index] = e.next;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^prev.next = old.next;^339^^^^^332^350^prev.next = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^prev.next = prev;^339^^^^^332^350^prev.next = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^prev.next = e.next.next;^339^^^^^332^350^prev.next = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^prev.next =  e.next;^339^^^^^332^350^prev.next = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^tab[index] = e.next;prev.next = e.next;^339^^^^^332^350^prev.next = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^this.next = next;prev.next = e.next;^339^^^^^332^350^prev.next = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^prev.next = prev.next;^339^^^^^332^350^prev.next = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^prev.next = e;^339^^^^^332^350^prev.next = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^tab[index]  =  tab[index] ;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^e.valuprev = null;^345^^^^^332^350^e.value = null;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^e.value = this;^345^^^^^332^350^e.value = null;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^this.value = value;e.value = null;^345^^^^^332^350^e.value = null;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^e.value = value;e.value = null;^345^^^^^332^350^e.value = null;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^return value;^346^^^^^332^350^return oldValue;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Object oldValue = prev.value;^344^^^^^332^350^Object oldValue = e.value;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Object oldValue = e.value.value;^344^^^^^332^350^Object oldValue = e.value;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Object oldValue = e;^344^^^^^332^350^Object oldValue = e.value;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^Object oldValue = value;^344^^^^^332^350^Object oldValue = e.value;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Object old = e.value;Object oldValue = e.value;^344^^^^^332^350^Object oldValue = e.value;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^if  ( prev != false )  {^338^^^^^332^350^if  ( prev != null )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^tab[index]  = null ;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^prev.next = old;^339^^^^^332^350^prev.next = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^for  ( Entry e = tab[index], prev = null; e == null; prev = e, e = e.next )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e = table[index], prev = null; e != null; prev = e, e = e.next )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry prev = tab[index], prev = null; e != null; prev = e, e = e.next )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e = tab[index], old = null; e != null; prev = e, e = e.next )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = prev )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e = tab[index], prev = null; e != null; prev =  e = e.next )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e = tab[index] = null; e != null; prev = e, e = e.next )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e = e.next[index], prev = null; e != null; prev = e, e = tab )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e = tab[index], e.next = null; e != null; prev = e, e = prev )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( Entry e.next = tab[index], prev = null; e != null; prev = e, e = e )  {^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^if  ( e.hash != hash )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^if  ( newCapacity == hash )  {^337^^^^^332^350^if  ( e.hash == hash )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^if  ( prev != truprev )  {^338^^^^^332^350^if  ( prev != null )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^tab[index] = e;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^tab[index] = old;^341^^^^^332^350^tab[index] = e.next;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^e.value = true;^345^^^^^332^350^e.value = null;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^for  ( Entry e =  tab[indoldx], proldv^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^for  ( Entry e =  tab[indprevx], prprevv^336^^^^^332^350^for  ( Entry e = tab[index], prev = null; e != null; prev = e, e = e.next )  {^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^return true;^349^^^^^332^350^return null;^[CLASS] IntHashMap Entry  [METHOD] remove [RETURN_TYPE] Object   int key [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^Entry tab[] = oldMap;^356^^^^^355^361^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Entry oldMap[] = table;Entry tab[] = table;^356^^^^^355^361^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^Entry e = old;Entry tab[] = table;^356^^^^^355^361^Entry tab[] = table;^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^for  (  short  index = tab.length; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P2_Replace_Operator]^for  ( int index = tab.length; --index < 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P3_Replace_Literal]^for  ( int index = tab.length; --index >= initialCapacity; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int index = table.length; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int threshold = tab.length; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int index = newCapacity; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int tab = index.length; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int tab.length = index; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^for  ( int index = key; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^tab[index] = false;^358^^^^^355^361^tab[index] = null;^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^tab[index] = e.next;tab[index] = null;^358^^^^^355^361^tab[index] = null;^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P11_Insert_Donor_Statement]^tab[index] = e;tab[index] = null;^358^^^^^355^361^tab[index] = null;^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^tab[index] = true;^358^^^^^355^361^tab[index] = null;^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int index = tab.length.length; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^for  ( int index = tab; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^for  ( int index = oldCapacity; --index >= 0; )  {^357^^^^^355^361^for  ( int index = tab.length; --index >= 0; )  {^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P3_Replace_Literal]^count = ;^360^^^^^355^361^count = 0;^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P8_Replace_Mix]^count = 3;^360^^^^^355^361^count = 0;^[CLASS] IntHashMap Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^long  hash;^69^^^^^64^74^int hash;^[CLASS] Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P1_Replace_Type]^short  key;^70^^^^^65^75^int key;^[CLASS] Entry  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Entry  e  next  old  prev  Object  old  oldValue  value  boolean  float  loadFactor  int  count  hash  i  index  initialCapacity  key  newCapacity  oldCapacity  threshold  Entry[]  newMap  oldMap  tab  table  
[P5_Replace_Variable]^this.hash = key;^83^^^^^82^87^this.hash = hash;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P11_Insert_Donor_Statement]^this.value = value;this.hash = hash;^83^^^^^82^87^this.hash = hash;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P11_Insert_Donor_Statement]^this.next = next;this.hash = hash;^83^^^^^82^87^this.hash = hash;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P11_Insert_Donor_Statement]^this.key = key;this.hash = hash;^83^^^^^82^87^this.hash = hash;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P5_Replace_Variable]^this.key = hash;^84^^^^^82^87^this.key = key;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P11_Insert_Donor_Statement]^this.hash = hash;this.key = key;^84^^^^^82^87^this.key = key;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P11_Insert_Donor_Statement]^this.next = next;this.key = key;^84^^^^^82^87^this.key = key;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P8_Replace_Mix]^this.value =  null;^85^^^^^82^87^this.value = value;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P11_Insert_Donor_Statement]^this.hash = hash;this.value = value;^85^^^^^82^87^this.value = value;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P8_Replace_Mix]^this.next =  null;^86^^^^^82^87^this.next = next;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P11_Insert_Donor_Statement]^this.hash = hash;this.next = next;^86^^^^^82^87^this.next = next;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
[P11_Insert_Donor_Statement]^this.key = key;this.next = next;^86^^^^^82^87^this.next = next;^[CLASS] Entry  [METHOD] <init> [RETURN_TYPE] IntHashMap$Entry)   int hash int key Object value Entry next [VARIABLES] Entry  next  Object  value  boolean  int  hash  key  
