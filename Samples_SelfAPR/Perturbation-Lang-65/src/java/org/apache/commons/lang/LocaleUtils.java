[P1_Replace_Type]^private static final  ArrayList  cAvailableLocale ArrayList ;^42^^^^^37^47^private static final List cAvailableLocaleList;^[CLASS] LocaleUtils   [VARIABLES] 
[P8_Replace_Mix]^private static final  LinkedHashSet  cAvailableLocale LinkedHashSet ;^42^^^^^37^47^private static final List cAvailableLocaleList;^[CLASS] LocaleUtils   [VARIABLES] 
[P1_Replace_Type]^private static  List  cAvailableLocale List ;^44^^^^^39^49^private static Set cAvailableLocaleSet;^[CLASS] LocaleUtils   [VARIABLES] 
[P8_Replace_Mix]^private static final Map cLanguagesByCountry  = null ;^46^^^^^41^51^private static final Map cLanguagesByCountry = Collections.synchronizedMap ( new HashMap (  )  ) ;^[CLASS] LocaleUtils   [VARIABLES] 
[P8_Replace_Mix]^private static  Map cCountriesByLanguage = Collections.synchronizedMap ( new HashMap (  )  ) ;^48^^^^^43^53^private static final Map cCountriesByLanguage = Collections.synchronizedMap ( new HashMap (  )  ) ;^[CLASS] LocaleUtils   [VARIABLES] 
[P14_Delete_Statement]^^62^^^^^61^63^super (  ) ;^[CLASS] LocaleUtils  [METHOD] <init> [RETURN_TYPE] LocaleUtils()   [VARIABLES] List  cAvailableLocaleList  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P2_Replace_Operator]^if  ( str != null )  {^94^^^^^79^109^if  ( str == null )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( str == true )  {^94^^^^^79^109^if  ( str == null )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( len == 2 )  {^94^^^^^79^109^if  ( str == null )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( len == 5 )  {^94^^^^^79^109^if  ( str == null )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( locale != null )  {^94^^^^^79^109^if  ( str == null )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( set == null )  {^94^^^^^79^109^if  ( str == null )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( countries == null )  {^94^^^^^79^109^if  ( str == null )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( langs == null )  {^94^^^^^79^109^if  ( str == null )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( countryCode != null )  {^94^^^^^79^109^if  ( str == null )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^return null;^94^95^96^^^79^109^if  ( str == null )  { return null; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^94^95^96^^^79^109^if  ( str == null )  { return null; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return this;^95^^^^^80^110^return null;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return false;^95^^^^^80^110^return null;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P1_Replace_Type]^long  len = str.length (  ) ;^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^int len = str.length() + 0 ;^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^int len = str.charAt (  ) ;^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch4 = str.charAt ( 4 ) ;int len = str.length (  ) ;^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch0 = str.charAt ( 0 ) ;int len = str.length (  ) ;^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch3 = str.charAt ( 3 ) ;int len = str.length (  ) ;^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch1 = str.charAt ( 1 ) ;int len = str.length (  ) ;^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^int len = str.length() + 9 ;^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^int len = str .substring ( len , len )  ;^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^97^^^^^82^112^int len = str.length (  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( len != 2 || len != 5 && len < 7 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( len <= 2 && len != 5 && len < 7 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( len != 2 && len == 5 && len < 7 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( len != 2 && len != 5 && len == 7 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len != 10 && len != 5 && len < 7 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len != 2 && len != len && len < 7 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len != 2 && len != 5 && len < len )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( len != 2 ) {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  (  len != 5 && len < 7 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( (len != 2 && len != 5) )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( len != 5 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( len < 7 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( len != 0 && len != 5 && len < 7 )  {^98^^^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid locale format: " + str));^98^99^100^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^98^99^100^^^83^113^if  ( len != 2 && len != 5 && len < 7 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^98^^^^^83^113^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^98^^^^^83^113^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^98^^^^^83^113^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^98^^^^^83^113^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^99^^^^^84^114^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^99^^^^^84^114^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^99^^^^^84^114^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^99^^^^^84^114^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^99^^^^^84^114^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P1_Replace_Type]^int ch0 = str.charAt ( 0 ) ;^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char ch4 = str.charAt ( 4 ) ;^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^char ch0 = str.substring ( 0 ) ;^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch4 = str.charAt ( 4 ) ;char ch0 = str.charAt ( 0 ) ;^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch3 = str.charAt ( 3 ) ;char ch0 = str.charAt ( 0 ) ;^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^int len = str.length (  ) ;char ch0 = str.charAt ( 0 ) ;^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch1 = str.charAt ( 1 ) ;char ch0 = str.charAt ( 0 ) ;^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char chlen = str.charAt ( len ) ;^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^char ch0 = str .substring ( len , len )  ;^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^101^^^^^86^116^char ch0 = str.charAt ( 0 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P1_Replace_Type]^int ch1 = str.charAt ( 1 ) ;^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char chlen = str.charAt ( len ) ;^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^char ch1 = str.substring ( 1 ) ;^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^char ch1 = str .substring ( len , len )  ;^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch4 = str.charAt ( 4 ) ;char ch1 = str.charAt ( 1 ) ;^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch0 = str.charAt ( 0 ) ;char ch1 = str.charAt ( 1 ) ;^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch3 = str.charAt ( 3 ) ;char ch1 = str.charAt ( 1 ) ;^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^int len = str.length (  ) ;char ch1 = str.charAt ( 1 ) ;^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char ch-7 = str.charAt ( -7 ) ;^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^102^^^^^87^117^char ch1 = str.charAt ( 1 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch0 < 'a' && ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch0 > 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch0 < 'a' || ch0 >= 'z' || ch1 < 'a' || ch1 > 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch0 < 'a' || ch0 > 'z' || ch1 == 'a' || ch1 > 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 >= 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P5_Replace_Variable]^if  ( ch4 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P5_Replace_Variable]^if  ( ch0 < 'a' || ch0 > 'z' || ch4 < 'a' || ch1 > 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch0 < 'a' ) {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  (  ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ((ch0 < 'a') || (ch0 > 'z') || ch1 < 'a') )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( (ch0 < 'a' || ch0 > 'z') )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch0 > 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch1 < 'a' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch1 > 'z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^103^^^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid locale format: " + str));^103^104^105^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^103^104^105^^^88^118^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^103^^^^^88^118^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^103^^^^^88^118^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^103^^^^^88^118^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^103^^^^^88^118^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^104^^^^^89^119^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^104^^^^^89^119^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^104^^^^^89^119^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^104^^^^^89^119^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^104^^^^^89^119^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( len != 2 )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len == len )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len == -4 )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( str.charAt(2) != '_' )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ((ch3 < 'A') || (ch3 > 'Z')) || (ch4 < 'A') || ch4 > 'Z' )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ((ch3 < 'A') || (ch3 > 'Z') || ch4 < 'A') )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( (ch3 < 'A' || ch3 > 'Z') )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch3 < 'A' )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch3 > 'Z' )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch4 < 'A' )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch4 > 'Z' )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( len == 5 )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( str.charAt(5) != '_' )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( len == 2 << 1 )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( set == null )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( str == null )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( langs == null )  {^106^^^^^91^121^if  ( len == 2 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^return new java.util.Locale(str, "");^106^107^108^109^110^91^121^if  ( len == 2 )  { return new Locale ( str, "" ) ; } else { if  ( str.charAt ( 2 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^106^107^108^109^110^91^121^if  ( len == 2 )  { return new Locale ( str, "" ) ; } else { if  ( str.charAt ( 2 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( str.charAt ( 2 )  >= '_' )  {^109^^^^^106^125^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( str.charAt ( -3 )  != '_' )  {^109^^^^^106^125^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^109^^^^^106^125^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^if  ( str.substring ( 2 )  != '_' )  {^109^^^^^106^125^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( str.charAt ( 3 )  != '_' )  {^109^^^^^106^125^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( str.charAt ( 5 )  != '_' )  {^109^^^^^106^125^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid locale format: " + str));^109^110^111^^^106^125^if  ( str.charAt ( 2 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^109^110^111^^^106^125^if  ( str.charAt ( 2 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^109^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^109^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^109^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^109^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 < 'A' && ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 <= 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 < 'A' || ch3 < 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 <= 'A' || ch4 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 >= 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P5_Replace_Variable]^if  ( ch1 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P5_Replace_Variable]^if  ( ch3 < 'A' || ch3 > 'Z' || ch1 < 'A' || ch4 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P5_Replace_Variable]^if  ( ch4 < 'A' || ch3 > 'Z' || ch3 < 'A' || ch4 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch3 < 'A' ) {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  (  ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ((ch3 < 'A') || (ch3 > 'Z') || ch4 < 'A') )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( (ch3 < 'A' || ch3 > 'Z') )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch3 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch4 < 'A' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch4 > 'Z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( ch1 < 'A' ) {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^114^^^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid locale format: " + str));^114^115^116^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^114^115^116^^^106^125^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return true;^115^^^^^106^125^throw new IllegalArgumentException  (" ")  ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( len != 5 )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len == len )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len == 14 )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( str.charAt(5) != '_' )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( len == 5 - 0 )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( len == 2 )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( set == null )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( str == null )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( langs == null )  {^117^^^^^106^125^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^return new java.util.Locale(str.substring(0, 2), str.substring(3, 5));^117^118^119^120^121^106^125^if  ( len == 5 )  { return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ; } else { if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^117^118^119^120^121^106^125^if  ( len == 5 )  { return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ; } else { if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( str.charAt ( 5 )  < '_' )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( str.charAt (  )  != '_' )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^if  ( str.substring ( 5 )  != '_' )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^if  ( str .substring ( len , len )   != '_' )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( str.charAt ( 5 % 2 )  != '_' )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( str.charAt ( 2 )  != '_' )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid locale format: " + str));^120^121^122^^^106^125^if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^120^121^122^^^106^125^if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return ;^121^^^^^106^125^throw new IllegalArgumentException  (" ")  ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( len, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, -4 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( len, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( -2 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P4_Replace_Constructor]^return return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  )  , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^return new Locale ( str .substring ( len , len )  , str^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^return new Locale ( str .substring ( len )  , str^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  )   , str^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 5 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 4, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, len ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( len )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return true;^121^^^^^106^125^throw new IllegalArgumentException  (" ")  ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( str.charAt ( len )  != '_' )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 9, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, len ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( len, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 1 ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( -2, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, len )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P4_Replace_Constructor]^return return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  )  , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^return new Locale ( str .substring ( len , len )  , str^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return new Locale ( str.substring ( 4, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0,  ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( , 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 1 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, len ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 6, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 4 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( str.charAt ( 5 )  >= '_' )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( str.charAt ( 3 )  != '_' )  {^120^^^^^106^125^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, -1 ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( -3, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  )   , str^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 9 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 0 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return new Locale ( str.substring ( 0 - 2, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 4 ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( len, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 4 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( -3 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P1_Replace_Type]^int ch3 = str.charAt ( 3 ) ;^112^^^^^106^125^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char chlen = str.charAt ( len ) ;^112^^^^^106^125^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^char ch3 = str.substring ( 3 ) ;^112^^^^^106^125^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^char ch3 = str .substring ( len , len )  ;^112^^^^^106^125^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch4 = str.charAt ( 4 ) ;char ch3 = str.charAt ( 3 ) ;^112^^^^^106^125^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch0 = str.charAt ( 0 ) ;char ch3 = str.charAt ( 3 ) ;^112^^^^^106^125^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^int len = str.length (  ) ;char ch3 = str.charAt ( 3 ) ;^112^^^^^106^125^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch1 = str.charAt ( 1 ) ;char ch3 = str.charAt ( 3 ) ;^112^^^^^106^125^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P1_Replace_Type]^String ch4 = str.charAt ( 4 ) ;^113^^^^^106^125^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char ch9 = str.charAt ( 9 ) ;^113^^^^^106^125^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^char ch4 = str.substring ( 4 ) ;^113^^^^^106^125^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch0 = str.charAt ( 0 ) ;char ch4 = str.charAt ( 4 ) ;^113^^^^^106^125^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch3 = str.charAt ( 3 ) ;char ch4 = str.charAt ( 4 ) ;^113^^^^^106^125^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^int len = str.length (  ) ;char ch4 = str.charAt ( 4 ) ;^113^^^^^106^125^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch1 = str.charAt ( 1 ) ;char ch4 = str.charAt ( 4 ) ;^113^^^^^106^125^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return ;^115^^^^^106^125^throw new IllegalArgumentException  (" ")  ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( str.charAt ( len )  != '_' )  {^109^^^^^106^125^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char ch2 = str.charAt ( 2 ) ;^112^^^^^106^125^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^112^113^^^^106^125^char ch3 = str.charAt ( 3 ) ; char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char chlen = str.charAt ( len ) ;^113^^^^^106^125^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^113^^^^^106^125^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 0, 5 )  ) ;^118^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 1, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 8 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 7, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 4 )  ) ;^123^^^^^106^125^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( str.charAt ( 2 )  == '_' )  {^109^^^^^94^124^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( str.charAt ( len )  != '_' )  {^109^^^^^94^124^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^109^^^^^94^124^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^if  ( str.substring ( 2 )  != '_' )  {^109^^^^^94^124^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( str.charAt ( 2 + 4 )  != '_' )  {^109^^^^^94^124^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( str.charAt ( 5 )  != '_' )  {^109^^^^^94^124^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid locale format: " + str));^109^110^111^^^94^124^if  ( str.charAt ( 2 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^109^110^111^^^94^124^if  ( str.charAt ( 2 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^109^^^^^94^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^109^^^^^94^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^109^^^^^94^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^109^^^^^94^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^95^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^95^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^95^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^95^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^110^^^^^95^125^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 < 'A' && ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 <= 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 < 'A' || ch3 < 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 <= 'A' || ch4 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 == 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P5_Replace_Variable]^if  ( ch1 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P5_Replace_Variable]^if  ( ch3 < 'A' || ch3 > 'Z' || ch1 < 'A' || ch4 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P5_Replace_Variable]^if  ( ch4 < 'A' || ch3 > 'Z' || ch3 < 'A' || ch4 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch3 < 'A' ) {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  (  ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ((ch3 < 'A') || (ch3 > 'Z') || ch4 < 'A') )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( (ch3 < 'A' || ch3 > 'Z') )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch3 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch4 < 'A' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( ch4 > 'Z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^114^^^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid locale format: " + str));^114^115^116^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^114^115^116^^^99^129^if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^99^129^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^99^129^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^99^129^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^99^129^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^100^130^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^100^130^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^100^130^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^100^130^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^115^^^^^100^130^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( len != 5 )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len == len )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len == 7 )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len == 6 )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( len == -2 )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( str.charAt(5) != '_' )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( len == 5 << 3 )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( len == 2 )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( set == null )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( str == null )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( langs == null )  {^117^^^^^102^132^if  ( len == 5 )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^return new java.util.Locale(str.substring(0, 2), str.substring(3, 5));^117^118^119^120^121^102^132^if  ( len == 5 )  { return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ; } else { if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^117^118^119^120^121^102^132^if  ( len == 5 )  { return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ; } else { if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( str.charAt ( 5 )  == '_' )  {^120^^^^^117^124^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( str.charAt ( len )  != '_' )  {^120^^^^^117^124^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^120^^^^^117^124^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^if  ( str.substring ( 5 )  != '_' )  {^120^^^^^117^124^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( str.charAt ( 6 )  != '_' )  {^120^^^^^117^124^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P9_Replace_Statement]^if  ( str.charAt ( 2 )  != '_' )  {^120^^^^^117^124^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid locale format: " + str));^120^121^122^^^117^124^if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^120^121^122^^^117^124^if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^117^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^117^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^117^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^117^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^117^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^117^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^117^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^117^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^117^124^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( len, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 10 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( len, 5 ) , str.substring ( 6 )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, len ) , str.substring ( 6 )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 4 )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P4_Replace_Constructor]^return return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  )  , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^return new Locale ( str .substring ( len , len )  , str^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( -9, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return new Locale ( str .substring ( len )  , str^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, len ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 0, 5 ) , str.substring ( 6 )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring (  )  ) ;^123^^^^^117^124^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( , 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, -4 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( -4, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, len )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P4_Replace_Constructor]^return return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  )  , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return new Locale ( str.substring ( 3, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( len, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, -5 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 4, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^return new Locale ( str .substring ( len , len )  , str^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( -2, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 5 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( -1, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P2_Replace_Operator]^if  ( str.charAt ( 5 )  <= '_' )  {^120^^^^^105^135^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( str.charAt ( 8 )  != '_' )  {^120^^^^^105^135^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P6_Replace_Expression]^if  ( "Invalid locale format: " + str )  {^120^^^^^105^135^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^if  ( str.substring ( 5 )  != '_' )  {^120^^^^^105^135^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^if  ( str.charAt ( 2 )  != '_' )  {^120^^^^^105^135^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid locale format: " + str));^120^121^122^^^105^135^if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P16_Remove_Block]^^120^121^122^^^105^135^if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^105^135^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^105^135^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^105^135^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^120^^^^^105^135^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  ( len != 2 )  &&  ( len != 5 )  )  &&  ( len < 7 )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^136^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 2 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^136^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^136^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return ;^121^^^^^106^136^throw new IllegalArgumentException  (" ")  ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch3 < 'A' )  ||  ( ch3 > 'Z' )  )  ||  ( ch4 < 'A' )  )  ||  ( ch4 > 'Z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^136^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P13_Insert_Block]^if  (  (  (  ( ch0 < 'a' )  ||  ( ch0 > 'z' )  )  ||  ( ch1 < 'a' )  )  ||  ( ch1 > 'z' )  )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^121^^^^^106^136^[Delete]^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 11 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( len, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 1 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return new Locale ( str.substring ( 0 >> 1, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( len, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, len ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( len, 5 ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 2 ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( len )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P4_Replace_Constructor]^return return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  )  , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^return new Locale ( str .substring ( len , len )  , str^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, len ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 7, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 5 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( -6, 5 ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, len ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 1 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P1_Replace_Type]^String ch3 = str.charAt ( 3 ) ;^112^^^^^97^127^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char chlen = str.charAt ( len ) ;^112^^^^^97^127^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^char ch3 = str.substring ( 3 ) ;^112^^^^^97^127^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch4 = str.charAt ( 4 ) ;char ch3 = str.charAt ( 3 ) ;^112^^^^^97^127^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch0 = str.charAt ( 0 ) ;char ch3 = str.charAt ( 3 ) ;^112^^^^^97^127^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^int len = str.length (  ) ;char ch3 = str.charAt ( 3 ) ;^112^^^^^97^127^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch1 = str.charAt ( 1 ) ;char ch3 = str.charAt ( 3 ) ;^112^^^^^97^127^char ch3 = str.charAt ( 3 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P1_Replace_Type]^int ch4 = str.charAt ( 4 ) ;^113^^^^^98^128^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^char ch-2 = str.charAt ( -2 ) ;^113^^^^^98^128^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^char ch4 = str.substring ( 4 ) ;^113^^^^^98^128^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch0 = str.charAt ( 0 ) ;char ch4 = str.charAt ( 4 ) ;^113^^^^^98^128^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch3 = str.charAt ( 3 ) ;char ch4 = str.charAt ( 4 ) ;^113^^^^^98^128^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^int len = str.length (  ) ;char ch4 = str.charAt ( 4 ) ;^113^^^^^98^128^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P11_Insert_Donor_Statement]^char ch1 = str.charAt ( 1 ) ;char ch4 = str.charAt ( 4 ) ;^113^^^^^98^128^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return ;^110^^^^^95^125^throw new IllegalArgumentException  (" ")  ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( str.charAt (  )  != '_' )  {^109^^^^^94^124^if  ( str.charAt ( 2 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^112^113^^^^97^127^char ch3 = str.charAt ( 3 ) ; char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^113^^^^^98^128^char ch4 = str.charAt ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 5, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 4 ) , str.substring ( 3, 5 )  ) ;^118^^^^^103^133^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^if  ( str.charAt ( len )  != '_' )  {^120^^^^^105^135^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P7_Replace_Invocation]^if  ( str .substring ( len , len )   != '_' )  {^120^^^^^105^135^if  ( str.charAt ( 5 )  != '_' )  {^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 3 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( -1, 5 ) , str.substring ( 6 )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P3_Replace_Literal]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring (  )  ) ;^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P8_Replace_Mix]^return new Locale ( str .substring ( len )  , str^123^^^^^108^138^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[CLASS] LocaleUtils  [METHOD] toLocale [RETURN_TYPE] Locale   String str [VARIABLES] Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  
[P14_Delete_Statement]^^142^^^^^141^143^return localeLookupList ( locale, locale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale [VARIABLES] Locale  locale  List  cAvailableLocaleList  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P1_Replace_Type]^List list = new  LinkedHashSet  ( 4 ) ;^164^^^^^163^178^List list = new ArrayList ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^List list = new ArrayList ( -3 ) ;^164^^^^^163^178^List list = new ArrayList ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P4_Replace_Constructor]^List list = List list =  new ArrayList (  )  ;^164^^^^^163^178^List list = new ArrayList ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P1_Replace_Type]^ArrayList  list = new Array ArrayList  ( 4 ) ;^164^^^^^163^178^List list = new ArrayList ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^List list = new ArrayList ( -2 ) ;^164^^^^^163^178^List list = new ArrayList ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^List locales = availableLocaleList (  ) ;List list = new ArrayList ( 4 ) ;^164^^^^^163^178^List list = new ArrayList ( 4 ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P2_Replace_Operator]^if  ( locale == null )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P6_Replace_Expression]^if  ( length() > 0 )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P6_Replace_Expression]^if  ( list.contains(defaultLocale) == false )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^if  ( locale != false )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( set == null )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( str == null )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( languageCode != null )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( countries == null )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( langs == null )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( countryCode != null )  {^165^^^^^163^178^if  ( locale != null )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P15_Unwrap_Block]^list.add(locale); if ((locale.getVariant().length()) > 0) {    list.add(new java.util.Locale(locale.getLanguage(), locale.getCountry()));}; if ((locale.getCountry().length()) > 0) {    list.add(new java.util.Locale(locale.getLanguage(), ""));}; if ((list.contains(defaultLocale)) == false) {    list.add(defaultLocale);};^165^166^167^168^169^163^178^if  ( locale != null )  { list.add ( locale ) ; if  ( locale.getVariant (  ) .length (  )  > 0 )  { list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ; }^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P16_Remove_Block]^^165^166^167^168^169^163^178^if  ( locale != null )  { list.add ( locale ) ; if  ( locale.getVariant (  ) .length (  )  > 0 )  { list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ; }^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P2_Replace_Operator]^if  ( locale.getVariant (  ) .length (  )  >= 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getVariant (  ) .length (  )  > null )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getVariant (  ) .length() + 0  > 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^if  ( defaultLocale.getVariant (  ) .length (  )  > 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^if  ( locale.getVariant (  ) .charAt (  )  > 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^if  ( locale.getVariant (  ) .length (  )  > 0  )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P15_Unwrap_Block]^list.add(new java.util.Locale(locale.getLanguage(), locale.getCountry()));^167^168^169^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  { list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ; }^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P16_Remove_Block]^^167^168^169^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  { list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ; }^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P13_Insert_Block]^if  (  ( locale.getCountry (  ) .length (  )  )  > 0 )  {     list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ; }^167^^^^^163^178^[Delete]^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^list.add ( new Locale ( defaultLocale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^168^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^list.add ( new Locale ( locale .getVariant (  )  , locale.getCountry (  )  )  ) ;^168^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P13_Insert_Block]^if  (  ( locale.getVariant (  ) .length (  )  )  > 0 )  {     list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ; }^168^^^^^163^178^[Delete]^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P4_Replace_Constructor]^list.add ( new Locale ( locale.getLanguage (  ) .getCountry (  )  )  ) ;^168^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^list.add ( new Locale ( locale.getLanguage (  ) , locale .getVariant (  )   )  ) ;^168^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^list.add ( new Locale ( defaultLocale.getLanguage (  ) , locale .getVariant (  )   )  ) ;^168^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P14_Delete_Statement]^^168^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P2_Replace_Operator]^if  ( locale.getCountry (  ) .length (  )  >= 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getCountry (  ) .length (  )  > -9 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getCountry (  ) .length() + 4  > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^if  ( defaultLocale.getCountry (  ) .length (  )  > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^if  ( locale.getCountry (  ) .charAt (  )  > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^if  ( locale.getCountry (  )  .substring ( 0 , 3 )   > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^if  ( locale .getVariant (  )  .length (  )  > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^if  ( locale.getCountry (  ) .length (  )  > 0  )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P15_Unwrap_Block]^list.add(new java.util.Locale(locale.getLanguage(), ""));^170^171^172^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  { list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ; }^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P16_Remove_Block]^^170^171^172^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  { list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ; }^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P13_Insert_Block]^if  (  ( locale.getVariant (  ) .length (  )  )  > 0 )  {     list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ; }^170^^^^^163^178^[Delete]^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^list.add ( new Locale ( defaultLocale.getLanguage (  ) , "" )  ) ;^171^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^list.add ( new Locale ( locale .getVariant (  )  , "" )  ) ;^171^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P14_Delete_Statement]^^171^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P13_Insert_Block]^if  (  ( locale.getCountry (  ) .length (  )  )  > 0 )  {     list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ; }^171^^^^^163^178^[Delete]^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P2_Replace_Operator]^if  ( list.contains ( defaultLocale )  != false )  {^173^^^^^163^178^if  ( list.contains ( defaultLocale )  == false )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( list.contains ( defaultLocale )  == true )  {^173^^^^^163^178^if  ( list.contains ( defaultLocale )  == false )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^if  ( cAvailableLocaleList.contains ( defaultLocale )  == false )  {^173^^^^^163^178^if  ( list.contains ( defaultLocale )  == false )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^if  ( list.contains ( locale )  == false )  {^173^^^^^163^178^if  ( list.contains ( defaultLocale )  == false )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^if  ( defaultLocale.contains ( list )  == false )  {^173^^^^^163^178^if  ( list.contains ( defaultLocale )  == false )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P15_Unwrap_Block]^list.add(defaultLocale);^173^174^175^^^163^178^if  ( list.contains ( defaultLocale )  == false )  { list.add ( defaultLocale ) ; }^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P16_Remove_Block]^^173^174^175^^^163^178^if  ( list.contains ( defaultLocale )  == false )  { list.add ( defaultLocale ) ; }^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^list.add ( locale ) ;^174^^^^^163^178^list.add ( defaultLocale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P14_Delete_Statement]^^174^^^^^163^178^list.add ( defaultLocale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^langs.add ( locale ) ;list.add ( defaultLocale ) ;^174^^^^^163^178^list.add ( defaultLocale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^list.add ( locale ) ;list.add ( defaultLocale ) ;^174^^^^^163^178^list.add ( defaultLocale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^list.add ( new Locale ( defaultLocale .getVariant (  )  , locale.getCountry (  )  )  ) ;^168^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^list.add ( defaultLocale ) ;^166^^^^^163^178^list.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P14_Delete_Statement]^^166^^^^^163^178^list.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^langs.add ( locale ) ;list.add ( locale ) ;^166^^^^^163^178^list.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^list.add ( defaultLocale ) ;list.add ( locale ) ;^166^^^^^163^178^list.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^countries.add ( locale ) ;list.add ( locale ) ;^166^^^^^163^178^list.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^if  ( locale .getLanguage (  )  .length (  )  > 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getVariant (  ) .length() + 6  > 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getCountry (  ) .length() - 3  > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getCountry (  ) .length() - 9  > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^list.add ( new Locale ( defaultLocale .getVariant (  )  , "" )  ) ;^171^^^^^163^178^list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getVariant (  ) .length (  )  > -6 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getVariant (  ) .length() - 3  > 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P2_Replace_Operator]^if  ( locale.getCountry (  ) .length (  )  == 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getCountry (  ) .length (  )  > -1 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getCountry (  ) .length() - 5  > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getVariant (  ) .length() + 1  > 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getVariant (  ) .length() + 2  > 0 )  {^167^^^^^163^178^if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getCountry (  ) .length() - 2  > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P3_Replace_Literal]^if  ( locale.getCountry (  ) .length() + 9  > 0 )  {^170^^^^^163^178^if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^return Collections.unmodifiableList ( cAvailableLocaleList ) ;^177^^^^^163^178^return Collections.unmodifiableList ( list ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^return Collections.unmodifiableSet ( list ) ;^177^^^^^163^178^return Collections.unmodifiableList ( list ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^return Collections.unmodifiableSet ( cAvailableLocaleList ) ;^177^^^^^163^178^return Collections.unmodifiableList ( list ) ;^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P14_Delete_Statement]^^177^178^^^^163^178^return Collections.unmodifiableList ( list ) ; }^[CLASS] LocaleUtils  [METHOD] localeLookupList [RETURN_TYPE] List   Locale locale Locale defaultLocale [VARIABLES] Locale  defaultLocale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^return list;^191^^^^^190^192^return cAvailableLocaleList;^[CLASS] LocaleUtils  [METHOD] availableLocaleList [RETURN_TYPE] List   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P1_Replace_Type]^LinkedList  set = cAvailableLocale LinkedList ;^205^^^^^204^212^Set set = cAvailableLocaleSet;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^List locales = availableLocaleList (  ) ;Set set = cAvailableLocaleSet;^205^^^^^204^212^Set set = cAvailableLocaleSet;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P2_Replace_Operator]^if  ( set != null )  {^206^^^^^204^212^if  ( set == null )  {^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^if  ( cAvailableLocaleSet == null )  {^206^^^^^204^212^if  ( set == null )  {^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^if  ( set == true )  {^206^^^^^204^212^if  ( set == null )  {^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( len == 2 )  {^206^^^^^204^212^if  ( set == null )  {^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( len == 5 )  {^206^^^^^204^212^if  ( set == null )  {^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( locale != null )  {^206^^^^^204^212^if  ( set == null )  {^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( str == null )  {^206^^^^^204^212^if  ( set == null )  {^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( countries == null )  {^206^^^^^204^212^if  ( set == null )  {^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P9_Replace_Statement]^if  ( langs == null )  {^206^^^^^204^212^if  ( set == null )  {^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P15_Unwrap_Block]^set = new java.util.HashSet(org.apache.commons.lang.LocaleUtils.availableLocaleList()); set = java.util.Collections.unmodifiableSet(set); org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet = set;^206^207^208^209^210^204^212^if  ( set == null )  { set = new HashSet ( availableLocaleList (  )  ) ; set = Collections.unmodifiableSet ( set ) ; cAvailableLocaleSet = set; }^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P16_Remove_Block]^^206^207^208^209^210^204^212^if  ( set == null )  { set = new HashSet ( availableLocaleList (  )  ) ; set = Collections.unmodifiableSet ( set ) ; cAvailableLocaleSet = set; }^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P1_Replace_Type]^set = new Hash List  ( availableLocaleList (  )  ) ;^207^^^^^204^212^set = new HashSet ( availableLocaleList (  )  ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P1_Replace_Type]^set = Collections.unmodifiable LinkedList  ( set ) ;^208^^^^^204^212^set = Collections.unmodifiableSet ( set ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P7_Replace_Invocation]^set = Collections.unmodifiableList ( set ) ;^208^^^^^204^212^set = Collections.unmodifiableSet ( set ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^set =  Collections.unmodifiableSet ( cAvailableLocaleSet ) ;^208^^^^^204^212^set = Collections.unmodifiableSet ( set ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^countries = Collections.unmodifiableList ( countries ) ;set = Collections.unmodifiableSet ( set ) ;^208^^^^^204^212^set = Collections.unmodifiableSet ( set ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^langs = Collections.unmodifiableList ( langs ) ;set = Collections.unmodifiableSet ( set ) ;^208^^^^^204^212^set = Collections.unmodifiableSet ( set ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P1_Replace_Type]^cAvailableLocale List  = set;^209^^^^^204^212^cAvailableLocaleSet = set;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^cAvailableLocaleSet = cAvailableLocaleSet;^209^^^^^204^212^cAvailableLocaleSet = set;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^cAvailableLocaleSet =  null;^209^^^^^204^212^cAvailableLocaleSet = set;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P14_Delete_Statement]^^207^208^^^^204^212^set = new HashSet ( availableLocaleList (  )  ) ; set = Collections.unmodifiableSet ( set ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P11_Insert_Donor_Statement]^List locales = availableLocaleList (  ) ;set = new HashSet ( availableLocaleList (  )  ) ;^207^^^^^204^212^set = new HashSet ( availableLocaleList (  )  ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P14_Delete_Statement]^^208^209^210^^^204^212^set = Collections.unmodifiableSet ( set ) ; cAvailableLocaleSet = set; }^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P1_Replace_Type]^set = new Hash LinkedList  ( availableLocaleList (  )  ) ;^207^^^^^204^212^set = new HashSet ( availableLocaleList (  )  ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^set = new Hash ArrayList  ( availableLocaleList (  )  ) ;^207^^^^^204^212^set = new HashSet ( availableLocaleList (  )  ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P8_Replace_Mix]^set = Collections.unmodifiableList ( cAvailableLocaleSet ) ;^208^^^^^204^212^set = Collections.unmodifiableSet ( set ) ;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^return cAvailableLocaleSet;^211^^^^^204^212^return set;^[CLASS] LocaleUtils  [METHOD] availableLocaleSet [RETURN_TYPE] Set   [VARIABLES] List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^return set.contains ( locale ) ;^222^^^^^221^223^return cAvailableLocaleSet.contains ( locale ) ;^[CLASS] LocaleUtils  [METHOD] isAvailableLocale [RETURN_TYPE] boolean   Locale locale [VARIABLES] Locale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P5_Replace_Variable]^return locale.contains ( cAvailableLocaleSet ) ;^222^^^^^221^223^return cAvailableLocaleSet.contains ( locale ) ;^[CLASS] LocaleUtils  [METHOD] isAvailableLocale [RETURN_TYPE] boolean   Locale locale [VARIABLES] Locale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P14_Delete_Statement]^^222^^^^^221^223^return cAvailableLocaleSet.contains ( locale ) ;^[CLASS] LocaleUtils  [METHOD] isAvailableLocale [RETURN_TYPE] boolean   Locale locale [VARIABLES] Locale  locale  List  cAvailableLocaleList  list  Set  cAvailableLocaleSet  set  boolean  Map  cCountriesByLanguage  cLanguagesByCountry  
[P1_Replace_Type]^Set  langs =  (  Set  )  cLanguagesByCountry.get ( countryCode ) ;^236^^^^^235^255^List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^List langs =  ( List )  cCountriesByLanguage.get ( countryCode ) ;^236^^^^^235^255^List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^List langs =  ( List )  countryCode.get ( cLanguagesByCountry ) ;^236^^^^^235^255^List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^236^^^^^235^255^List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^LinkedHashSet  langs =  (  LinkedHashSet  )  cLanguagesByCountry.get ( countryCode ) ;^236^^^^^235^255^List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^236^^^^^235^255^List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( langs != null )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^if  ( list == null )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( countryCode != null )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( i < locales.size() )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( getCountry()) && length() == 0 )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( locale.getVariant (  ) .length (  )  == 0 )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^if  ( list == true )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( len == 2 )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( len == 5 )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( locale != null )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( set == null )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( str == null )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( languageCode != null )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( countries == null )  {^237^^^^^235^255^if  ( langs == null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( countryCode == null )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( i < locales.size() )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( getCountry()) && length() == 0 )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( locale.getVariant (  ) .length (  )  == 0 )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^if  ( countryCode != true )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( locale != null )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( str == null )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( languageCode != null )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( countries == null )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^langs ;^250^^^^^235^255^langs = Collections.EMPTY_LIST;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^countries = Collections.EMPTY_LIST;langs = Collections.EMPTY_LIST;^250^^^^^235^255^langs = Collections.EMPTY_LIST;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^langs = Collections.unmodifiableList ( langs ) ;langs = Collections.EMPTY_LIST;^250^^^^^235^255^langs = Collections.EMPTY_LIST;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( countryCode.equals ( locale.getCountry (  )  )  || locale.getVariant (  ) .length (  )  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  != 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == i )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() - 5  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^if  ( locale.equals ( countryCode.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( countryCode.equals ( locale.getCountry (  )  )  ) {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  (  locale.getVariant (  ) .length (  )  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( countryCode.substring ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .charAt (  )  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  )  .substring ( i , i )   == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P15_Unwrap_Block]^langs.add(locale);^243^244^245^246^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  { langs.add ( locale ) ; }^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P16_Remove_Block]^^243^244^245^246^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  { langs.add ( locale ) ; }^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P13_Insert_Block]^if  (  (  ( languageCode.equals ( locale.getLanguage (  )  )  )  &&  (  ( locale.getCountry (  ) .length (  )  )  != 0 )  )  &&  (  ( locale.getVariant (  ) .length (  )  )  == 0 )  )  {     countries.add ( locale ) ; }^243^^^^^235^255^[Delete]^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^245^^^^^235^255^langs.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^list.add ( defaultLocale ) ;langs.add ( locale ) ;^245^^^^^235^255^langs.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^countries.add ( locale ) ;langs.add ( locale ) ;^245^^^^^235^255^langs.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^list.add ( locale ) ;langs.add ( locale ) ;^245^^^^^235^255^langs.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 1; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 5 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < list.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^for  ( localesnt i = 0; i < i.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^for  ( localent i = 0; i < is.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^for  ( int i = 0; i < locales.add (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^for  ( int i = 0; i < list.add (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() + 9  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale .getLanguage (  )  .length (  )  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^Locale locale =  ( Locale )  list.get ( i ) ;^242^^^^^235^255^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^Locale locale =  ( Locale )  i.get ( locales ) ;^242^^^^^235^255^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^List locales = availableLocaleList (  ) ;Locale locale =  ( Locale )  locales.get ( i ) ;^242^^^^^235^255^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^242^^^^^235^255^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() + 3  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() - 1  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 5  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^locale.getVariant (  ) .charAt (  )  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^locale .getLanguage (  )  .length (  )  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^244^245^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  { langs.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 8  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^langs = new Array ArrayList  (  ) ;^239^^^^^235^255^langs = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P4_Replace_Constructor]^langs = langs =  new ArrayList ( 4 )  ;^239^^^^^235^255^langs = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^langs =  new ArrayList ( 4 )  ;^239^^^^^235^255^langs = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^countries = new ArrayList (  ) ;langs = new ArrayList (  ) ;^239^^^^^235^255^langs = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^langs = Collections.unmodifiable ArrayList  ( langs ) ;^248^^^^^235^255^langs = Collections.unmodifiableList ( langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^langs = Collections.unmodifiableList ( locales ) ;^248^^^^^235^255^langs = Collections.unmodifiableList ( langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^langs = Collections.unmodifiableSet ( langs ) ;^248^^^^^235^255^langs = Collections.unmodifiableList ( langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^langs = Collections.EMPTY_LIST;langs = Collections.unmodifiableList ( langs ) ;^248^^^^^235^255^langs = Collections.unmodifiableList ( langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^countries = Collections.unmodifiableList ( countries ) ;langs = Collections.unmodifiableList ( langs ) ;^248^^^^^235^255^langs = Collections.unmodifiableList ( langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^set = Collections.unmodifiableSet ( set ) ;langs = Collections.unmodifiableList ( langs ) ;^248^^^^^235^255^langs = Collections.unmodifiableList ( langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^langs = new  Set  (  ) ;^239^^^^^235^255^langs = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^ArrayList  locales = availableLocale ArrayList  (  ) ;^240^^^^^235^255^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^List list = new ArrayList ( 4 ) ;List locales = availableLocaleList (  ) ;^240^^^^^235^255^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^Set set = cAvailableLocaleSet;List locales = availableLocaleList (  ) ;^240^^^^^235^255^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^Locale locale =  ( Locale )  locales.get ( i ) ;List locales = availableLocaleList (  ) ;^240^^^^^235^255^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 2; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 2 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^240^^^^^235^255^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^set = new HashSet ( availableLocaleList (  )  ) ;List locales = availableLocaleList (  ) ;^240^^^^^235^255^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() + 9 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^241^242^243^244^245^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  { Locale locale =  ( Locale )  locales.get ( i ) ; if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  { langs.add ( locale ) ; }^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() - 9  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( countryCode.equals ( locale .getVariant (  )   )  && locale.getVariant (  ) .length (  )  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() + 6  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 9  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 0  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^248^249^250^251^^235^255^langs = Collections.unmodifiableList ( langs ) ; } else { langs = Collections.EMPTY_LIST; }^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = ; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 6; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 1 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < locale.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < localess.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == -1 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() - 3  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() - 0  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() - 7  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 2  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^langs = new Array Set  (  ) ;^239^^^^^235^255^langs = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^langs = new  LinkedHashSet  (  ) ;^239^^^^^235^255^langs = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^Set  locales = availableLocale Set  (  ) ;^240^^^^^235^255^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = -5; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 4 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 6 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() - 4  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 8  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 3  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^cLanguagesByCountry.put ( countryCode, locales ) ;^252^^^^^235^255^cLanguagesByCountry.put ( countryCode, langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^cLanguagesByCountry.put (  langs ) ;^252^^^^^235^255^cLanguagesByCountry.put ( countryCode, langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^cLanguagesByCountry.put ( countryCode ) ;^252^^^^^235^255^cLanguagesByCountry.put ( countryCode, langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^252^^^^^235^255^cLanguagesByCountry.put ( countryCode, langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^if  ( countryCode != false )  {^238^^^^^235^255^if  ( countryCode != null )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^langs  = null ;^250^^^^^235^255^langs = Collections.EMPTY_LIST;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  >= 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == -2 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 3; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() + 0 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == -5 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() + 8  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() + 7  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 3  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 1  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^langs = Collections.unmodifiable LinkedHashSet  ( langs ) ;^248^^^^^235^255^langs = Collections.unmodifiableList ( langs ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^langs = new  List  (  ) ;^239^^^^^235^255^langs = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 4; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() + 8 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() - 8  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^locale.getVariant (  )  .substring ( i , i )   == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  > 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() + 4  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^if  (  locale.getVariant (  ) .charAt (  )  == 0  )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i == locales.size (  ) ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 8 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0  )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 1  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 4  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^LinkedHashSet  locales = availableLocale LinkedHashSet  (  ) ;^240^^^^^235^255^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 3 ; i++ )  {^241^^^^^235^255^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length() + 2  == 0 )  {^243^244^^^^235^255^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 6  == 0 )  {^244^^^^^235^255^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^return locales;^254^^^^^235^255^return langs;^[CLASS] LocaleUtils  [METHOD] languagesByCountry [RETURN_TYPE] List   String countryCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  langs  list  locales  String  countryCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^Set  countries =  (  Set  )  cCountriesByLanguage.get ( languageCode ) ;^268^^^^^267^288^List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^List countries =  ( List )  cLanguagesByCountry.get ( languageCode ) ;^268^^^^^267^288^List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^List countries =  ( List )  languageCode.get ( cCountriesByLanguage ) ;^268^^^^^267^288^List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^268^^^^^267^288^List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^ArrayList  countries =  (  ArrayList  )  cCountriesByLanguage.get ( languageCode ) ;^268^^^^^267^288^List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^268^^^^^267^288^List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( countries != null )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^if  ( list == null )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( languageCode != null )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( i < locales.size() )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( getLanguage()) && length() != 0) && length() == 0 )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( getLanguage() && length() != 0) )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( locale.getCountry (  ) .length (  )  != 0 )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( locale.getVariant (  ) .length (  )  == 0 )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^if  ( countries == this )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( locale != null )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( set == null )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( str == null )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( langs == null )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( countryCode != null )  {^269^^^^^267^288^if  ( countries == null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode == null )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( i < locales.size() )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( getLanguage()) && length() != 0) && length() == 0 )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( getLanguage() && length() != 0) )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( locale.getCountry (  ) .length (  )  != 0 )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( locale.getVariant (  ) .length (  )  == 0 )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^if  ( languageCode != this )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( locale != null )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( langs == null )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P9_Replace_Statement]^if  ( countryCode != null )  {^270^^^^^267^288^if  ( languageCode != null )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^countries  =  countries ;^283^^^^^267^288^countries = Collections.EMPTY_LIST;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^langs = Collections.EMPTY_LIST;countries = Collections.EMPTY_LIST;^283^^^^^267^288^countries = Collections.EMPTY_LIST;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^countries = Collections.unmodifiableList ( countries ) ;countries = Collections.EMPTY_LIST;^283^^^^^267^288^countries = Collections.EMPTY_LIST;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode.equals ( locale.getLanguage (  )  )  || locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  == 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  != 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != i && locale.getVariant (  ) .length (  )  == i )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 5 && locale.getVariant (  ) .length (  )  == 5 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() - 3  != 0 && locale.getVariant (  ) .length() - 3  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^if  ( locale.equals ( languageCode.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( languageCode.equals ( locale.getLanguage (  )  )  ) {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  (  locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( getLanguage() && length() != 0) )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( locale.getCountry (  ) .length (  )  != 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P6_Replace_Expression]^if  ( locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( languageCode.substring ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .charAt (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale .getLanguage (  )  .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P15_Unwrap_Block]^countries.add(locale);^275^276^277^278^279^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  { countries.add ( locale ) ; }^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P16_Remove_Block]^^275^276^277^278^279^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  { countries.add ( locale ) ; }^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P13_Insert_Block]^if  (  ( countryCode.equals ( locale.getCountry (  )  )  )  &&  (  ( locale.getVariant (  ) .length (  )  )  == 0 )  )  {     langs.add ( locale ) ; }^275^^^^^267^288^[Delete]^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^278^^^^^267^288^countries.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^langs.add ( locale ) ;countries.add ( locale ) ;^278^^^^^267^288^countries.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^list.add ( locale ) ;countries.add ( locale ) ;^278^^^^^267^288^countries.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i > locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = ; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 5 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < list.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^for  ( localent i = 0; i < is.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^for  ( int i = 0; i < locales.add (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  <= 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  <= 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale .getVariant (  )  .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  )  .substring ( i , i )   != 0 && locale.getVariant (  )^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0  && locale.getVariant (  ) .length (  )  == 0  )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^Locale locale =  ( Locale )  langs.get ( i ) ;^274^^^^^267^288^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^Locale locale =  ( Locale )  i.get ( locales ) ;^274^^^^^267^288^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^Locale locale =  ( Locale )  list.get ( i ) ;^274^^^^^267^288^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^List locales = availableLocaleList (  ) ;Locale locale =  ( Locale )  locales.get ( i ) ;^274^^^^^267^288^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^274^^^^^267^288^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() + 3  != 0 && locale.getVariant (  ) .length() + 3  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() - 0  != 0 && locale.getVariant (  ) .length() - 0  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() - 6  != 0 && locale.getVariant (  ) .length() - 6  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^locale.getCountry (  ) .charAt (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^locale.getCountry (  )  .substring ( i , i )   != 0 && locale.getVariant (  )^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^276^277^278^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  { countries.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() + 8  != 0 && locale.getVariant (  ) .length() + 8  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^locale .getVariant (  )  .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 0  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^locale.getVariant (  ) .charAt (  )  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^locale .getLanguage (  )  .length (  )  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^277^278^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  { countries.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 8  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^countries = new Array Set  (  ) ;^271^^^^^267^288^countries = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P4_Replace_Constructor]^countries = countries =  new ArrayList ( 4 )  ;^271^^^^^267^288^countries = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^countries =  new ArrayList ( 4 )  ;^271^^^^^267^288^countries = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^langs = new ArrayList (  ) ;countries = new ArrayList (  ) ;^271^^^^^267^288^countries = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^countries = Collections.unmodifiable LinkedHashSet  ( countries ) ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^countries = Collections.unmodifiableList ( list ) ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^countries = Collections.unmodifiableSet ( countries ) ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^countries =  Collections.unmodifiableList ( locales ) ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^countries = Collections.EMPTY_LIST;countries = Collections.unmodifiableList ( countries ) ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^langs = Collections.unmodifiableList ( langs ) ;countries = Collections.unmodifiableList ( countries ) ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^set = Collections.unmodifiableSet ( set ) ;countries = Collections.unmodifiableList ( countries ) ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^countries = new  Set  (  ) ;^271^^^^^267^288^countries = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^ArrayList  locales = availableLocale ArrayList  (  ) ;^272^^^^^267^288^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^List list = new ArrayList ( 4 ) ;List locales = availableLocaleList (  ) ;^272^^^^^267^288^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^Set set = cAvailableLocaleSet;List locales = availableLocaleList (  ) ;^272^^^^^267^288^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^Locale locale =  ( Locale )  locales.get ( i ) ;List locales = availableLocaleList (  ) ;^272^^^^^267^288^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() + 6 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^272^^^^^267^288^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P11_Insert_Donor_Statement]^set = new HashSet ( availableLocaleList (  )  ) ;List locales = availableLocaleList (  ) ;^272^^^^^267^288^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() + 8 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^for  ( int i = 0; i < langs.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() - 8  != 0 && locale.getVariant (  ) .length() - 8  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^if  ( languageCode.equals ( locale .getVariant (  )   )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() - 4  != 0 && locale.getVariant (  ) .length() - 4  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() - 2  != 0 && locale.getVariant (  ) .length() - 2  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() - 5  != 0 && locale.getVariant (  ) .length() - 5  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 9  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^locale.getVariant (  )  .substring ( i , i )   == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^countries = Collections.unmodifiableSet ( locales ) ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^281^282^283^284^^267^288^countries = Collections.unmodifiableList ( countries ) ; } else { countries = Collections.EMPTY_LIST; }^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  >= 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  > 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() - 5  != 0 && locale.getVariant (  ) .length() - 5  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^if  (  locale.getCountry (  ) .charAt (  )  != 0  && locale.getVariant (  ) .length (  )  == 0  )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^countries .contains ( null )  ;^278^^^^^267^288^countries.add ( locale ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = -7; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = -5; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 7 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^for  ( localesnt i = 0; i < i.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^for  ( int i = 0; i < list.add (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() - 2  != 0 && locale.getVariant (  ) .length() - 2  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() - 8  != 0 && locale.getVariant (  ) .length() - 8  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() + 5  != 0 && locale.getVariant (  ) .length() + 5  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 5  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^countries = new Array ArrayList  (  ) ;^271^^^^^267^288^countries = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^countries = new  List  (  ) ;^271^^^^^267^288^countries = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() + 4  != 0 && locale.getVariant (  ) .length() + 4  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() - 1  != 0 && locale.getVariant (  ) .length() - 1  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 1  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 0  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^cCountriesByLanguage.put ( languageCode, locales ) ;^285^^^^^267^288^cCountriesByLanguage.put ( languageCode, countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^cCountriesByLanguage.put (  countries ) ;^285^^^^^267^288^cCountriesByLanguage.put ( languageCode, countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^cCountriesByLanguage.put ( languageCode ) ;^285^^^^^267^288^cCountriesByLanguage.put ( languageCode, countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^cCountriesByLanguage.put ( countries, languageCode ) ;^285^^^^^267^288^cCountriesByLanguage.put ( languageCode, countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P14_Delete_Statement]^^285^^^^^267^288^cCountriesByLanguage.put ( languageCode, countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  >= 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != -3 && locale.getVariant (  ) .length (  )  == -3 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() + 2  != 0 && locale.getVariant (  ) .length() + 2  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i == locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = -9; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 4; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 6; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() + 5 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P2_Replace_Operator]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  > 0 && locale.getVariant (  ) .length (  )  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 2 && locale.getVariant (  ) .length (  )  == 2 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length() + 7  != 0 && locale.getVariant (  ) .length() + 7  == 0 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^Locale locale =  ( Locale )  locales .get ( null )  ;^274^^^^^267^288^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() - 7  != 0 && locale.getVariant (  ) .length() - 7  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() - 9  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^countries = new  LinkedList  (  ) ;^271^^^^^267^288^countries = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = -1; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 2 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() - 9 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() - 0  != 0 && locale.getVariant (  ) .length() - 0  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() + 2  != 0 && locale.getVariant (  ) .length() + 2  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 5  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^countries = Collections.unmodifiableSet ( list ) ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != -6 && locale.getVariant (  ) .length (  )  == -6 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() + 7 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < localess.size (  ) ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != -1 && locale.getVariant (  ) .length (  )  == -1 )  {^275^276^277^^^267^288^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^Locale locale =  ( Locale )  locales .get ( 1 )  ;^274^^^^^267^288^Locale locale =  ( Locale )  locales.get ( i ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getCountry (  ) .length() + 0  != 0 && locale.getVariant (  ) .length() + 0  == 0 )  {^276^277^^^^267^288^locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 7  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P7_Replace_Invocation]^countries = Collections .unmodifiableSet ( null )  ;^281^^^^^267^288^countries = Collections.unmodifiableList ( countries ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P8_Replace_Mix]^countries  = null ;^283^^^^^267^288^countries = Collections.EMPTY_LIST;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^countries = new  LinkedHashSet  (  ) ;^271^^^^^267^288^countries = new ArrayList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P1_Replace_Type]^LinkedHashSet  locales = availableLocale LinkedHashSet  (  ) ;^272^^^^^267^288^List locales = availableLocaleList (  ) ;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() + 9 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^for  ( int i = 0; i < locales.size() + 3 ; i++ )  {^273^^^^^267^288^for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P3_Replace_Literal]^locale.getVariant (  ) .length() + 3  == 0 )  {^277^^^^^267^288^locale.getVariant (  ) .length (  )  == 0 )  {^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
[P5_Replace_Variable]^return locales;^287^^^^^267^288^return countries;^[CLASS] LocaleUtils  [METHOD] countriesByLanguage [RETURN_TYPE] List   String languageCode [VARIABLES] Locale  locale  Set  cAvailableLocaleSet  set  boolean  List  cAvailableLocaleList  countries  langs  list  locales  String  languageCode  Map  cCountriesByLanguage  cLanguagesByCountry  int  i  
