[P1_Replace_Type]^private static final  short  HASH_SIZE = 509;^62^^^^^57^67^private static final int HASH_SIZE = 509;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P3_Replace_Literal]^private static final int HASH_SIZE = 507;^62^^^^^57^67^private static final int HASH_SIZE = 509;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private  final int HASH_SIZE = 2;^62^^^^^57^67^private static final int HASH_SIZE = 509;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  SHORT     =   2;^63^^^^^58^68^private static final int SHORT     =   2;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P3_Replace_Literal]^private static final int SHORT     =   6;^63^^^^^58^68^private static final int SHORT     =   2;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final int SHORT     =   4;^63^^^^^58^68^private static final int SHORT     =   2;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  long  WORD      =   4;^64^^^^^59^69^private static final int WORD      =   4;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P3_Replace_Literal]^private static final int WORD      =   2;^64^^^^^59^69^private static final int WORD      =   4;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  WORD      =   3;^64^^^^^59^69^private static final int WORD      =   4;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  NIBLET_MASK = 0x0f;^65^^^^^60^70^private static final int NIBLET_MASK = 0x0f;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private  final  long  NIBLET_MASK = 0x0f;^65^^^^^60^70^private static final int NIBLET_MASK = 0x0f;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BYTE_SHIFT = 8;^66^^^^^61^71^private static final int BYTE_SHIFT = 8;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P3_Replace_Literal]^private static final int BYTE_SHIFT = -1;^66^^^^^61^71^private static final int BYTE_SHIFT = 8;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final int BYTE_SHIFT  = null ;^66^^^^^61^71^private static final int BYTE_SHIFT = 8;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  POS_0 = 0;^67^^^^^62^72^private static final int POS_0 = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final  long  POS_3 = 3;^67^^^^^62^72^private static final int POS_0 = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  POS_1 = 1;^68^^^^^63^73^private static final int POS_1 = 1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final int POS_1 ;^68^^^^^63^73^private static final int POS_1 = 1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  long  POS_2 = 2;^69^^^^^64^74^private static final int POS_2 = 2;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P3_Replace_Literal]^private static final int POS_-4 = -4;^69^^^^^64^74^private static final int POS_2 = 2;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final int POS_3 = 3;^69^^^^^64^74^private static final int POS_2 = 2;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  POS_3 = 3;^70^^^^^65^75^private static final int POS_3 = 3;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P3_Replace_Literal]^private static final int POS_2 = 2;^70^^^^^65^75^private static final int POS_3 = 3;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final int POS_3 + 2 = 3 + 2;^70^^^^^65^75^private static final int POS_3 = 3;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private final Map entries  = null ;^76^^^^^71^81^private final Map entries = new HashMap ( HASH_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private final Map nameMap  = null ;^81^^^^^76^86^private final Map nameMap = new HashMap ( HASH_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private  short  headerOffset = -1;^84^^^^^79^89^private long headerOffset = -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P3_Replace_Literal]^private long headerOffset = --1;^84^^^^^79^89^private long headerOffset = -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private long headerOffset = -2;^84^^^^^79^89^private long headerOffset = -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private  int  dataOffset = -1;^85^^^^^80^90^private long dataOffset = -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private long dataOffset = -2;^85^^^^^80^90^private long dataOffset = -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private final char encoding;^95^^^^^90^100^private final String encoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private  RandomAccessFile archive;^105^^^^^100^110^private final RandomAccessFile archive;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private  boolean useUnicodeExtraFields;^110^^^^^105^115^private final boolean useUnicodeExtraFields;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  CFH_LEN =^276^277^278^279^^276^292^private static final int CFH_LEN =^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final int CFH_LEN ;^276^277^278^279^^276^292^private static final int CFH_LEN =^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  MIN_EOCD_SIZE =^407^408^409^410^^407^420^private static final int MIN_EOCD_SIZE =^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  long  MAX_EOCD_SIZE = MIN_EOCD_SIZE   private static final  long  CFD_LOCATOR_OFFSET =^422^423^424^425^^422^423^private static final int MAX_EOCD_SIZE = MIN_EOCD_SIZE   private static final int CFD_LOCATOR_OFFSET =^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final int MAX_EOCD_SIZE ;^422^423^424^425^^422^423^private static final int MAX_EOCD_SIZE = MIN_EOCD_SIZE   private static final int CFD_LOCATOR_OFFSET =^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  CFD_LOCATOR_OFFSET =^425^426^427^428^^425^434^private static final int CFD_LOCATOR_OFFSET =^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static final  long  CFD_LOCATOR_OFFSET =^425^426^427^428^^425^434^private static final int CFD_LOCATOR_OFFSET =^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private static final  short  LFH_OFFSET_FOR_FILENAME_LENGTH =^481^482^483^484^^481^490^private static final long LFH_OFFSET_FOR_FILENAME_LENGTH =^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private static   int  LFH_OFFSET_FOR_FILENAME_LENGTH =^481^482^483^484^^481^490^private static final long LFH_OFFSET_FOR_FILENAME_LENGTH =^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private  short  remaining;^619^^^^^614^624^private long remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private  int  remaining;^619^^^^^614^624^private long remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P1_Replace_Type]^private  int  loc;^620^^^^^615^625^private long loc;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P3_Replace_Literal]^private boolean addDummyByte = true;^621^^^^^616^626^private boolean addDummyByte = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private boolean addDummyByte  = null ;^621^^^^^616^626^private boolean addDummyByte = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private  byte[] name;^681^^^^^676^686^private final byte[] name;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P8_Replace_Mix]^private  byte[] comment;^682^^^^^677^687^private final byte[] comment;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [VARIABLES] 
[P14_Delete_Statement]^^120^^^^^119^121^this ( f, ZipEncodingHelper.UTF8 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] File)   File f [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^this ( f, encoding, true ) ;this ( f, ZipEncodingHelper.UTF8 ) ;^120^^^^^119^121^this ( f, ZipEncodingHelper.UTF8 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] File)   File f [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^this ( new File ( encoding ) , ZipEncodingHelper.UTF8 ) ;^131^^^^^130^132^this ( new File ( name ) , ZipEncodingHelper.UTF8 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P14_Delete_Statement]^^131^^^^^130^132^this ( new File ( name ) , ZipEncodingHelper.UTF8 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^this ( f, ZipEncodingHelper.UTF8 ) ;this ( new File ( name ) , ZipEncodingHelper.UTF8 ) ;^131^^^^^130^132^this ( new File ( name ) , ZipEncodingHelper.UTF8 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P8_Replace_Mix]^this ( new File ( encoding ) , encoding, true ) ;^145^^^^^144^146^this ( new File ( name ) , encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P3_Replace_Literal]^this ( new File ( name ) , encoding, false ) ;^145^^^^^144^146^this ( new File ( name ) , encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P4_Replace_Constructor]^this ( new File ( name ) ,  true ) ;^145^^^^^144^146^this ( new File ( name ) , encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^this ( new File ( encoding ) , name, true ) ;^145^^^^^144^146^this ( new File ( name ) , encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P14_Delete_Statement]^^145^^^^^144^146^this ( new File ( name ) , encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^this ( f, encoding, true ) ;this ( new File ( name ) , encoding, true ) ;^145^^^^^144^146^this ( new File ( name ) , encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P3_Replace_Literal]^this ( f, encoding, false ) ;^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^this ( f, name, true ) ;^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^this (  encoding, true ) ;^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^this ( f,  true ) ;^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^this ( encoding, f, true ) ;^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P14_Delete_Statement]^^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^this ( f, ZipEncodingHelper.UTF8 ) ;this ( f, encoding, true ) ;^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P8_Replace_Mix]^this.encoding =  name;^176^^^^^174^194^this.encoding = encoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^this.remaining = remaining;this.encoding = encoding;^176^^^^^174^194^this.encoding = encoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^this.comment = comment;this.encoding = encoding;^176^^^^^174^194^this.encoding = encoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( name ) ;^177^^^^^174^194^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P14_Delete_Statement]^^177^^^^^174^194^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^this.useUnicodeExtraFields = success;^178^^^^^174^194^this.useUnicodeExtraFields = useUnicodeExtraFields;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P8_Replace_Mix]^this.useUnicodeExtraFields =  null;^178^^^^^174^194^this.useUnicodeExtraFields = useUnicodeExtraFields;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P3_Replace_Literal]^archive = new RandomAccessFile ( f, "" ) ;^179^^^^^174^194^archive = new RandomAccessFile ( f, "r" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P8_Replace_Mix]^archive =  new RandomAccessFile ( null, "r" ) ;^179^^^^^174^194^archive = new RandomAccessFile ( f, "r" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P3_Replace_Literal]^boolean success = true;^180^^^^^174^194^boolean success = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^boolean found = false;boolean success = false;^180^^^^^174^194^boolean success = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^if  ( !useUnicodeExtraFields )  {^186^^^^^174^194^if  ( !success )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P15_Unwrap_Block]^try {    archive.close();} catch (java.io.IOException e2) {};^186^187^188^189^^174^194^if  ( !success )  { try { archive.close (  ) ; } catch  ( IOException e2 )  { }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P16_Remove_Block]^^186^187^188^189^^174^194^if  ( !success )  { try { archive.close (  ) ; } catch  ( IOException e2 )  { }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P13_Insert_Block]^if  ( zipfile != null )  {     try {         zipfile.close (  ) ;     } catch  ( IOException e )  {     } }^186^^^^^174^194^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P13_Insert_Block]^if  ( zipfile != null )  {     try {         zipfile.close (  ) ;     } catch  ( IOException e )  {     } }^187^^^^^174^194^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P13_Insert_Block]^if  ( !success )  {     try {         archive.close (  ) ;     } catch  ( IOException e2 )  {     } }^187^^^^^174^194^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P7_Replace_Invocation]^archive.read (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P14_Delete_Statement]^^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^curr = archive.read (  ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^zipfile.close (  ) ;archive.close (  ) ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P3_Replace_Literal]^success = false;^184^^^^^174^194^success = true;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^found = true;success = true;^184^^^^^174^194^success = true;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P7_Replace_Invocation]^Map entriesWithoutEFS = positionAtCentralDirectory (  ) ;^182^^^^^174^194^Map entriesWithoutEFS = populateFromCentralDirectory (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P14_Delete_Statement]^^182^^^^^174^194^Map entriesWithoutEFS = populateFromCentralDirectory (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P11_Insert_Donor_Statement]^positionAtCentralDirectory (  ) ;Map entriesWithoutEFS = populateFromCentralDirectory (  ) ;^182^^^^^174^194^Map entriesWithoutEFS = populateFromCentralDirectory (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^resolveLocalFileHeaderData ( nameMap ) ;^183^^^^^174^194^resolveLocalFileHeaderData ( entriesWithoutEFS ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P7_Replace_Invocation]^ZipFile ( entriesWithoutEFS ) ;^183^^^^^174^194^resolveLocalFileHeaderData ( entriesWithoutEFS ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P14_Delete_Statement]^^183^184^^^^174^194^resolveLocalFileHeaderData ( entriesWithoutEFS ) ; success = true;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P7_Replace_Invocation]^archive .RandomAccessFile ( f , encoding )  ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P14_Delete_Statement]^^182^183^^^^174^194^Map entriesWithoutEFS = populateFromCentralDirectory (  ) ; resolveLocalFileHeaderData ( entriesWithoutEFS ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P7_Replace_Invocation]^archive .RandomAccessFile ( f , name )  ;^188^^^^^174^194^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String,boolean)   File f String encoding boolean useUnicodeExtraFields [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  IOException  e2  Map  entries  entriesWithoutEFS  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[P5_Replace_Variable]^this.remaining = start;^624^^^^^623^626^this.remaining = remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^this.remaining =  loc;^624^^^^^623^626^this.remaining = remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^len =  ( int )  remaining;this.remaining = remaining;^624^^^^^623^626^this.remaining = remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^this.encoding = encoding;this.remaining = remaining;^624^^^^^623^626^this.remaining = remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^remaining -= ret;this.remaining = remaining;^624^^^^^623^626^this.remaining = remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^loc = loc;^625^^^^^623^626^loc = start;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^loc =  remaining;^625^^^^^623^626^loc = start;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^loc += ret;loc = start;^625^^^^^623^626^loc = start;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^off += SHORT;loc = start;^625^^^^^623^626^loc = start;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^this.name = comment;^684^^^^^683^686^this.name = name;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$NameAndComment(byte[],byte[])   byte[] name byte[] comment [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^this.comment = comment;this.name = name;^684^^^^^683^686^this.name = name;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$NameAndComment(byte[],byte[])   byte[] name byte[] comment [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^this.comment = name;^685^^^^^683^686^this.comment = comment;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$NameAndComment(byte[],byte[])   byte[] name byte[] comment [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^this.name = name;this.comment = comment;^685^^^^^683^686^this.comment = comment;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$NameAndComment(byte[],byte[])   byte[] name byte[] comment [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^this.encoding = encoding;this.comment = comment;^685^^^^^683^686^this.comment = comment;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$NameAndComment(byte[],byte[])   byte[] name byte[] comment [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^return name;^202^^^^^201^203^return encoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEncoding [RETURN_TYPE] String   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^archive.read (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P14_Delete_Statement]^^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^curr = archive.read (  ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^zipfile.close (  ) ;archive.close (  ) ;^210^^^^^209^211^archive.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P2_Replace_Operator]^if  ( zipfile == null )  {^219^^^^^218^226^if  ( zipfile != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^if  ( zipfile != true )  {^219^^^^^218^226^if  ( zipfile != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P9_Replace_Statement]^if  ( newComment != null )  {^219^^^^^218^226^if  ( zipfile != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P9_Replace_Statement]^if  ( f != null )  {^219^^^^^218^226^if  ( zipfile != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P15_Unwrap_Block]^try {    zipfile.close();} catch (java.io.IOException e) {};^219^220^221^222^^218^226^if  ( zipfile != null )  { try { zipfile.close (  ) ; } catch  ( IOException e )  { }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P16_Remove_Block]^^219^220^221^222^^218^226^if  ( zipfile != null )  { try { zipfile.close (  ) ; } catch  ( IOException e )  { }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P13_Insert_Block]^if  ( !success )  {     try {         archive.close (  ) ;     } catch  ( IOException e2 )  {     } }^219^^^^^218^226^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P13_Insert_Block]^if  ( zipfile != null )  {     try {         zipfile.close (  ) ;     } catch  ( IOException e )  {     } }^220^^^^^218^226^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P13_Insert_Block]^if  ( !success )  {     try {         archive.close (  ) ;     } catch  ( IOException e2 )  {     } }^220^^^^^218^226^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^zipfile.ZipFile (  ) ;^221^^^^^218^226^zipfile.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P14_Delete_Statement]^^221^^^^^218^226^zipfile.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^archive.close (  ) ;zipfile.close (  ) ;^221^^^^^218^226^zipfile.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^zipfile .RandomAccessFile ( this , name )  ;^221^^^^^218^226^zipfile.close (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] closeQuietly [RETURN_TYPE] void   ZipFile zipfile [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  ZipFile  zipfile  String  encoding  name  IOException  e  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^return Collections.enumeration ( nameMap.keySet (  )  ) ;^233^^^^^232^234^return Collections.enumeration ( entries.keySet (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntries [RETURN_TYPE] Enumeration   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P14_Delete_Statement]^^233^^^^^232^234^return Collections.enumeration ( entries.keySet (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntries [RETURN_TYPE] Enumeration   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^return Collections.enumeration ( entries .get ( this )   ) ;^233^^^^^232^234^return Collections.enumeration ( entries.keySet (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntries [RETURN_TYPE] Enumeration   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^return Collections.enumeration ( nameMap .get ( 3 )   ) ;^233^^^^^232^234^return Collections.enumeration ( entries.keySet (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntries [RETURN_TYPE] Enumeration   [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^return  ( ZipArchiveEntry )  entriesWithoutEFS.get ( name ) ;^244^^^^^243^245^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntry [RETURN_TYPE] ZipArchiveEntry   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^return  ( ZipArchiveEntry )  nameMapMap.get ( name ) ;^244^^^^^243^245^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntry [RETURN_TYPE] ZipArchiveEntry   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^return  ( ZipArchiveEntry )  name.get ( nameMap ) ;^244^^^^^243^245^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntry [RETURN_TYPE] ZipArchiveEntry   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^return  ( ZipArchiveEntry )  nameMap.remove ( name ) ;^244^^^^^243^245^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntry [RETURN_TYPE] ZipArchiveEntry   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^return  ( ZipArchiveEntry )  nameMap .keySet (  )  ;^244^^^^^243^245^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntry [RETURN_TYPE] ZipArchiveEntry   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^return  ( ZipArchiveEntry )  entriesWithoutEFS .keySet (  )  ;^244^^^^^243^245^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntry [RETURN_TYPE] ZipArchiveEntry   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P14_Delete_Statement]^^244^^^^^243^245^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntry [RETURN_TYPE] ZipArchiveEntry   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^OffsetEntry offsetEntry =  ( OffsetEntry )  nameMap.get ( ze ) ;^257^^^^^255^274^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^OffsetEntry offsetEntry =  ( OffsetEntry )  ze.get ( entries ) ;^257^^^^^255^274^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.remove ( ze ) ;^257^^^^^255^274^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^OffsetEntry offsetEntry =  ( OffsetEntry )  nameMap.remove ( ze ) ;^257^^^^^255^274^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^OffsetEntry offset = new OffsetEntry (  ) ;OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^257^^^^^255^274^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries .keySet (  )  ;^257^^^^^255^274^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P14_Delete_Statement]^^257^^^^^255^274^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P2_Replace_Operator]^if  ( offsetEntry != null )  {^258^^^^^255^274^if  ( offsetEntry == null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^if  ( offsetEntry == true )  {^258^^^^^255^274^if  ( offsetEntry == null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P9_Replace_Statement]^if  ( newComment != null )  {^258^^^^^255^274^if  ( offsetEntry == null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P15_Unwrap_Block]^return null;^258^259^260^^^255^274^if  ( offsetEntry == null )  { return null; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P16_Remove_Block]^^258^259^260^^^255^274^if  ( offsetEntry == null )  { return null; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P13_Insert_Block]^if  ( len <= 0 )  {     return 0; }^258^^^^^255^274^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^return true;^259^^^^^255^274^return null;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^return false;^259^^^^^255^274^return null;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P1_Replace_Type]^short  start = offsetEntry.dataOffset;^261^^^^^255^274^long start = offsetEntry.dataOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^long start = remaining;^261^^^^^255^274^long start = offsetEntry.dataOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^long start = offsetEntry.dataOffset.dataOffset;^261^^^^^255^274^long start = offsetEntry.dataOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^long start = offsetEntry;^261^^^^^255^274^long start = offsetEntry.dataOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P11_Insert_Donor_Statement]^long offset = offsetEntry.headerOffset;long start = offsetEntry.dataOffset;^261^^^^^255^274^long start = offsetEntry.dataOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P4_Replace_Constructor]^new BoundedInputStream (  ze.getCompressedSize (  )  ) ;^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P4_Replace_Constructor]^new BoundedInputStream ( start.getCompressedSize (  )  ) ;^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^new BoundedInputStream ( remaining, ze.getCompressedSize (  )  ) ;^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^new BoundedInputStream ( ze, start.getCompressedSize (  )  ) ;^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^new BoundedInputStream ( start, ze.setTime (  )  ) ;^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P4_Replace_Constructor]^BoundedInputStream bis = new BoundedInputStream (  ze.getCompressedSize (  )  ) ;^262^263^^^^255^274^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P4_Replace_Constructor]^BoundedInputStream bis = new BoundedInputStream ( start.getCompressedSize (  )  ) ;^262^263^^^^255^274^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P5_Replace_Variable]^BoundedInputStream bis = new BoundedInputStream ( ze, start.getCompressedSize (  )  ) ;^262^263^^^^255^274^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^BoundedInputStream bis = new BoundedInputStream ( start, ze.setTime (  )  ) ;^262^263^^^^255^274^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^BoundedInputStream bis = new BoundedInputStream ( remaining, ze.setTime (  )  ) ;^262^263^^^^255^274^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^new BoundedInputStream ( start, ze .setCompressedSize (  )   ) ;^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P14_Delete_Statement]^^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P3_Replace_Literal]^return new InflaterInputStream ( bis, new Inflater ( false )  ) ;^269^^^^^255^274^return new InflaterInputStream ( bis, new Inflater ( true )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P2_Replace_Operator]^throw new ZipException ( "Found unsupported compression method "  &&  ze.getMethod (  )  ) ;^271^272^^^^255^274^throw new ZipException ( "Found unsupported compression method " + ze.getMethod (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P3_Replace_Literal]^throw new ZipException ( "rted compression m" + ze.getMethod (  )  ) ;^271^272^^^^255^274^throw new ZipException ( "Found unsupported compression method " + ze.getMethod (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^throw new ZipException ( "Found unsupported compression method " + ze.setTime (  )  ) ;^271^272^^^^255^274^throw new ZipException ( "Found unsupported compression method " + ze.getMethod (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P8_Replace_Mix]^throw new ZipException ( "Found unsupported compression method " + ze .setMethod (  )   ) ;^271^272^^^^255^274^throw new ZipException ( "Found unsupported compression method " + ze.getMethod (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P2_Replace_Operator]^throw new ZipException ( "Found unsupported compression method "  ||  ze.getMethod (  )  ) ;^271^272^^^^255^274^throw new ZipException ( "Found unsupported compression method " + ze.getMethod (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P3_Replace_Literal]^throw new ZipException ( "Fouound unsupported compression method " + ze.getMethod (  )  ) ;^271^272^^^^255^274^throw new ZipException ( "Found unsupported compression method " + ze.getMethod (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^switch  ( ze.setTime (  )  )  {^264^^^^^255^274^switch  ( ze.getMethod (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^switch  ( ze .setMethod (  )   )  {^264^^^^^255^274^switch  ( ze.getMethod (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P14_Delete_Statement]^^264^265^266^^^255^274^switch  ( ze.getMethod (  )  )  { case ZipArchiveEntry.STORED: return bis;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P14_Delete_Statement]^^268^^^^^255^274^bis.addDummy (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^+ ze.setTime (  )  ) ;^272^^^^^255^274^+ ze.getMethod (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^+ ze .setMethod (  )   ) ;^272^^^^^255^274^+ ze.getMethod (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P14_Delete_Statement]^^272^^^^^255^274^+ ze.getMethod (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[P7_Replace_Invocation]^populateFromCentralDirectory (  ) ;^310^^^^^295^325^positionAtCentralDirectory (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^310^^^^^295^325^positionAtCentralDirectory (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^Map entriesWithoutEFS = populateFromCentralDirectory (  ) ;positionAtCentralDirectory (  ) ;^310^^^^^295^325^positionAtCentralDirectory (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cfdOffset = new byte[WORD];byte[] cfh = new byte[CFH_LEN];^312^^^^^297^327^byte[] cfh = new byte[CFH_LEN];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] b = new byte[SHORT];byte[] cfh = new byte[CFH_LEN];^312^^^^^297^327^byte[] cfh = new byte[CFH_LEN];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] fileName = new byte[fileNameLen];byte[] cfh = new byte[CFH_LEN];^312^^^^^297^327^byte[] cfh = new byte[CFH_LEN];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] comment = new byte[commentLen];byte[] cfh = new byte[CFH_LEN];^312^^^^^297^327^byte[] cfh = new byte[CFH_LEN];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cdExtraData = new byte[extraLen];byte[] cfh = new byte[CFH_LEN];^312^^^^^297^327^byte[] cfh = new byte[CFH_LEN];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] localExtraData = new byte[extraFieldLen];byte[] cfh = new byte[CFH_LEN];^312^^^^^297^327^byte[] cfh = new byte[CFH_LEN];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cfdOffset = new byte[WORD];byte[] signatureBytes = new byte[WORD];^314^^^^^299^329^byte[] signatureBytes = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] b = new byte[SHORT];byte[] signatureBytes = new byte[WORD];^314^^^^^299^329^byte[] signatureBytes = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final byte[] start = new byte[WORD];byte[] signatureBytes = new byte[WORD];^314^^^^^299^329^byte[] signatureBytes = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cdExtraData = new byte[extraLen];byte[] signatureBytes = new byte[WORD];^314^^^^^299^329^byte[] signatureBytes = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^archive.readFully ( name ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^archive.seek ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^archive.seek ( fileName ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^sig = ZipLong.getValue ( signatureBytes ) ;archive.readFully ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.readFully ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( signatureBytes ) ;^315^^^^^300^330^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^int  sig = ZipLong.getValue ( signatureBytes ) ;^316^^^^^301^331^long sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long sig = ZipLong.getValue ( name ) ;^316^^^^^301^331^long sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^long sig = ZipLong.getValue ( fileName ) ;^316^^^^^301^331^long sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;long sig = ZipLong.getValue ( signatureBytes ) ;^316^^^^^301^331^long sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^316^317^^^^301^331^long sig = ZipLong.getValue ( signatureBytes ) ; final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^sig = ZipLong.getValue ( signatureBytes ) ;long sig = ZipLong.getValue ( signatureBytes ) ;^316^^^^^301^331^long sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;long sig = ZipLong.getValue ( signatureBytes ) ;^316^^^^^301^331^long sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^final  short  cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^317^^^^^302^332^final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^final long cfhSig = ZipLong .getValue ( cfh )  ;^317^^^^^302^332^final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long sig = ZipLong.getValue ( signatureBytes ) ;final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^317^^^^^302^332^final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^317^^^^^302^332^final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^final long cfhSig = ZipLong .getValue ( signatureBytes )  ;^317^^^^^302^332^final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^317^^^^^302^332^final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^if  ( sig != cfhSig || startsWithLocalFileHeader (  )  )  {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^if  ( sig == cfhSig && startsWithLocalFileHeader (  )  )  {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^if  ( time != cfhSig && startsWithLocalFileHeader (  )  )  {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^if  ( sig != time && startsWithLocalFileHeader (  )  )  {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^if  ( cfhSig != sig && startsWithLocalFileHeader (  )  )  {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P6_Replace_Expression]^if  ( sig != cfhSig ) {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P6_Replace_Expression]^if  (  startsWithLocalFileHeader (  )  )  {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P6_Replace_Expression]^if  ( "central directory is empty, can't expand" + " corrupt archive." )  {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^if  ( sig != cfhSig && positionAtCentralDirectory (  )  )  {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^if  ( sig != time ) {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P15_Unwrap_Block]^throw new java.io.IOException(("central directory is empty, can't expand" + " corrupt archive."));^318^319^320^321^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  { throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P16_Remove_Block]^^318^319^320^321^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  { throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^throw new IOException ( "central directory is empty, can't expand"  &&  " corrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^throw new IOException ( "pty, can't expan" + " corrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P13_Insert_Block]^if  (  ( sig != cfhSig )  &&  ( startsWithLocalFileHeader (  )  )  )  {     throw new IOException (  ( "central directory is empty, can't expand" + " corrupt archive." )  ) ; }^319^^^^^304^334^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^throw new IOException ( "central directory is empty, can't expand"  <=  " corrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^throw new IOException ( "c" + " corrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^throw new IOException ( "central directory is empty, can't expand" + "orrupt acorrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^throw new IOException ( "central directory is empty, can't expand"  |  " corrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^throw new IOException ( "central directory is empty, can't expandry is empty, can't ex" + " corrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^throw new IOException ( "central directory is empty, can't expand" + "ptcorrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^throw new IOException ( "central directory is empty, can't expand"  <  " corrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^throw new IOException ( "central directory is empty, can't expand director" + " corrupt archive." ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive.corrupt a" ) ;^319^320^^^^304^334^throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^while  ( sig >= cfhSig )  {^322^^^^^307^337^while  ( sig == cfhSig )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^while  ( loc == cfhSig )  {^322^^^^^307^337^while  ( sig == cfhSig )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^while  ( sig == remaining )  {^322^^^^^307^337^while  ( sig == cfhSig )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^while  ( sig == signatureBytesSig )  {^322^^^^^307^337^while  ( sig == cfhSig )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^if  ( !hasEFS || useUnicodeExtraFields )  {^400^^^^^385^415^if  ( !hasEFS && useUnicodeExtraFields )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^if  ( !useUnicodeExtraFields && useUnicodeExtraFields )  {^400^^^^^385^415^if  ( !hasEFS && useUnicodeExtraFields )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^if  ( !hasEFS && success )  {^400^^^^^385^415^if  ( !hasEFS && useUnicodeExtraFields )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P6_Replace_Expression]^if  ( !hasEFS ) {^400^^^^^385^415^if  ( !hasEFS && useUnicodeExtraFields )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P6_Replace_Expression]^if  (  useUnicodeExtraFields )  {^400^^^^^385^415^if  ( !hasEFS && useUnicodeExtraFields )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P15_Unwrap_Block]^noEFS.put(ze, new org.apache.commons.compress.archivers.zip.ZipFile.NameAndComment(fileName, comment));^400^401^402^^^385^415^if  ( !hasEFS && useUnicodeExtraFields )  { noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P16_Remove_Block]^^400^401^402^^^385^415^if  ( !hasEFS && useUnicodeExtraFields )  { noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P13_Insert_Block]^if  ( entriesWithoutEFS.containsKey ( ze )  )  {     setNameAndCommentFromExtraFields ( ze,  (  ( NameAndComment )   ( entriesWithoutEFS.get ( ze )  )  )  ) ; }^400^^^^^385^415^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P4_Replace_Constructor]^noEFS.put ( ze, new NameAndComment (  comment )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P4_Replace_Constructor]^noEFS.put ( ze, new NameAndComment ( fileName )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^noEFS.put ( ze, new NameAndComment ( signatureBytes, comment )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^noEFS.put ( ze, new NameAndComment ( fileName, signatureBytes )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^noEFS.put ( ze, new NameAndComment ( comment, fileName )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P13_Insert_Block]^if  ( curr ==  ( POS_3] )  )  {     found = true;     break; }^401^^^^^386^416^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P13_Insert_Block]^if  (  ( !hasEFS )  &&  ( useUnicodeExtraFields )  )  {     noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ; }^401^^^^^386^416^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P4_Replace_Constructor]^noEFS.put (  new NameAndComment ( fileName, comment )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^noEFS.put ( comment, new NameAndComment ( fileName, ze )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += commentLen;^328^^^^^313^343^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^328^^^^^313^343^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^loc = start;off += SHORT;^328^^^^^313^343^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += WORD;off += SHORT;^328^^^^^313^343^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += commentLen;^331^^^^^316^346^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^331^^^^^316^346^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^loc = start;off += SHORT;^331^^^^^316^346^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += WORD;off += SHORT;^331^^^^^316^346^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += commentLen;^339^^^^^324^354^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^339^^^^^324^354^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^loc = start;off += SHORT;^339^^^^^324^354^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += WORD;off += SHORT;^339^^^^^324^354^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += WORD;^342^^^^^327^357^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^342^^^^^327^357^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^loc = start;off += SHORT;^342^^^^^327^357^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += WORD;off += SHORT;^342^^^^^327^357^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += commentLen;^349^^^^^334^364^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^349^^^^^334^364^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += SHORT;off += WORD;^349^^^^^334^364^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += SHORT;^352^^^^^337^367^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^352^^^^^337^367^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += SHORT;off += WORD;^352^^^^^337^367^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += POS_2;^355^^^^^340^370^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^355^^^^^340^370^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += SHORT;off += WORD;^355^^^^^340^370^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += POS_3;^358^^^^^343^373^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^358^^^^^343^373^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += SHORT;off += WORD;^358^^^^^343^373^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += WORD;^361^^^^^346^376^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + = null ;^361^^^^^346^376^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^loc = start;off += SHORT;^361^^^^^346^376^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += WORD;off += SHORT;^361^^^^^346^376^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += POS_2;^364^^^^^349^379^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + = null ;^364^^^^^349^379^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^loc = start;off += SHORT;^364^^^^^349^379^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += WORD;off += SHORT;^364^^^^^349^379^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += WORD;^367^^^^^352^382^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^367^^^^^352^382^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^loc = start;off += SHORT;^367^^^^^352^382^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += WORD;off += SHORT;^367^^^^^352^382^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += fileNameLen;^369^^^^^354^384^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^369^^^^^354^384^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^loc = start;off += SHORT;^369^^^^^354^384^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += WORD;off += SHORT;^369^^^^^354^384^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += commentLen;^372^^^^^357^387^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^372^^^^^357^387^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^loc = start;off += SHORT;^372^^^^^357^387^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += WORD;off += SHORT;^372^^^^^357^387^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += extraLen;^375^^^^^360^390^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^375^^^^^360^390^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^off += SHORT;off += WORD;^375^^^^^360^390^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^offset.headerOffset = ZipLong.getValue ( name, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^offset.headerOffset = ZipLong.getValue ( cfh, extraLen ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^offset.headerOffset = ZipLong.getValue (  off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^offset.headerOffset = ZipLong.getValue ( cfh ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^offset.headerOffset =  ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^sig = ZipLong.getValue ( fileName ) ;^398^^^^^383^413^sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^sig = ZipLong .getValue ( signatureBytes , off )  ;^398^^^^^383^413^sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P4_Replace_Constructor]^ZipArchiveEntry ze = new OffsetEntry (  )  ;^325^^^^^310^340^ZipArchiveEntry ze = new ZipArchiveEntry (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P4_Replace_Constructor]^OffsetEntry offset = new ZipArchiveEntry (  )  ;^382^^^^^367^397^OffsetEntry offset = new OffsetEntry (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^short  off = 0;^324^^^^^309^339^int off = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^int off = commentLen;^324^^^^^309^339^int off = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int ret = -1;int off = 0;^324^^^^^309^339^int off = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;ZipArchiveEntry ze = new ZipArchiveEntry (  ) ;^325^^^^^310^340^ZipArchiveEntry ze = new ZipArchiveEntry (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^short  versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int versionMadeBy = ZipShort.getValue ( name, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int versionMadeBy = ZipShort.getValue ( cfh, generalPurposeFlag ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int versionMadeBy = ZipShort.getValue (  off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int versionMadeBy = ZipShort.getValue ( cfh ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int versionMadeBy = ZipShort.getValue ( off, cfh ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^int versionMadeBy = ZipShort .getValue ( comment )  ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( b ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraFieldLen = ZipShort.getValue ( b ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^final  long  generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final int generalPurposeFlag = ZipShort.getValue ( name, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final int generalPurposeFlag = ZipShort.getValue (  off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final int generalPurposeFlag = ZipShort.getValue ( cfh ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final int generalPurposeFlag = ZipShort.getValue ( off, cfh ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^final int generalPurposeFlag = ZipShort.getValue ( signatureBytes, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( b ) ;final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraFieldLen = ZipShort.getValue ( b ) ;final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  <= 0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^final boolean hasEFS = ( generalPurposeFlag  <=  ZipArchiveOutputStream.EFS_FLAG )  != 0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 2;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final boolean hasEFS = ( fileNameLen & ZipArchiveOutputStream.EFS_FLAG )  != 0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final boolean hasEFS = ( ZipArchiveOutputStream.EFS_FLAG & generalPurposeFlag )  != 0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^final boolean hasEFS = ( extraLen & ZipArchiveOutputStream.EFS_FLAG )  != 0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final ZipEncoding entryEncoding = useUnicodeExtraFields ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^336^337^^^^321^351^final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final ZipEncoding entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING ? hasEFS : zipEncoding;^336^337^^^^321^351^final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final ZipEncoding entryEncoding = hasEFS ? zipEncoding : ZipEncodingHelper.UTF8_ZIP_ENCODING;^336^337^^^^321^351^final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P6_Replace_Expression]^final ZipEncoding entryEncoding  =  zipEncoding;^336^337^^^^321^351^final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P6_Replace_Expression]^final ZipEncoding entryEncoding  =  ZipEncodingHelper.UTF8_ZIP_ENCODING ;^336^337^^^^321^351^final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^int  time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( signatureBytes, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, POS_3 )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue (  off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( off, cfh )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^short  fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int fileNameLen = ZipShort.getValue ( cfh, POS_2 ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int fileNameLen = ZipShort.getValue (  off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int fileNameLen = ZipShort.getValue ( cfh ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int fileNameLen = ZipShort.getValue ( off, cfh ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^int fileNameLen = ZipShort.getValue ( cfh, generalPurposeFlag ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( b ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraFieldLen = ZipShort.getValue ( b ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^short  extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int extraLen = ZipShort.getValue ( signatureBytes, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int extraLen = ZipShort.getValue ( cfh, versionMadeBy ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int extraLen = ZipShort.getValue (  off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int extraLen = ZipShort.getValue ( cfh ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int extraLen = ZipShort.getValue ( off, cfh ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^int extraLen = ZipShort.getValue ( cfh, POS_2 ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( b ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraFieldLen = ZipShort.getValue ( b ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^short  commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int commentLen = ZipShort.getValue ( name, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int commentLen = ZipShort.getValue ( cfh, POS_2 ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int commentLen = ZipShort.getValue (  off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int commentLen = ZipShort.getValue ( cfh ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int commentLen = ZipShort.getValue ( off, cfh ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^int commentLen = ZipShort.getValue ( signatureBytes, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( b ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraFieldLen = ZipShort.getValue ( b ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cfdOffset = new byte[WORD];byte[] fileName = new byte[fileNameLen];^377^^^^^362^392^byte[] fileName = new byte[fileNameLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] b = new byte[SHORT];byte[] fileName = new byte[fileNameLen];^377^^^^^362^392^byte[] fileName = new byte[fileNameLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cfh = new byte[CFH_LEN];byte[] fileName = new byte[fileNameLen];^377^^^^^362^392^byte[] fileName = new byte[fileNameLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] comment = new byte[commentLen];byte[] fileName = new byte[fileNameLen];^377^^^^^362^392^byte[] fileName = new byte[fileNameLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cdExtraData = new byte[extraLen];byte[] fileName = new byte[fileNameLen];^377^^^^^362^392^byte[] fileName = new byte[fileNameLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] localExtraData = new byte[extraFieldLen];byte[] fileName = new byte[fileNameLen];^377^^^^^362^392^byte[] fileName = new byte[fileNameLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;OffsetEntry offset = new OffsetEntry (  ) ;^382^^^^^367^397^OffsetEntry offset = new OffsetEntry (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cfdOffset = new byte[WORD];byte[] cdExtraData = new byte[extraLen];^389^^^^^374^404^byte[] cdExtraData = new byte[extraLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] b = new byte[SHORT];byte[] cdExtraData = new byte[extraLen];^389^^^^^374^404^byte[] cdExtraData = new byte[extraLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] fileName = new byte[fileNameLen];byte[] cdExtraData = new byte[extraLen];^389^^^^^374^404^byte[] cdExtraData = new byte[extraLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cfh = new byte[CFH_LEN];byte[] cdExtraData = new byte[extraLen];^389^^^^^374^404^byte[] cdExtraData = new byte[extraLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] comment = new byte[commentLen];byte[] cdExtraData = new byte[extraLen];^389^^^^^374^404^byte[] cdExtraData = new byte[extraLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] signatureBytes = new byte[WORD];byte[] cdExtraData = new byte[extraLen];^389^^^^^374^404^byte[] cdExtraData = new byte[extraLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] localExtraData = new byte[extraFieldLen];byte[] cdExtraData = new byte[extraLen];^389^^^^^374^404^byte[] cdExtraData = new byte[extraLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cfdOffset = new byte[WORD];byte[] comment = new byte[commentLen];^393^^^^^378^408^byte[] comment = new byte[commentLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] b = new byte[SHORT];byte[] comment = new byte[commentLen];^393^^^^^378^408^byte[] comment = new byte[commentLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] fileName = new byte[fileNameLen];byte[] comment = new byte[commentLen];^393^^^^^378^408^byte[] comment = new byte[commentLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cfh = new byte[CFH_LEN];byte[] comment = new byte[commentLen];^393^^^^^378^408^byte[] comment = new byte[commentLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] cdExtraData = new byte[extraLen];byte[] comment = new byte[commentLen];^393^^^^^378^408^byte[] comment = new byte[commentLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^byte[] localExtraData = new byte[extraFieldLen];byte[] comment = new byte[commentLen];^393^^^^^378^408^byte[] comment = new byte[commentLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^archive.readFully ( signatureBytes ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^archive.seek ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^archive .read (  )  ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( cfh ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int versionMadeBy = ZipShort.getValue ( signatureBytes, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int versionMadeBy = ZipShort.getValue ( cfh, SHORT ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )   ||  NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^ze.setPlatform (  ( versionMadeBy  <<  BYTE_SHIFT )  & NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setPlatform (  ( SHORT >> BYTE_SHIFT )  & NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setPlatform (  ( versionMadeBy >> POS_3 )  & NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setPlatform (  ( BYTE_SHIFT >> versionMadeBy )  & NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setPlatform (  ( versionMadeBy >> NIBLET_MASK )  & BYTE_SHIFT ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setPlatform (  ( NIBLET_MASK >> BYTE_SHIFT )  & versionMadeBy ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setPlatform (  ( commentLen >> BYTE_SHIFT )  & NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final int generalPurposeFlag = ZipShort.getValue ( cfh, commentLen ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setMethod ( ZipShort.getValue ( signatureBytes, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setMethod ( ZipShort.getValue ( cfh, POS_3 )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setMethod ( ZipShort.getValue (  off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setMethod ( ZipShort.getValue ( cfh )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setMethod ( ZipShort.getValue ( off, cfh )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze .getMethod (  )  ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setMethod ( ZipShort .getValue ( name )   ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setMethod ( ZipShort.getValue ( cfh, POS_2 )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, SHORT )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^347^348^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ; ze.setTime ( time ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( name, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, POS_2 )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^long time = ZipUtil.dosToJavaTime ( ZipLong .getValue ( fileName )   ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^long time = ZipUtil.dosToJavaTime ( ZipLong .getValue ( cdExtraData )   ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setTime ( start ) ;^348^^^^^333^363^ze.setTime ( time ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze .setSize (  )  ;^348^^^^^333^363^ze.setTime ( time ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setTime ( sig ) ;^348^^^^^333^363^ze.setTime ( time ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^348^349^^^^333^363^ze.setTime ( time ) ; off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setName ( newName ) ;ze.setTime ( time ) ;^348^^^^^333^363^ze.setTime ( time ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setComment ( newComment ) ;ze.setTime ( time ) ;^348^^^^^333^363^ze.setTime ( time ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCrc ( ZipLong.getValue ( cfh, POS_3 )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCrc ( ZipLong.getValue (  off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCrc ( ZipLong.getValue ( cfh )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCrc ( ZipLong.getValue ( off, cfh )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setCrc ( ZipLong.getValue ( cfh, versionMadeBy )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCrc ( ZipLong.getValue ( name, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCompressedSize ( ZipLong.getValue ( signatureBytes, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCompressedSize ( ZipLong.getValue ( cfh, WORD )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCompressedSize ( ZipLong.getValue (  off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCompressedSize ( ZipLong.getValue ( cfh )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCompressedSize ( ZipLong.getValue ( off, cfh )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setCompressedSize ( ZipLong.getValue ( name, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCompressedSize ( ZipLong.getValue ( cfh, POS_3 )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze.setCompressedSize ( ZipLong .getValue ( cdExtraData )   ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setSize ( ZipLong.getValue ( name, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setSize ( ZipLong.getValue ( cfh, POS_2 )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setSize ( ZipLong.getValue (  off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setSize ( ZipLong.getValue ( cfh )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setSize ( ZipLong.getValue ( off, cfh )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze.setSize ( ZipLong .getValue ( name )   ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^sig = ZipLong.getValue ( signatureBytes ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long sig = ZipLong.getValue ( signatureBytes ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setSize ( ZipLong.getValue ( cfh, POS_3 )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze.setSize ( ZipLong .getValue ( signatureBytes )   ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int fileNameLen = ZipShort.getValue ( signatureBytes, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^int fileNameLen = ZipShort.getValue ( name, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^360^361^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ; off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;int fileNameLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int extraLen = ZipShort.getValue ( name, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int extraLen = ZipShort.getValue ( cfh, POS_3 ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^363^364^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ; off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;int extraLen = ZipShort.getValue ( cfh, off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int commentLen = ZipShort.getValue ( cfh, SHORT ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^int commentLen = ZipShort.getValue ( cfh, extraLen ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;int commentLen = ZipShort.getValue ( cfh, off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setInternalAttributes ( ZipShort.getValue ( name, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, POS_3 )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setInternalAttributes ( ZipShort.getValue (  off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setInternalAttributes ( ZipShort.getValue ( cfh )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setInternalAttributes ( ZipShort.getValue ( off, cfh )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, SHORT )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, generalPurposeFlag )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze.setInternalAttributes ( ZipShort .getValue ( comment )   ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setInternalAttributes ( ZipShort.getValue ( signatureBytes, off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setExternalAttributes ( ZipLong.getValue ( signatureBytes, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, POS_3 )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setExternalAttributes ( ZipLong.getValue (  off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setExternalAttributes ( ZipLong.getValue ( cfh )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setExternalAttributes ( ZipLong.getValue ( off, cfh )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, POS_2 )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, versionMadeBy )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^374^375^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ; off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^archive.readFully ( name ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^archive.seek ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( fileName ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setName ( zipEncoding.decode ( fileName )  ) ;^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setName ( entryEncoding.decode ( signatureBytes )  ) ;^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setName ( fileName.decode ( entryEncoding )  ) ;^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze.setName ( entryEncoding .decode ( cdExtraData )   ) ;^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setComment ( entryEncoding.decode ( comment )  ) ;ze.setName ( entryEncoding.decode ( fileName )  ) ;^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setName ( entryEncoding.decode ( name )  ) ;^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^offset.headerOffset = ZipLong.getValue ( signatureBytes, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^offset.headerOffset = ZipLong.getValue ( cfh, POS_2 ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^offset.headerOffset = ZipLong.getValue ( off, cfh ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^offset.headerOffset = ZipLong.getValue ( cfh, fileNameLen ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^entries.put (  offset ) ;^385^^^^^370^400^entries.put ( ze, offset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^entries.put ( ze ) ;^385^^^^^370^400^entries.put ( ze, offset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^entries.put ( offset, ze ) ;^385^^^^^370^400^entries.put ( ze, offset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^385^^^^^370^400^entries.put ( ze, offset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^nameMap.put ( ze.getName (  )  ) ;^387^^^^^372^402^nameMap.put ( ze.getName (  ) , ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^nameMap .get ( 3 )  ;^387^^^^^372^402^nameMap.put ( ze.getName (  ) , ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^nameMap.put ( ze.setTime (  ) , ze ) ;^387^^^^^372^402^nameMap.put ( ze.getName (  ) , ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^nameMap.put ( ze .setName (  )  , ze ) ;^387^^^^^372^402^nameMap.put ( ze.getName (  ) , ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^387^^^^^372^402^nameMap.put ( ze.getName (  ) , ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^nameMap.put ( newName, ze ) ;nameMap.put ( ze.getName (  ) , ze ) ;^387^^^^^372^402^nameMap.put ( ze.getName (  ) , ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^archive.readFully ( signatureBytes ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^archive.seek ( cdExtraData ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^archive .read (  )  ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^archive.readFully ( name ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( cdExtraData ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( cdExtraData ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( cdExtraData ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;archive.readFully ( cdExtraData ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( cdExtraData ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( cdExtraData ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.readFully ( cdExtraData ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( cdExtraData ) ;^390^^^^^375^405^archive.readFully ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCentralDirectoryExtra ( signatureBytes ) ;^391^^^^^376^406^ze.setCentralDirectoryExtra ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^391^^^^^376^406^ze.setCentralDirectoryExtra ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setExtra ( localExtraData ) ;ze.setCentralDirectoryExtra ( cdExtraData ) ;^391^^^^^376^406^ze.setCentralDirectoryExtra ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^archive.readFully ( signatureBytes ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^archive.seek ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^archive.seek ( signatureBytes ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^394^395^^^^379^409^archive.readFully ( comment ) ; ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( comment ) ;^394^^^^^379^409^archive.readFully ( comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setComment ( zipEncoding.decode ( comment )  ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setComment ( entryEncoding.decode ( signatureBytes )  ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze.setComment ( entryEncoding .decode ( cfh )   ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setName ( entryEncoding.decode ( fileName )  ) ;ze.setComment ( entryEncoding.decode ( comment )  ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setComment ( newComment ) ;ze.setComment ( entryEncoding.decode ( comment )  ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setComment ( comment.decode ( entryEncoding )  ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze.setComment ( entryEncoding .decode ( comment )   ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setComment ( entryEncoding .decode ( cdExtraData )   ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^archive.readFully ( name ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^archive.seek ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^archive.readFully ( fileName ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^sig = ZipLong.getValue ( signatureBytes ) ;archive.readFully ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.readFully ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( signatureBytes ) ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^sig = ZipLong .getValue ( fileName , off )  ;^398^^^^^383^413^sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^398^^^^^383^413^sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;sig = ZipLong.getValue ( signatureBytes ) ;^398^^^^^383^413^sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^long sig = ZipLong.getValue ( signatureBytes ) ;sig = ZipLong.getValue ( signatureBytes ) ;^398^^^^^383^413^sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;sig = ZipLong.getValue ( signatureBytes ) ;^398^^^^^383^413^sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^noEFS.put ( fileName, new NameAndComment ( ze, comment )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^if  ( !success && useUnicodeExtraFields )  {^400^^^^^385^415^if  ( !hasEFS && useUnicodeExtraFields )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^if  ( !useUnicodeExtraFields ) {^400^^^^^385^415^if  ( !hasEFS && useUnicodeExtraFields )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += POS_3;^328^^^^^313^343^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^328^^^^^313^343^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += POS_3;^331^^^^^316^346^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^331^^^^^316^346^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + = null ;^339^^^^^324^354^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += POS_2;^342^^^^^327^357^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += POS_2;^349^^^^^334^364^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^349^^^^^334^364^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += POS_3;^352^^^^^337^367^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^352^^^^^337^367^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += extraLen;^355^^^^^340^370^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^355^^^^^340^370^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += SHORT;^358^^^^^343^373^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + = null ;^358^^^^^343^373^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += POS_3;^361^^^^^346^376^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^361^^^^^346^376^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^364^^^^^349^379^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += fileNameLen;^367^^^^^352^382^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off + =  off +;^367^^^^^352^382^off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^off += SHORT;^375^^^^^360^390^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^off +;^375^^^^^360^390^off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^offset.headerOffset = ZipLong.getValue ( cfh, SHORT ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^offset.headerOffset = ZipLong .getValue ( comment )  ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^long  off = 0;^324^^^^^309^339^int off = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^int off = SHORT;^324^^^^^309^339^int off = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^long  versionMadeBy = ZipShort.getValue ( cfh, off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int versionMadeBy = ZipShort.getValue ( cfh, POS_2 ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final int generalPurposeFlag = ZipShort.getValue ( cfh, POS_3 ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^final int generalPurposeFlag = ZipShort.getValue ( cfh, SHORT ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  >= 0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^final boolean hasEFS = ( generalPurposeFlag  |  ZipArchiveOutputStream.EFS_FLAG )  != 0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != POS_0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final ZipEncoding entryEncoding = zipEncoding ? ZipEncodingHelper.UTF8_ZIP_ENCODING : hasEFS;^336^337^^^^321^351^final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P1_Replace_Type]^short  time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^int fileNameLen = ZipShort .getValue ( name )  ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^int extraLen = ZipShort .getValue ( name )  ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^int commentLen = ZipShort.getValue ( cfh, versionMadeBy ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^archive.readFully ( name ) ;^323^^^^^308^338^archive.readFully ( cfh ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^327^328^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ; off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )   ^  NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P2_Replace_Operator]^ze.setPlatform (  ( versionMadeBy  |  BYTE_SHIFT )  & NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setPlatform (  ( fileNameLen >> BYTE_SHIFT )  & NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setPlatform (  ( versionMadeBy >> SHORT )  & NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & SHORT ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze .setMethod (  )  ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^final int generalPurposeFlag = ZipShort.getValue ( cfh, versionMadeBy ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^final int generalPurposeFlag = ZipShort.getValue ( cfh, POS_2 ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze.setMethod ( ZipShort .getValue ( comment )   ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setMethod ( ZipShort.getValue ( name, off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setMethod ( ZipShort.getValue ( cfh, SHORT )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, WORD )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCrc ( ZipLong.getValue ( signatureBytes, off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCrc ( ZipLong.getValue ( cfh, POS_2 )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze .setExtra ( name )  ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^351^352^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ; off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setCompressedSize ( ZipLong.getValue ( cfh, POS_2 )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setCompressedSize ( ZipLong.getValue ( cfh, versionMadeBy )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^354^355^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ; off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setSize ( ZipLong.getValue ( cfh, SHORT )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze .setTime ( cfhSig )  ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setSize ( ZipLong.getValue ( signatureBytes, off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^357^358^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ; off += WORD;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^int fileNameLen = ZipShort.getValue ( cfh, commentLen ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^366^367^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ; off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, commentLen )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, WORD )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^371^372^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ; off += SHORT;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setInternalAttributes ( ZipShort.getValue ( cfh, POS_2 )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, WORD )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze .setInternalAttributes (  )  ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, commentLen )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setExternalAttributes ( ZipLong.getValue ( name, off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, SHORT )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^archive.readFully ( signatureBytes ) ;^378^^^^^363^393^archive.readFully ( fileName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze .setName (  )  ;^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^ze.setName ( entryEncoding .decode ( fileName )   ) ;^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^offset.headerOffset = ZipLong .getValue ( signatureBytes )  ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^entries .get ( 1 )  ;^385^^^^^370^400^entries.put ( ze, offset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setCentralDirectoryExtra ( name ) ;^391^^^^^376^406^ze.setCentralDirectoryExtra ( cdExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P8_Replace_Mix]^ze.setComment ( entryEncoding.decode ( name )  ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^archive .read (  )  ;^397^^^^^382^412^archive.readFully ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P14_Delete_Statement]^^397^398^^^^382^412^archive.readFully ( signatureBytes ) ; sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^sig = ZipLong.getValue ( name ) ;^398^^^^^383^413^sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P7_Replace_Invocation]^sig = ZipLong .getValue ( name , CFH_LEN )  ;^398^^^^^383^413^sig = ZipLong.getValue ( signatureBytes ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P5_Replace_Variable]^noEFS.put ( ze, new NameAndComment ( fileName, name )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[P3_Replace_Literal]^boolean found = true;^443^^^^^428^458^boolean found = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^boolean success = false;boolean found = false;^443^^^^^428^458^boolean found = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  off = archive.length (  )  - MIN_EOCD_SIZE;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^long off = archive.length (  )   <=  MIN_EOCD_SIZE;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^long off = archive.length() + 0  - MIN_EOCD_SIZE;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^long off = archive.length (  )  - extraLen;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^long off = MIN_EOCD_SIZE.length (  )  - archive;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^long off = archive.read (  )  - MIN_EOCD_SIZE;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^long off = archive.read (  )  - versionMadeBy;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;long off = archive.length (  )  - MIN_EOCD_SIZE;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^long off = archive.length() - 6  - MIN_EOCD_SIZE;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^444^445^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE; long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^long stopSearching = Math.max ( 0L, archive.length (  )   &&  MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^long stopSearching = Math.max ( 0L, archive.length() - 9  - MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^long stopSearching = Math.max ( 0L, archive.length (  )  - versionMadeBy ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^long stopSearching = Math.max ( 0L.length (  )  - MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^long stopSearching = Math.max ( 0L, MAX_EOCD_SIZE.length (  )  - archive ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^long stopSearching = Math.max ( 0L, archive.read (  )  - MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^long off = archive.length (  )  - MIN_EOCD_SIZE;long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^long stopSearching = Math.max ( 0L, archive.length (  )   <  MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^long stopSearching = Math.max ( 0L, archive.length() - 1  - MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^long stopSearching = Math.max ( 0L, archive.length (  )  - SHORT ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^long stopSearching = Math.max ( 0L, archive.read (  )  - SHORT ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^long stopSearching = Math.max ( 0L, archive.length() + 4  - MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^long stopSearching = Math.max ( 0L, archive .seek ( loc )   - MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^while  ( off >= stopSearching || curr != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^while  ( off == stopSearching && curr != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^while  ( off >= stopSearching && curr == -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^while  ( off >= stopSearching && curr != -BYTE_SHIFT )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^while  ( remaining >= stopSearching && curr != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^while  ( off >= remaining && curr != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^while  ( off >= stopSearching && SHORT != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^while  ( off >= off && curr != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr > sig[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr <= sig[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr != sig[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( WORD == sig[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == fileName[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( sig == curr[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_1] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_2] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_3] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_1] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_2] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_3] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr >= sig[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr > sig[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr <= sig[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( extraLen == sig[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == signatureBytes[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_2] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_3] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( WORD == sig[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_2] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_3] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_0] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr != sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr >= sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( commentLen == sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == signatureBytes[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_3] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_1] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_3] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_0] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^curr = archive.read(); if (curr == (sig[org.apache.commons.compress.archivers.zip.ZipFile.POS_3])) {    found = true;    break;};^455^456^457^458^459^440^470^if  ( curr == sig[POS_2] )  { curr = archive.read (  ) ; if  ( curr == sig[POS_3] )  { found = true; break; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^455^456^457^458^459^440^470^if  ( curr == sig[POS_2] )  { curr = archive.read (  ) ; if  ( curr == sig[POS_3] )  { found = true; break; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( curr ==  ( POS_1] )  )  {     curr = archive.read (  ) ;     if  ( curr ==  ( POS_2] )  )  {         curr = archive.read (  ) ;         if  ( curr ==  ( POS_3] )  )  {             found = true;             break;         }     } }^455^^^^^440^470^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr <= sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( SHORT == sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == fileName[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( sig == curr[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_1] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_2] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( curr == sig[POS_0] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^found = true; break;^457^458^459^460^^442^472^if  ( curr == sig[POS_3] )  { found = true; break; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^457^458^459^460^^442^472^if  ( curr == sig[POS_3] )  { found = true; break; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^found = false;^458^^^^^443^473^found = true;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^success = true;found = true;^458^^^^^443^473^found = true;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^curr = archive.length (  ) ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr  = null ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ret = archive.read ( b, off, len ) ;curr = archive.read (  ) ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^curr = archive .read (  )  ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int curr = archive.read (  ) ;curr = archive.read (  ) ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;curr = archive.read (  ) ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;curr = archive.read (  ) ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;curr = archive.read (  ) ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr != sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( versionMadeBy == sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( POS_3 == sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^curr = archive.length (  ) ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^curr = archive .read (  )  ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr  =  curr ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ret = archive.read ( b, off, len ) ;curr = archive.read (  ) ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr  =  curr ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int curr = archive.read (  ) ;curr = archive.read (  ) ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;curr = archive.read (  ) ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;curr = archive.read (  ) ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;curr = archive.read (  ) ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( WORD == sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == signatureBytes[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( WORD == sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr ;^456^^^^^441^471^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( fileNameLen == sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^curr = archive.length (  ) ;^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr  =  curr ;^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ret = archive.read ( b, off, len ) ;curr = archive.read (  ) ;^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr  = null ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int curr = archive.read (  ) ;curr = archive.read (  ) ;^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;curr = archive.read (  ) ;^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;curr = archive.read (  ) ;^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;curr = archive.read (  ) ;^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr < sig[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( SHORT == sig[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr > sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == name[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( sig == curr[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == name[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^curr = archive .read (  )  ;^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^curr = archive.length (  ) ;^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr ;^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ret = archive.read ( b, off, len ) ;curr = archive.read (  ) ;^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.read ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ret = archive.read ( b, off, len ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.seek ( --off ) ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^curr = archive .read (  )  ;^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int curr = archive.read (  ) ;curr = archive.read (  ) ;^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;curr = archive.read (  ) ;^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;curr = archive.read (  ) ;^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;curr = archive.read (  ) ;^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( off > 0 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( off < 0 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( off >= -9 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( start >= 0 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( off >= stopSearching && curr != -1 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( off >= stopSearching )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr != -1 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_0] )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_1] )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_2] )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( curr == POS_3] )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( off >= 2 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( len <= 0 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( ret > 0 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( skipped <= 0 )  {^446^^^^^431^461^if  ( off >= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( curr ==  ( POS_0] )  )  {     curr = archive.read (  ) ;     if  ( curr ==  ( POS_1] )  )  {         curr = archive.read (  ) ;         if  ( curr ==  ( POS_2] )  )  {             curr = archive.read (  ) ;             if  ( curr ==  ( POS_3] )  )  {                 found = true;                 break;             }         }     } }^446^^^^^431^461^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^while  ( off > stopSearching && curr != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^while  ( off >= stopSearching && curr < -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^while  ( off >= stopSearching && curr != -NIBLET_MASK )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^while  ( time >= stopSearching && curr != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^while  ( off >= time && curr != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^while  ( off >= stopSearching && WORD != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^while  ( curr >= stopSearching && off != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( versionMadeBy == sig[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == name[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( SHORT == sig[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr != sig[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr < sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr >= sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( curr == fileName[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( SHORT == sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr < sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr  =  curr ;^465^^^^^450^480^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive .read (  )  ;^464^^^^^449^479^archive.seek ( --off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr < sig[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr >= sig[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == signatureBytes[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( off == sig[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( curr == fileName[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( off == sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( curr <= sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( extraLen == sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr  = null ;^452^^^^^437^467^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( extraLen == sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^long  curr = archive.read (  ) ;^449^^^^^434^464^int curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int curr = archive.length (  ) ;^449^^^^^434^464^int curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int curr = archive .read (  )  ;^449^^^^^434^464^int curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.skipBytes ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive .read (  )  ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive.skipBytes ( stopSearching ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^447^448^^^^432^462^archive.seek ( off ) ; byte[] sig = ZipArchiveOutputStream.EOCD_SIG;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ret = archive.read ( b, off, len ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.seek ( off ) ;^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^449^^^^^434^464^int curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^curr = archive.read (  ) ;int curr = archive.read (  ) ;^449^^^^^434^464^int curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;int curr = archive.read (  ) ;^449^^^^^434^464^int curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^464^465^^^^449^479^archive.seek ( --off ) ; curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr == name[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( commentLen == sig[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( commentLen == sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^curr ;^454^^^^^439^469^curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( generalPurposeFlag == sig[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( generalPurposeFlag == sig[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( sig == curr[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P12_Insert_Condition]^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  { byte[] sig = ZipArchiveOutputStream.EOCD_SIG; }^448^^^^^433^463^byte[] sig = ZipArchiveOutputStream.EOCD_SIG;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  curr = archive.read (  ) ;^449^^^^^434^464^int curr = archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^447^^^^^432^462^archive.seek ( off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( !success )  {^468^^^^^453^483^if  ( !found )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( !useUnicodeExtraFields )  {^468^^^^^453^483^if  ( !found )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^throw new java.util.zip.ZipException("archive is not a ZIP archive");^468^469^470^^^453^483^if  ( !found )  { throw new ZipException  (" ")  ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^468^469^470^^^453^483^if  ( !found )  { throw new ZipException  (" ")  ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( !found )  {     throw new ZipException ( "archive is not a ZIP archive" ) ; }^469^^^^^454^484^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^archive.seek ( off  &&  CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.seek ( start + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.seek ( off + commentLen ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.skipBytes ( off + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive .read (  )  ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive.seek ( stopSearching + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^471^472^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ; byte[] cfdOffset = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] b = new byte[SHORT];byte[] cfdOffset = new byte[WORD];^472^^^^^457^487^byte[] cfdOffset = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] fileName = new byte[fileNameLen];byte[] cfdOffset = new byte[WORD];^472^^^^^457^487^byte[] cfdOffset = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^final byte[] start = new byte[WORD];byte[] cfdOffset = new byte[WORD];^472^^^^^457^487^byte[] cfdOffset = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] cfh = new byte[CFH_LEN];byte[] cfdOffset = new byte[WORD];^472^^^^^457^487^byte[] cfdOffset = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] comment = new byte[commentLen];byte[] cfdOffset = new byte[WORD];^472^^^^^457^487^byte[] cfdOffset = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] cdExtraData = new byte[extraLen];byte[] cfdOffset = new byte[WORD];^472^^^^^457^487^byte[] cfdOffset = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] signatureBytes = new byte[WORD];byte[] cfdOffset = new byte[WORD];^472^^^^^457^487^byte[] cfdOffset = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] localExtraData = new byte[extraFieldLen];byte[] cfdOffset = new byte[WORD];^472^^^^^457^487^byte[] cfdOffset = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.readFully ( signatureBytes ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.seek ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive .read (  )  ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( cfdOffset ) ;^473^^^^^458^488^archive.readFully ( cfdOffset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.seek ( ZipLong.getValue ( signatureBytes )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.skipBytes ( ZipLong.getValue ( cfdOffset )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive .read (  )  ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive.seek ( ZipLong.getValue ( name )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.seek ( ZipLong .getValue ( cdExtraData , SHORT )   ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive.seek ( ZipLong.getValue ( sig )  ) ;^474^^^^^459^489^archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^Enumeration e = close (  ) ;^501^^^^^486^516^Enumeration e = getEntries (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^501^^^^^486^516^Enumeration e = getEntries (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^while  ( lenToSkip >= 0 )  {^513^^^^^498^528^while  ( lenToSkip > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^while  ( lenToSkip > -4 )  {^513^^^^^498^528^while  ( lenToSkip > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^while  ( lenToSkip > -1 )  {^513^^^^^498^528^while  ( lenToSkip > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^while  ( curr > 0 )  {^513^^^^^498^528^while  ( lenToSkip > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^while  ( commentLen > 0 )  {^513^^^^^498^528^while  ( lenToSkip > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( skipped > 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( skipped <= 7 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( extraFieldLen <= 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( "failed to skip file name in" + " local file header" )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( skipped <= 4 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( len <= 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( ret > 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( remaining <= 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( off >= 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^throw new java.lang.RuntimeException(("failed to skip file name in" + " local file header"));^515^516^517^518^^500^530^if  ( skipped <= 0 )  { throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^515^516^517^518^^500^530^if  ( skipped <= 0 )  { throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"  >  " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "p filailed to skip file name in" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + " local file headerl file hea" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( skipped <= 0 )  {     throw new RuntimeException (  ( "failed to skip file name in" + " local file header" )  ) ; }^516^^^^^501^531^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"  &&  " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name inaile" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + "c" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 0;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^lenToSkip = skipped;^519^^^^^504^534^lenToSkip -= skipped;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^lenToSkip -= WORD;^519^^^^^504^534^lenToSkip -= skipped;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^lenToSkip -=  curr;^519^^^^^504^534^lenToSkip -= skipped;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"  <  " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name ined t" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + " fil" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^long  skipped = archive.skipBytes ( lenToSkip ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^int skipped = archive.skipBytes ( extraLen ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^int skipped = lenToSkip.skipBytes ( archive ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int skipped = archive.seek ( lenToSkip ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int skipped = archive .seek ( start )  ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int skipped = archive.skipBytes ( SHORT ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"  &  " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( " sailed to skip file name in" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + " f" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^int skipped = archive.skipBytes ( commentLen ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int skipped = archive.seek ( WORD ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( skipped < 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( skipped <= CFD_LOCATOR_OFFSET )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( extraLen <= 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( skipped <= 1 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"  <<  " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "i" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + "filelocal file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip " + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + "l" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^throw new ZipException ( "Found unsupported compression method " + ze.getMethod (  )  ) ; ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( nameMap.containsKey ( ze )  )  {^531^^^^^516^546^if  ( entriesWithoutEFS.containsKey ( ze )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( ze.containsKey ( entriesWithoutEFS )  )  {^531^^^^^516^546^if  ( entriesWithoutEFS.containsKey ( ze )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^if  ( entriesWithoutEFS.put ( ze )  )  {^531^^^^^516^546^if  ( entriesWithoutEFS.containsKey ( ze )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( nameMap.put ( ze )  )  {^531^^^^^516^546^if  ( entriesWithoutEFS.containsKey ( ze )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^setNameAndCommentFromExtraFields(ze, ((org.apache.commons.compress.archivers.zip.ZipFile.NameAndComment) (entriesWithoutEFS.get(ze))));^531^532^533^534^535^516^546^if  ( entriesWithoutEFS.containsKey ( ze )  )  { setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^531^532^533^534^535^516^546^if  ( entriesWithoutEFS.containsKey ( ze )  )  { setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  (  ( !hasEFS )  &&  ( useUnicodeExtraFields )  )  {     noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ; }^531^^^^^516^546^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) nameMap.get ( ze )  ) ;^532^533^534^^^517^547^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^setNameAndCommentFromExtraFields (  ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^532^533^534^^^517^547^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^setNameAndCommentFromExtraFields ( entriesWithoutEFS, ( NameAndComment ) ze.get ( ze )  ) ;^532^533^534^^^517^547^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^ZipFile ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^532^533^534^^^517^547^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.put ( ze )  ) ;^532^533^534^^^517^547^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS .keySet (  )   ) ;^532^533^534^^^517^547^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^532^533^534^^^517^547^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  (  ( !hasEFS )  &&  ( useUnicodeExtraFields )  )  {     noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ; }^532^^^^^517^547^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( entriesWithoutEFS.containsKey ( ze )  )  {     setNameAndCommentFromExtraFields ( ze,  (  ( NameAndComment )   ( entriesWithoutEFS.get ( ze )  )  )  ) ; }^532^^^^^517^547^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^entriesWithoutEFS.put ( ze )  ) ;^534^^^^^519^549^entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^entriesWithoutEFS .keySet (  )   ) ;^534^^^^^519^549^entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^534^^^^^519^549^entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P12_Insert_Condition]^if  ( entriesWithoutEFS.containsKey ( ze )  )  { entriesWithoutEFS.get ( ze )  ) ; }^534^^^^^519^549^entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^lenToSkip -= SHORT;^519^^^^^504^534^lenToSkip -= skipped;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^lenToSkip -=  extraLen;^519^^^^^504^534^lenToSkip -= skipped;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^offsetEntry.dataOffset = offset  |  LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = sig + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + WORD;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + remaining + SHORT + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + WORD + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = LFH_OFFSET_FOR_FILENAME_LENGTH + offset + SHORT + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + extraFieldLen + fileNameLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + extraFieldLen + SHORT + SHORT + fileNameLen + LFH_OFFSET_FOR_FILENAME_LENGTH;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + fileNameLen + SHORT + SHORT + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^offsetEntry.dataOffset =  offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"  ^  " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name inip" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + "le hea" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^ZipArchiveEntry ze =  ( ZipArchiveEntry )  e .hasMoreElements (  )  ;^503^^^^^488^518^ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ZipArchiveEntry ze = new ZipArchiveEntry (  ) ;ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^503^^^^^488^518^ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^OffsetEntry offsetEntry =  ( OffsetEntry )  nameMap.get ( ze ) ;^504^^^^^489^519^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^OffsetEntry offsetEntry =  ( OffsetEntry )  ze.get ( entries ) ;^504^^^^^489^519^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.remove ( ze ) ;^504^^^^^489^519^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^OffsetEntry offset = new OffsetEntry (  ) ;OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^504^^^^^489^519^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  offset = offsetEntry.headerOffset;^505^^^^^490^520^long offset = offsetEntry.headerOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^long offset = offsetEntry.headerOffset.headerOffset;^505^^^^^490^520^long offset = offsetEntry.headerOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^long offset = offsetEntry;^505^^^^^490^520^long offset = offsetEntry.headerOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^long start = offsetEntry.dataOffset;long offset = offsetEntry.headerOffset;^505^^^^^490^520^long offset = offsetEntry.headerOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] cfdOffset = new byte[WORD];byte[] b = new byte[SHORT];^507^^^^^492^522^byte[] b = new byte[SHORT];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] fileName = new byte[fileNameLen];byte[] b = new byte[SHORT];^507^^^^^492^522^byte[] b = new byte[SHORT];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^final byte[] start = new byte[WORD];byte[] b = new byte[SHORT];^507^^^^^492^522^byte[] b = new byte[SHORT];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] cfh = new byte[CFH_LEN];byte[] b = new byte[SHORT];^507^^^^^492^522^byte[] b = new byte[SHORT];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] comment = new byte[commentLen];byte[] b = new byte[SHORT];^507^^^^^492^522^byte[] b = new byte[SHORT];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] cdExtraData = new byte[extraLen];byte[] b = new byte[SHORT];^507^^^^^492^522^byte[] b = new byte[SHORT];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] signatureBytes = new byte[WORD];byte[] b = new byte[SHORT];^507^^^^^492^522^byte[] b = new byte[SHORT];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  fileNameLen = ZipShort.getValue ( b ) ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^int fileNameLen = ZipShort.getValue ( sig ) ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int fileNameLen = ZipShort .getValue ( name , skipped )  ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( b ) ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( b ) ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( b ) ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( b ) ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int extraFieldLen = ZipShort.getValue ( b ) ;int fileNameLen = ZipShort.getValue ( b ) ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;int fileNameLen = ZipShort.getValue ( b ) ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  extraFieldLen = ZipShort.getValue ( b ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^int extraFieldLen = ZipShort.getValue ( name ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int extraFieldLen = ZipShort .getValue ( cdExtraData , generalPurposeFlag )  ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int extraFieldLen = ZipShort.getValue ( localExtraData ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( b ) ;int extraFieldLen = ZipShort.getValue ( b ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;int extraFieldLen = ZipShort.getValue ( b ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int extraLen = ZipShort.getValue ( cfh, off ) ;int extraFieldLen = ZipShort.getValue ( b ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int fileNameLen = ZipShort.getValue ( cfh, off ) ;int extraFieldLen = ZipShort.getValue ( b ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;int extraFieldLen = ZipShort.getValue ( b ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int commentLen = ZipShort.getValue ( cfh, off ) ;int extraFieldLen = ZipShort.getValue ( b ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  lenToSkip = fileNameLen;^512^^^^^497^527^int lenToSkip = fileNameLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^int lenToSkip = extraLen;^512^^^^^497^527^int lenToSkip = fileNameLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int lenToSkip = versionMadeBy;^512^^^^^497^527^int lenToSkip = fileNameLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  skipped = archive.skipBytes ( lenToSkip ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] cfdOffset = new byte[WORD];byte[] localExtraData = new byte[extraFieldLen];^521^^^^^506^536^byte[] localExtraData = new byte[extraFieldLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] fileName = new byte[fileNameLen];byte[] localExtraData = new byte[extraFieldLen];^521^^^^^506^536^byte[] localExtraData = new byte[extraFieldLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] cfh = new byte[CFH_LEN];byte[] localExtraData = new byte[extraFieldLen];^521^^^^^506^536^byte[] localExtraData = new byte[extraFieldLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] comment = new byte[commentLen];byte[] localExtraData = new byte[extraFieldLen];^521^^^^^506^536^byte[] localExtraData = new byte[extraFieldLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] cdExtraData = new byte[extraLen];byte[] localExtraData = new byte[extraFieldLen];^521^^^^^506^536^byte[] localExtraData = new byte[extraFieldLen];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"   instanceof   " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name " + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + " lo" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^503^504^^^^488^518^ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ; OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^503^^^^^488^518^ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^while  ( e.hasMoreElements (  )  )  { ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^503^^^^^488^518^ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^OffsetEntry offsetEntry =  ( OffsetEntry )  nameMap.remove ( ze ) ;^504^^^^^489^519^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^504^^^^^489^519^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^archive.seek ( offset   instanceof   LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.seek ( time + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.seek ( offset + time ) ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.seek ( LFH_OFFSET_FOR_FILENAME_LENGTH + offset ) ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.skipBytes ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive.seek ( sig + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.readFully ( signatureBytes ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.seek ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive.readFully ( localExtraData ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^508^509^^^^493^523^archive.readFully ( b ) ; int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( b ) ;^508^^^^^493^523^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^int fileNameLen = ZipShort.getValue ( signatureBytes ) ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^509^510^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ; archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.readFully ( name ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.seek ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive .read (  )  ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive.seek ( signatureBytes ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( b ) ;^510^^^^^495^525^archive.readFully ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int extraFieldLen = ZipShort.getValue ( signatureBytes ) ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^511^512^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ; int lenToSkip = fileNameLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int skipped = archive .seek ( cfhSig )  ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int skipped = archive.skipBytes ( WORD ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.readFully ( signatureBytes ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.seek ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive .read (  )  ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^522^523^^^^507^537^archive.readFully ( localExtraData ) ; ze.setExtra ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;archive.readFully ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.readFully ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setExtra ( localExtraData ) ;archive.readFully ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.readFully ( localExtraData ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^ze.setExtra ( signatureBytes ) ;^523^^^^^508^538^ze.setExtra ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^523^^^^^508^538^ze.setExtra ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;ze.setExtra ( localExtraData ) ;^523^^^^^508^538^ze.setExtra ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;ze.setExtra ( localExtraData ) ;^523^^^^^508^538^ze.setExtra ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setCentralDirectoryExtra ( cdExtraData ) ;ze.setExtra ( localExtraData ) ;^523^^^^^508^538^ze.setExtra ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( entriesWithoutEFS .keySet (  )   )  {^531^^^^^516^546^if  ( entriesWithoutEFS.containsKey ( ze )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^while  ( lenToSkip > 3 )  {^513^^^^^498^528^while  ( lenToSkip > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^while  ( lenToSkip > lenToSkip )  {^513^^^^^498^528^while  ( lenToSkip > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^while  ( extraFieldLen > 0 )  {^513^^^^^498^528^while  ( lenToSkip > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( skipped == 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( skipped <= POS_3 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr <= 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( skipped <= 0 / 1 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"  >=  " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "a" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + "ile head" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"  >>  " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name ined to skip fi" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + "local file hea" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^lenToSkip -=  commentLen;^519^^^^^504^534^lenToSkip -= skipped;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "d to skip fil" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + "callocal file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^throw new RuntimeException ( "failed to skip file name in"  ||  " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "ailed to skip file name in" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + " local" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int skipped = archive .seek ( loc )  ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int skipped = archive.seek ( commentLen ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( skipped <= commentLen )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( WORD <= 0 )  {^515^^^^^500^530^if  ( skipped <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "e n" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + " local file headerl" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in na" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + " loc" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^offsetEntry.dataOffset = offset  <=  LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = time + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + SHORT + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + fileNameLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + extraFieldLen + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^offsetEntry.dataOffset = offset + SHORT + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + "l fillocal file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^long offset = sig;^505^^^^^490^520^long offset = offsetEntry.headerOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^long offset = stopSearching;^505^^^^^490^520^long offset = offsetEntry.headerOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int extraFieldLen = ZipShort .getValue ( name , extraLen )  ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int lenToSkip = WORD;^512^^^^^497^527^int lenToSkip = fileNameLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^int skipped = archive.skipBytes ( curr ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "aile" + " local file header" ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^throw new RuntimeException ( "failed to skip file name in" + " " ) ;^516^517^^^^501^531^throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^while  ( e .nextElement (  )   )  {^502^^^^^487^517^while  ( e.hasMoreElements (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^502^503^^^^487^517^while  ( e.hasMoreElements (  )  )  { ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries .keySet (  )  ;^504^^^^^489^519^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^archive.seek ( offset  !=  LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive .read (  )  ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^506^507^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ; byte[] b = new byte[SHORT];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int fileNameLen = ZipShort .getValue ( signatureBytes , skipped )  ;^509^^^^^494^524^int fileNameLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^510^511^^^^495^525^archive.readFully ( b ) ; int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int extraFieldLen = ZipShort .getValue ( localExtraData , POS_1 )  ;^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^511^^^^^496^526^int extraFieldLen = ZipShort.getValue ( b ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^int skipped = archive .seek ( sig )  ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.readFully ( sig ) ;^522^^^^^507^537^archive.readFully ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ze.setExtra ( sig ) ;^523^^^^^508^538^ze.setExtra ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^ze.setExtra ( name ) ;^523^^^^^508^538^ze.setExtra ( localExtraData ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^archive.seek ( -3 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.skipBytes ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^curr = archive.read (  ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.seek ( 0 ) ;^544^^^^^543^553^archive.seek ( 0 ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] cfdOffset = new byte[WORD];final byte[] start = new byte[WORD];^545^^^^^543^553^final byte[] start = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] b = new byte[SHORT];final byte[] start = new byte[WORD];^545^^^^^543^553^final byte[] start = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^byte[] signatureBytes = new byte[WORD];final byte[] start = new byte[WORD];^545^^^^^543^553^final byte[] start = new byte[WORD];^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.readFully ( fileName ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.seek ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive.readFully ( signatureBytes ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( localExtraData ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cdExtraData ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( signatureBytes ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.readFully ( start ) ;^546^^^^^543^553^archive.readFully ( start ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( start[i] >= ZipArchiveOutputStream.LFH_SIG[i] )  {^548^^^^^543^553^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( ZipArchiveOutputStream.LFH_SIG[i] != start[i] )  {^548^^^^^543^553^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( name[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^548^^^^^543^553^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^return false;^548^549^550^^^543^553^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  { return false; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^548^549^550^^^543^553^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  { return false; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return true;^549^^^^^543^553^return false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^for  (  short  i = 0; i < start.length; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^for  ( int i = 0; i <= start.length; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^for  ( int i = POS_1; i < start.length; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^for  ( skippednt i = 0; i < start.length; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^for  ( int i = 0; i < name.length; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^for  ( start.lengthnt i = 0; i < i; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^for  ( int i = 0; i < start.length.length; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^for  ( int i = 0; i < localExtraData.length; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( start[i] < ZipArchiveOutputStream.LFH_SIG[i] )  {^548^^^^^543^553^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( sig[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^548^^^^^543^553^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( fileName[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^548^^^^^543^553^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^for  ( int i = commentLen; i < start.length; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return false;^552^^^^^543^553^return true;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.setExtra ( UnicodePathExtraField.UPATH_ID ) ;^562^563^^^^560^581^UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^UnicodePathExtraField name =  ( UnicodePathExtraField ) ze .setExtra ( cdExtraData )  ;^562^563^^^^560^581^UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^562^563^^^^560^581^UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^ze.setExtra ( UnicodePathExtraField.UPATH_ID ) ;^563^^^^^560^581^ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^563^564^^^^560^581^ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ; String originalName = ze.getName (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^563^^^^^560^581^ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setExtra ( localExtraData ) ;ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^563^^^^^560^581^ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^char originalName = ze.getName (  ) ;^564^^^^^560^581^String originalName = ze.getName (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^String originalName = ze.setTime (  ) ;^564^^^^^560^581^String originalName = ze.getName (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^564^^^^^560^581^String originalName = ze.getName (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^char newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newName = getUnicodeStringIfOriginalMatches ( name, sig ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newName = getUnicodeStringIfOriginalMatches (  nc.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newName = getUnicodeStringIfOriginalMatches ( name.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newName = getUnicodeStringIfOriginalMatches ( name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newName = getUnicodeStringIfOriginalMatches ( nc, name.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newName = getUnicodeStringIfOriginalMatches ( nc.name, name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^String newName = setNameAndCommentFromExtraFields ( name, nc.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newName = getUnicodeStringIfOriginalMatches ( name, fileName ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^String newName = getUnicodeStringIfOriginalMatches ( name, start ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( newName != null || !originalName.equals ( newName )  )  {^566^^^^^560^581^if  ( newName != null && !originalName.equals ( newName )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( newName == null && !originalName.equals ( newName )  )  {^566^^^^^560^581^if  ( newName != null && !originalName.equals ( newName )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( newComment != null && !originalName.equals ( newName )  )  {^566^^^^^560^581^if  ( newName != null && !originalName.equals ( newName )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( newName != null ) {^566^^^^^560^581^if  ( newName != null && !originalName.equals ( newName )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  (  !originalName.equals ( newName )  )  {^566^^^^^560^581^if  ( newName != null && !originalName.equals ( newName )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^ze.setName(newName); nameMap.remove(originalName); nameMap.put(newName, ze);^566^567^568^569^570^560^581^if  ( newName != null && !originalName.equals ( newName )  )  { ze.setName ( newName ) ; nameMap.remove ( originalName ) ; nameMap.put ( newName, ze ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^566^567^568^569^570^560^581^if  ( newName != null && !originalName.equals ( newName )  )  { ze.setName ( newName ) ; nameMap.remove ( originalName ) ; nameMap.put ( newName, ze ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^ze .setName (  )  ;^567^^^^^560^581^ze.setName ( newName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^567^^^^^560^581^ze.setName ( newName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setTime ( time ) ;ze.setName ( newName ) ;^567^^^^^560^581^ze.setName ( newName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setComment ( newComment ) ;ze.setName ( newName ) ;^567^^^^^560^581^ze.setName ( newName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^nameMap.remove ( newComment ) ;^568^^^^^560^581^nameMap.remove ( originalName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^nameMap.get ( originalName ) ;^568^^^^^560^581^nameMap.remove ( originalName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^nameMap.remove ( newName ) ;^568^^^^^560^581^nameMap.remove ( originalName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^568^^^^^560^581^nameMap.remove ( originalName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^nameMap.put ( newName, ze ) ;nameMap.remove ( originalName ) ;^568^^^^^560^581^nameMap.remove ( originalName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^nameMap.put ( originalName, ze ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^nameMap.put (  ze ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^nameMap.put ( newName ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^nameMap.put ( ze, newName ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^nameMap.remove ( originalName ) ;nameMap.put ( newName, ze ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^nameMap.put ( ze.getName (  ) , ze ) ;nameMap.put ( newName, ze ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ze.setName ( originalName ) ;^567^^^^^560^581^ze.setName ( newName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^nameMap .keySet (  )  ;^568^^^^^560^581^nameMap.remove ( originalName ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^nameMap.put ( newComment, ze ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( nc.comment != null || nc.comment.length > 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( nc.comment == null && nc.comment.length > 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( nc.comment != null && nc.comment.length >= 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( nc.comment != null && nc.comment.length > extraFieldLen )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( signatureBytes != null && nc.comment.length > 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( nc.comment != null && nc.comment.WORD > 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( nc != null && nc.comment.comment.length > 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( nc.comment != null ) {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  (  nc.comment.length > 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( length > 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( newComment != null )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( nc.comment != false && nc.comment.length > 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( newComment == null )  {^577^^^^^560^581^if  ( newComment != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( newComment != false )  {^577^^^^^560^581^if  ( newComment != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( zipfile != null )  {^577^^^^^560^581^if  ( newComment != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( offsetEntry == null )  {^577^^^^^560^581^if  ( newComment != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( f != null )  {^577^^^^^560^581^if  ( newComment != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^ze.setComment(newComment);^577^578^579^^^560^581^if  ( newComment != null )  { ze.setComment ( newComment ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^577^578^579^^^560^581^if  ( newComment != null )  { ze.setComment ( newComment ) ; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^ze .setComment (  )  ;^578^^^^^560^581^ze.setComment ( newComment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^ze.setComment ( originalName ) ;^578^^^^^560^581^ze.setComment ( newComment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^578^^^^^560^581^ze.setComment ( newComment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setName ( newName ) ;ze.setComment ( newComment ) ;^578^^^^^560^581^ze.setComment ( newComment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setTime ( time ) ;ze.setComment ( newComment ) ;^578^^^^^560^581^ze.setComment ( newComment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.setComment ( entryEncoding.decode ( comment )  ) ;ze.setComment ( newComment ) ;^578^^^^^560^581^ze.setComment ( newComment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.setExtra ( UnicodeCommentExtraField.UCOM_ID ) ;^573^574^^^^560^581^UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^573^574^^^^560^581^UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^char newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newComment = getUnicodeStringIfOriginalMatches ( cmt, start ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newComment = getUnicodeStringIfOriginalMatches (  nc.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newComment = getUnicodeStringIfOriginalMatches ( cmt.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newComment = getUnicodeStringIfOriginalMatches ( cmt ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newComment = getUnicodeStringIfOriginalMatches ( nc, cmt.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newComment = getUnicodeStringIfOriginalMatches ( nc.comment, cmt ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^String newComment = setNameAndCommentFromExtraFields ( cmt, nc.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^String newComment = getUnicodeStringIfOriginalMatches ( cmt, fileName ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^ze.setExtra ( UnicodeCommentExtraField.UCOM_ID ) ;^574^^^^^560^581^ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^574^^^^^560^581^ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^574^^^^^560^581^ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^getUnicodeStringIfOriginalMatches ( cmt, start ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^getUnicodeStringIfOriginalMatches (  nc.comment ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^getUnicodeStringIfOriginalMatches ( cmt.comment ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^getUnicodeStringIfOriginalMatches ( cmt ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^getUnicodeStringIfOriginalMatches ( nc, cmt.comment ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^getUnicodeStringIfOriginalMatches ( nc.comment, cmt ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^setNameAndCommentFromExtraFields ( cmt, nc.comment ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^setNameAndCommentFromExtraFields ( cmt, fileName ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( originalName != null )  {^577^^^^^560^581^if  ( newComment != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ze.setComment ( newName ) ;^578^^^^^560^581^ze.setComment ( newComment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^String newComment = getUnicodeStringIfOriginalMatches ( cmt, localExtraData ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^getUnicodeStringIfOriginalMatches ( cmt, name ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( f == null )  {^592^^^^^590^611^if  ( f != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P6_Replace_Expression]^if  ( origCRC32 == f.getNameCRC32() )  {^592^^^^^590^611^if  ( f != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( f != this )  {^592^^^^^590^611^if  ( f != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( zipfile != null )  {^592^^^^^590^611^if  ( f != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( newComment != null )  {^592^^^^^590^611^if  ( f != null )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( origCRC32 ==  ( f.getNameCRC32 (  )  )  )  {     try {         return decode ( f.getUnicodeName (  )  ) ;     } catch  ( IOException ex )  {         return null;     } }^592^^^^^590^611^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( origCRC32 != f.getNameCRC32 (  )  )  {^597^^^^^590^611^if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( offset == f.getNameCRC32 (  )  )  {^597^^^^^590^611^if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( f == origCRC32.getNameCRC32 (  )  )  {^597^^^^^590^611^if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^if  ( origCRC32 == f .getUnicodeName (  )   )  {^597^^^^^590^611^if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( stopSearching == f.getNameCRC32 (  )  )  {^597^^^^^590^611^if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( origCRC32 ==  ( f.getNameCRC32 (  )  )  )  {     try {         return decode ( f.getUnicodeName (  )  ) ;     } catch  ( IOException ex )  {         return null;     } }^598^^^^^590^611^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^599^600^^^^590^611^return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^.UTF8_ZIP_ENCODING.decode ( f .getNameCRC32 (  )   ) ;^600^^^^^590^611^.UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^600^^^^^590^611^.UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;.UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^600^^^^^590^611^.UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f .getNameCRC32 (  )   ) ;^599^600^^^^590^611^return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return this;^606^^^^^590^611^return null;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  origCRC32 = crc32.getValue (  ) ;^595^^^^^590^611^long origCRC32 = crc32.getValue (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^long origCRC32 = crc32.update (  ) ;^595^^^^^590^611^long origCRC32 = crc32.getValue (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^crc32.update ( sig ) ;^594^^^^^590^611^crc32.update ( orig ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^crc32 .getValue ( name )  ;^594^^^^^590^611^crc32.update ( orig ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^crc32.update ( start ) ;^594^^^^^590^611^crc32.update ( orig ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^594^595^^^^590^611^crc32.update ( orig ) ; long origCRC32 = crc32.getValue (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^long origCRC32 = crc32 .getValue ( orig , POS_1 )  ;^595^^^^^590^611^long origCRC32 = crc32.getValue (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^595^^^^^590^611^long origCRC32 = crc32.getValue (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( remaining == f.getNameCRC32 (  )  )  {^597^^^^^590^611^if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return false;^606^^^^^590^611^return null;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^crc32.update ( localExtraData ) ;^594^^^^^590^611^crc32.update ( orig ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^long origCRC32 = crc32 .getValue ( name , MIN_EOCD_SIZE )  ;^595^^^^^590^611^long origCRC32 = crc32.getValue (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return false;^610^^^^^590^611^return null;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( remaining-- < 0 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( remaining-- <= 1 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( remaining-- <= 0L )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( len <= 0 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( remaining <= 0 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^if (addDummyByte) {    addDummyByte = false;    return 0;}; return -1;^629^630^631^632^633^628^640^if  ( remaining-- <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; return 0; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^629^630^631^632^633^628^640^if  ( remaining-- <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; return 0; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  (  ( remaining )  <= 0 )  {     if  ( addDummyByte )  {         addDummyByte = false;         b[off] = 0;         return 1;     }     return -1; }^629^^^^^628^640^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( addDummyByte )  {     addDummyByte = false;     b[off] = 0;     return 1; }^629^^^^^628^640^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( useUnicodeExtraFields )  {^630^^^^^628^640^if  ( addDummyByte )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^addDummyByte = false; return 0;^630^631^632^633^^628^640^if  ( addDummyByte )  { addDummyByte = false; return 0; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^630^631^632^633^^628^640^if  ( addDummyByte )  { addDummyByte = false; return 0; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( addDummyByte )  {     addDummyByte = false;     b[off] = 0;     return 1; }^630^^^^^628^640^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^addDummyByte = true;^631^^^^^628^640^addDummyByte = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^addDummyByte = true;addDummyByte = false;^631^^^^^628^640^addDummyByte = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return -7;^632^^^^^628^640^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 3;^632^^^^^628^640^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return 7;^632^^^^^628^640^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 0 % 0;^632^^^^^628^640^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return -POS_2;^634^^^^^628^640^return -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return -2;^634^^^^^628^640^return -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return 5;^632^^^^^628^640^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 0 - 1;^632^^^^^628^640^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return SHORT;^632^^^^^628^640^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 0L;^632^^^^^628^640^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return -CFH_LEN;^634^^^^^628^640^return -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return -0;^634^^^^^628^640^return -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^return archive.length (  ) ;^638^^^^^628^640^return archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.read ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive .read (  )  ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^637^638^^^^628^640^archive.seek ( loc++ ) ; return archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return archive .read (  )  ;^638^^^^^628^640^return archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^638^^^^^628^640^return archive.read (  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( remaining < 0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( remaining <= 9 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( remaining <= POS_0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( offset <= 0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( remaining <= 3 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( remaining-- <= 0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( len <= 0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( skipped <= 0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^if (addDummyByte) {    addDummyByte = false;    b[off] = 0;    return 1;}; return -1;^643^644^645^646^647^642^669^if  ( remaining <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^643^644^645^646^647^642^669^if  ( remaining <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  (  (  ( remaining ) -- )  <= 0 )  {     if  ( addDummyByte )  {         addDummyByte = false;         return 0;     }     return -1; }^643^^^^^642^669^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( addDummyByte )  {     addDummyByte = false;     b[off] = 0;     return 1; }^643^^^^^642^669^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( useUnicodeExtraFields )  {^644^^^^^642^669^if  ( addDummyByte )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^addDummyByte = false; b[off] = 0; return 1;^644^645^646^647^648^642^669^if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^644^645^646^647^648^642^669^if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( addDummyByte )  {     addDummyByte = false;     return 0; }^644^^^^^642^669^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  (  ( remaining )  <= 0 )  {     if  ( addDummyByte )  {         addDummyByte = false;         b[off] = 0;         return 1;     }     return -1; }^644^^^^^642^669^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  (  (  ( remaining ) -- )  <= 0 )  {     if  ( addDummyByte )  {         addDummyByte = false;         return 0;     }     return -1; }^644^^^^^642^669^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^addDummyByte = true;^645^^^^^642^669^addDummyByte = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^addDummyByte = true;addDummyByte = false;^645^^^^^642^669^addDummyByte = false;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^b[off] = -5;^646^^^^^642^669^b[off] = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^b[off] = 0 - 1;^646^^^^^642^669^b[off] = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return 7;^647^^^^^642^669^return 1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 1 - 0;^647^^^^^642^669^return 1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^b[off] = -9;^646^^^^^642^669^b[off] = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^b[off] = 0 % 2;^646^^^^^642^669^b[off] = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return 10;^647^^^^^642^669^return 1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 2;^647^^^^^642^669^return 1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return -curr;^649^^^^^642^669^return -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return -4;^649^^^^^642^669^return -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( success )  {^644^^^^^642^669^if  ( addDummyByte )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^b[off] = lenToSkip;^646^^^^^642^669^b[off] = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^b[off] = 4;^646^^^^^642^669^b[off] = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return 6;^647^^^^^642^669^return 1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^b[off] = ret;^646^^^^^642^669^b[off] = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^b[off] = 3;^646^^^^^642^669^b[off] = 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return SHORT;^647^^^^^642^669^return 1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 0;^647^^^^^642^669^return 1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return -0;^649^^^^^642^669^return -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( len == 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( len <= 8 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( len <= -5 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( commentLen <= 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( len <= 4 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( remaining-- <= 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( ret > 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( remaining <= 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( skipped <= 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( off >= 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^return 0;^652^653^654^^^642^669^if  ( len <= 0 )  { return 0; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^652^653^654^^^642^669^if  ( len <= 0 )  { return 0; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P13_Insert_Block]^if  ( offsetEntry == null )  {     return null; }^652^^^^^642^669^[Delete]^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return 6;^653^^^^^642^669^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 2;^653^^^^^642^669^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^return 4;^653^^^^^642^669^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return 1;^653^^^^^642^669^return 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( len < remaining )  {^656^^^^^642^669^if  ( len > remaining )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( len > time )  {^656^^^^^642^669^if  ( len > remaining )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( remaining > len )  {^656^^^^^642^669^if  ( len > remaining )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( len > offset )  {^656^^^^^642^669^if  ( len > remaining )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^len = ((int) (remaining));^656^657^658^^^642^669^if  ( len > remaining )  { len =  ( int )  remaining; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^656^657^658^^^642^669^if  ( len > remaining )  { len =  ( int )  remaining; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^len =  (  long  )  remaining;^657^^^^^642^669^len =  ( int )  remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^len =  (  short  )  remaining;^657^^^^^642^669^len =  ( int )  remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^this.remaining = remaining;len =  ( int )  remaining;^657^^^^^642^669^len =  ( int )  remaining;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^short  ret = -1;^659^^^^^642^669^int ret = -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^int ret = -;^659^^^^^642^669^int ret = -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^int off = 0;int ret = -1;^659^^^^^642^669^int ret = -1;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( start, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( b, i, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( b, off, off ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read (  off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( b,  len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( b, off ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( off, b, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( b, len, off ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = b.read ( archive, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^ret = archive .read (  )  ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^curr = archive.read (  ) ;ret = archive.read ( b, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^archive.seek ( origCRC32 ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive.read ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P7_Replace_Invocation]^archive .read (  )  ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^archive.read ( sig ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^661^662^^^^642^669^archive.seek ( loc ) ; ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfdOffset ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( cfh ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.close (  ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( fileName ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( comment ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( b ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( 0 ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.readFully ( start ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( orig, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( b, commentLen, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( b, off, curr ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^ret = archive.read ( len, off, b ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^ret = archive.read ( name, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P14_Delete_Statement]^^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( --off ) ;ret = archive.read ( b, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^archive.seek ( off ) ;ret = archive.read ( b, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;ret = archive.read ( b, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^if  ( ret >= 0 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^if  ( ret > -1 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^if  ( curr > 0 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^if  ( ret > 3 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( len <= 0 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( skipped <= 0 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P9_Replace_Statement]^if  ( off >= 0 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P15_Unwrap_Block]^loc += ret; remaining -= ret;^664^665^666^667^^642^669^if  ( ret > 0 )  { loc += ret; remaining -= ret; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P16_Remove_Block]^^664^665^666^667^^642^669^if  ( ret > 0 )  { loc += ret; remaining -= ret; }^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^loc += generalPurposeFlag;^665^^^^^642^669^loc += ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^loc +=  null;^665^^^^^642^669^loc += ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^loc = start;loc += ret;^665^^^^^642^669^loc += ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^remaining += ret;^666^^^^^642^669^remaining -= ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^remaining -= versionMadeBy;^666^^^^^642^669^remaining -= ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^remaining -=  commentLen;^666^^^^^642^669^remaining -= ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^this.remaining = remaining;remaining -= ret;^666^^^^^642^669^remaining -= ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^loc +=  commentLen;^665^^^^^642^669^loc += ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P2_Replace_Operator]^remaining = ret;^666^^^^^642^669^remaining -= ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^remaining -=  extraLen;^666^^^^^642^669^remaining -= ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P5_Replace_Variable]^return extraLen;^668^^^^^642^669^return ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^return off;^668^^^^^642^669^return ret;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^addDummyByte = false;^676^^^^^675^677^addDummyByte = true;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P11_Insert_Donor_Statement]^addDummyByte = false;addDummyByte = true;^676^^^^^675^677^addDummyByte = true;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^private  short  headerOffset = -1;^84^^^^^79^89^private long headerOffset = -1;^[CLASS] OffsetEntry  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^private long headerOffset = -HASH_SIZE;^84^^^^^79^89^private long headerOffset = -1;^[CLASS] OffsetEntry  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^private long headerOffset = -1 << 2;^84^^^^^79^89^private long headerOffset = -1;^[CLASS] OffsetEntry  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^private  short  dataOffset = -1;^85^^^^^80^90^private long dataOffset = -1;^[CLASS] OffsetEntry  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P3_Replace_Literal]^private long dataOffset = -HASH_SIZE;^85^^^^^80^90^private long dataOffset = -1;^[CLASS] OffsetEntry  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P8_Replace_Mix]^private long dataOffset ;^85^^^^^80^90^private long dataOffset = -1;^[CLASS] OffsetEntry  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[P1_Replace_Type]^private  short  remaining;^619^^^^^614^624^private long remaining;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$OffsetEntry()   [VARIABLES] long  dataOffset  headerOffset  boolean  
[P8_Replace_Mix]^private  int  remaining;^619^^^^^614^624^private long remaining;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$OffsetEntry()   [VARIABLES] long  dataOffset  headerOffset  boolean  
[P1_Replace_Type]^private  short  loc;^620^^^^^615^625^private long loc;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$OffsetEntry()   [VARIABLES] long  dataOffset  headerOffset  boolean  
[P8_Replace_Mix]^private  int  loc;^620^^^^^615^625^private long loc;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$OffsetEntry()   [VARIABLES] long  dataOffset  headerOffset  boolean  
[P3_Replace_Literal]^private boolean addDummyByte = true;^621^^^^^616^626^private boolean addDummyByte = false;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$OffsetEntry()   [VARIABLES] long  dataOffset  headerOffset  boolean  
[P8_Replace_Mix]^private boolean addDummyByte ;^621^^^^^616^626^private boolean addDummyByte = false;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$OffsetEntry()   [VARIABLES] long  dataOffset  headerOffset  boolean  
[P5_Replace_Variable]^this.remaining = start;^624^^^^^623^626^this.remaining = remaining;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P8_Replace_Mix]^this.remaining =  null;^624^^^^^623^626^this.remaining = remaining;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P11_Insert_Donor_Statement]^len =  ( int )  remaining;this.remaining = remaining;^624^^^^^623^626^this.remaining = remaining;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P11_Insert_Donor_Statement]^remaining -= ret;this.remaining = remaining;^624^^^^^623^626^this.remaining = remaining;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P5_Replace_Variable]^loc = remaining;^625^^^^^623^626^loc = start;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P11_Insert_Donor_Statement]^loc += ret;loc = start;^625^^^^^623^626^loc = start;^[CLASS] BoundedInputStream  [METHOD] <init> [RETURN_TYPE] ZipFile$BoundedInputStream(long,long)   long start long remaining [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P2_Replace_Operator]^if  ( remaining-- < 0 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P3_Replace_Literal]^if  ( remaining-- <= -5 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P3_Replace_Literal]^if  ( remaining-- <= -6 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P8_Replace_Mix]^if  ( remaining-- <= 3 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P9_Replace_Statement]^if  ( len <= 0 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P9_Replace_Statement]^if  ( remaining <= 0 )  {^629^^^^^628^640^if  ( remaining-- <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P15_Unwrap_Block]^if (addDummyByte) {    addDummyByte = false;    return 0;}; return -1;^629^630^631^632^633^628^640^if  ( remaining-- <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; return 0; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P16_Remove_Block]^^629^630^631^632^633^628^640^if  ( remaining-- <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; return 0; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P13_Insert_Block]^if  (  ( remaining )  <= 0 )  {     if  ( addDummyByte )  {         addDummyByte = false;         b[off] = 0;         return 1;     }     return -1; }^629^^^^^628^640^[Delete]^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P13_Insert_Block]^if  ( addDummyByte )  {     addDummyByte = false;     b[off] = 0;     return 1; }^629^^^^^628^640^[Delete]^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P15_Unwrap_Block]^addDummyByte = false; return 0;^630^631^632^633^^628^640^if  ( addDummyByte )  { addDummyByte = false; return 0; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P16_Remove_Block]^^630^631^632^633^^628^640^if  ( addDummyByte )  { addDummyByte = false; return 0; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P13_Insert_Block]^if  ( addDummyByte )  {     addDummyByte = false;     b[off] = 0;     return 1; }^630^^^^^628^640^[Delete]^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P3_Replace_Literal]^addDummyByte = true;^631^^^^^628^640^addDummyByte = false;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P11_Insert_Donor_Statement]^addDummyByte = true;addDummyByte = false;^631^^^^^628^640^addDummyByte = false;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P3_Replace_Literal]^return ;^632^^^^^628^640^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P8_Replace_Mix]^return 0 + 1;^632^^^^^628^640^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P3_Replace_Literal]^return null;^632^^^^^628^640^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P8_Replace_Mix]^return 2;^632^^^^^628^640^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P3_Replace_Literal]^return -9;^634^^^^^628^640^return -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P8_Replace_Mix]^return -1 << 2;^634^^^^^628^640^return -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P3_Replace_Literal]^return 4;^632^^^^^628^640^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P8_Replace_Mix]^return 1;^632^^^^^628^640^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P3_Replace_Literal]^return -10;^634^^^^^628^640^return -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P8_Replace_Mix]^return -1 * 3;^634^^^^^628^640^return -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P5_Replace_Variable]^return 0.read (  ) ;^638^^^^^628^640^return archive.read (  ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P7_Replace_Invocation]^archive.read ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P7_Replace_Invocation]^archive .read (  )  ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P14_Delete_Statement]^^637^638^^^^628^640^archive.seek ( loc++ ) ; return archive.read (  ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P11_Insert_Donor_Statement]^archive.seek ( loc ) ;archive.seek ( loc++ ) ;^637^^^^^628^640^archive.seek ( loc++ ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P7_Replace_Invocation]^return archive .read (  )  ;^638^^^^^628^640^return archive.read (  ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P14_Delete_Statement]^^638^^^^^628^640^return archive.read (  ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P2_Replace_Operator]^if  ( remaining < 0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^if  ( remaining <= -3 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^if  ( remaining <= 4 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^if  ( start <= 0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^if  ( remaining <= 0L )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P9_Replace_Statement]^if  ( remaining-- <= 0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P9_Replace_Statement]^if  ( len <= 0 )  {^643^^^^^642^669^if  ( remaining <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P15_Unwrap_Block]^if (addDummyByte) {    addDummyByte = false;    b[off] = 0;    return 1;}; return -1;^643^644^645^646^647^642^669^if  ( remaining <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P16_Remove_Block]^^643^644^645^646^647^642^669^if  ( remaining <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P13_Insert_Block]^if  (  (  ( remaining ) -- )  <= 0 )  {     if  ( addDummyByte )  {         addDummyByte = false;         return 0;     }     return -1; }^643^^^^^642^669^[Delete]^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P13_Insert_Block]^if  ( addDummyByte )  {     addDummyByte = false;     b[off] = 0;     return 1; }^643^^^^^642^669^[Delete]^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P15_Unwrap_Block]^addDummyByte = false; b[off] = 0; return 1;^644^645^646^647^648^642^669^if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P16_Remove_Block]^^644^645^646^647^648^642^669^if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P13_Insert_Block]^if  ( addDummyByte )  {     addDummyByte = false;     return 0; }^644^^^^^642^669^[Delete]^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P13_Insert_Block]^if  (  ( remaining )  <= 0 )  {     if  ( addDummyByte )  {         addDummyByte = false;         b[off] = 0;         return 1;     }     return -1; }^644^^^^^642^669^[Delete]^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P13_Insert_Block]^if  (  (  ( remaining ) -- )  <= 0 )  {     if  ( addDummyByte )  {         addDummyByte = false;         return 0;     }     return -1; }^644^^^^^642^669^[Delete]^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^addDummyByte = true;^645^^^^^642^669^addDummyByte = false;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P11_Insert_Donor_Statement]^addDummyByte = true;addDummyByte = false;^645^^^^^642^669^addDummyByte = false;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^b[off] = 6;^646^^^^^642^669^b[off] = 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^b[off] = 2;^646^^^^^642^669^b[off] = 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^return len;^647^^^^^642^669^return 1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^return 3;^647^^^^^642^669^return 1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^b[off] = 1;^646^^^^^642^669^b[off] = 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^b[off] = 0L;^646^^^^^642^669^b[off] = 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^return 5;^647^^^^^642^669^return 1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^return 2;^647^^^^^642^669^return 1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^return -6;^649^^^^^642^669^return -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^return -0;^649^^^^^642^669^return -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^b[off] = 9;^646^^^^^642^669^b[off] = 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^return -6;^647^^^^^642^669^return 1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^return 0;^647^^^^^642^669^return 1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^b[off] = -1;^646^^^^^642^669^b[off] = 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^return 1L;^647^^^^^642^669^return 1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^return --8;^649^^^^^642^669^return -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^return -2;^649^^^^^642^669^return -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P2_Replace_Operator]^if  ( len > 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^if  ( len <= ret )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^if  ( len <= -2 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^if  ( ret <= 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^if  ( len <= 3 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P9_Replace_Statement]^if  ( remaining-- <= 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P9_Replace_Statement]^if  ( ret > 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P9_Replace_Statement]^if  ( remaining <= 0 )  {^652^^^^^642^669^if  ( len <= 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P15_Unwrap_Block]^return 0;^652^653^654^^^642^669^if  ( len <= 0 )  { return 0; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P16_Remove_Block]^^652^653^654^^^642^669^if  ( len <= 0 )  { return 0; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^return ret;^653^^^^^642^669^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^return 2;^653^^^^^642^669^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^return 7;^653^^^^^642^669^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^return 4;^653^^^^^642^669^return 0;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P2_Replace_Operator]^if  ( len < remaining )  {^656^^^^^642^669^if  ( len > remaining )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^if  ( ret > remaining )  {^656^^^^^642^669^if  ( len > remaining )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^if  ( len > start )  {^656^^^^^642^669^if  ( len > remaining )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^if  ( remaining > len )  {^656^^^^^642^669^if  ( len > remaining )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P15_Unwrap_Block]^len = ((int) (remaining));^656^657^658^^^642^669^if  ( len > remaining )  { len =  ( int )  remaining; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P16_Remove_Block]^^656^657^658^^^642^669^if  ( len > remaining )  { len =  ( int )  remaining; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P1_Replace_Type]^len =  (  short  )  remaining;^657^^^^^642^669^len =  ( int )  remaining;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P11_Insert_Donor_Statement]^this.remaining = remaining;len =  ( int )  remaining;^657^^^^^642^669^len =  ( int )  remaining;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P1_Replace_Type]^len =  (  long  )  remaining;^657^^^^^642^669^len =  ( int )  remaining;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P1_Replace_Type]^short  ret = -1;^659^^^^^642^669^int ret = -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^int ret = --7;^659^^^^^642^669^int ret = -1;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = archive.read ( b, ret, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = archive.read ( b, off, ret ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = archive.read (  off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = archive.read ( b,  len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = archive.read ( b, off ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = b.read ( archive, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = archive.read ( b, len, off ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = len.read ( b, off, archive ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^ret =  archive.read ( null, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^archive.seek ( start ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P7_Replace_Invocation]^archive.read ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P14_Delete_Statement]^^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P11_Insert_Donor_Statement]^archive.seek ( loc++ ) ;archive.seek ( loc ) ;^661^^^^^642^669^archive.seek ( loc ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = archive.read ( len, off, b ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^ret = archive.read ( off, b, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P7_Replace_Invocation]^ret = archive .read (  )  ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P14_Delete_Statement]^^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P11_Insert_Donor_Statement]^return archive.read (  ) ;ret = archive.read ( b, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P2_Replace_Operator]^if  ( ret >= 0 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^if  ( ret > 7 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^if  ( off > 0 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^if  ( ret > 3 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P9_Replace_Statement]^if  ( len <= 0 )  {^664^^^^^642^669^if  ( ret > 0 )  {^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P15_Unwrap_Block]^loc += ret; remaining -= ret;^664^665^666^667^^642^669^if  ( ret > 0 )  { loc += ret; remaining -= ret; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P16_Remove_Block]^^664^665^666^667^^642^669^if  ( ret > 0 )  { loc += ret; remaining -= ret; }^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^loc += off;^665^^^^^642^669^loc += ret;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P11_Insert_Donor_Statement]^loc = start;loc += ret;^665^^^^^642^669^loc += ret;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P2_Replace_Operator]^remaining += ret;^666^^^^^642^669^remaining -= ret;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P8_Replace_Mix]^remaining -=  off;^666^^^^^642^669^remaining -= ret;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P11_Insert_Donor_Statement]^this.remaining = remaining;remaining -= ret;^666^^^^^642^669^remaining -= ret;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P2_Replace_Operator]^remaining = ret;^666^^^^^642^669^remaining -= ret;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P5_Replace_Variable]^return off;^668^^^^^642^669^return ret;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[P3_Replace_Literal]^addDummyByte = false;^676^^^^^675^677^addDummyByte = true;^[CLASS] BoundedInputStream  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P11_Insert_Donor_Statement]^addDummyByte = false;addDummyByte = true;^676^^^^^675^677^addDummyByte = true;^[CLASS] BoundedInputStream  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P8_Replace_Mix]^private  byte[] name;^681^^^^^676^686^private final byte[] name;^[CLASS] NameAndComment  [METHOD] addDummy [RETURN_TYPE] void   [VARIABLES] long  loc  remaining  start  boolean  addDummyByte  
[P5_Replace_Variable]^this.name = comment;^684^^^^^683^686^this.name = name;^[CLASS] NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$NameAndComment(byte[],byte[])   byte[] name byte[] comment [VARIABLES] byte[]  comment  name  boolean  
[P11_Insert_Donor_Statement]^this.comment = comment;this.name = name;^684^^^^^683^686^this.name = name;^[CLASS] NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$NameAndComment(byte[],byte[])   byte[] name byte[] comment [VARIABLES] byte[]  comment  name  boolean  
[P5_Replace_Variable]^this.comment = name;^685^^^^^683^686^this.comment = comment;^[CLASS] NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$NameAndComment(byte[],byte[])   byte[] name byte[] comment [VARIABLES] byte[]  comment  name  boolean  
[P11_Insert_Donor_Statement]^this.name = name;this.comment = comment;^685^^^^^683^686^this.comment = comment;^[CLASS] NameAndComment  [METHOD] <init> [RETURN_TYPE] ZipFile$NameAndComment(byte[],byte[])   byte[] name byte[] comment [VARIABLES] byte[]  comment  name  boolean  
