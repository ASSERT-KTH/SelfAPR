[P8_Replace_Mix]^private static  int crc32Table[] = {^26^^^^^11^41^private static final int crc32Table[] = {^[CLASS] CRC   [VARIABLES] 
[P1_Replace_Type]^private  short  globalCrc;^132^^^^^127^137^private int globalCrc;^[CLASS] CRC   [VARIABLES] 
[P14_Delete_Statement]^^94^^^^^93^95^initialiseCRC (  ) ;^[CLASS] CRC  [METHOD] <init> [RETURN_TYPE] CRC()   [VARIABLES] int[]  crc32Table  int  globalCrc  boolean  
[P11_Insert_Donor_Statement]^globalCrc = newCrc;globalCrc = 0xffffffff;^98^^^^^97^99^globalCrc = 0xffffffff;^[CLASS] CRC  [METHOD] initialiseCRC [RETURN_TYPE] void   [VARIABLES] int[]  crc32Table  int  globalCrc  boolean  
[P5_Replace_Variable]^globalCrc = globalCrc;^110^^^^^109^111^globalCrc = newCrc;^[CLASS] CRC  [METHOD] setGlobalCRC [RETURN_TYPE] void   int newCrc [VARIABLES] int[]  crc32Table  int  globalCrc  newCrc  boolean  
[P8_Replace_Mix]^globalCrc =  null;^110^^^^^109^111^globalCrc = newCrc;^[CLASS] CRC  [METHOD] setGlobalCRC [RETURN_TYPE] void   int newCrc [VARIABLES] int[]  crc32Table  int  globalCrc  newCrc  boolean  
[P11_Insert_Donor_Statement]^globalCrc = 0xffffffff;globalCrc = newCrc;^110^^^^^109^111^globalCrc = newCrc;^[CLASS] CRC  [METHOD] setGlobalCRC [RETURN_TYPE] void   int newCrc [VARIABLES] int[]  crc32Table  int  globalCrc  newCrc  boolean  
[P1_Replace_Type]^long  temp =  ( globalCrc >> 24 )  ^ inCh;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P2_Replace_Operator]^int temp =  ( globalCrc  <=  24 )  ^ inCh;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P3_Replace_Literal]^int temp =  ( globalCrc >> 15 )  ^ inCh;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P5_Replace_Variable]^int temp =  ( globalCrc >> 24 )  ^ newCrc;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P5_Replace_Variable]^int temp =  ( newCrc >> 24 )  ^ inCh;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P5_Replace_Variable]^int temp =  ( inCh >> 24 )  ^ globalCrc;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P11_Insert_Donor_Statement]^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;int temp =  ( globalCrc >> 24 )  ^ inCh;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P2_Replace_Operator]^if  ( temp <= 0 )  {^115^^^^^113^119^if  ( temp < 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P3_Replace_Literal]^if  ( temp < 2 )  {^115^^^^^113^119^if  ( temp < 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P5_Replace_Variable]^if  ( newCrc < 0 )  {^115^^^^^113^119^if  ( temp < 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P6_Replace_Expression]^if  ( 256 + temp )  {^115^^^^^113^119^if  ( temp < 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P8_Replace_Mix]^if  ( newCrc < 0 >>> 4 )  {^115^^^^^113^119^if  ( temp < 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P15_Unwrap_Block]^temp = 256 + temp;^115^116^117^^^113^119^if  ( temp < 0 )  { temp = 256 + temp; }^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P16_Remove_Block]^^115^116^117^^^113^119^if  ( temp < 0 )  { temp = 256 + temp; }^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P3_Replace_Literal]^temp = 261 + temp;^116^^^^^113^119^temp = 256 + temp;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P5_Replace_Variable]^temp = 256 + newCrc;^116^^^^^113^119^temp = 256 + temp;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P8_Replace_Mix]^temp = 106 + temp;^116^^^^^113^119^temp = 256 + temp;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P3_Replace_Literal]^temp = temp + temp;^116^^^^^113^119^temp = 256 + temp;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P8_Replace_Mix]^temp = 256 << 1 + temp;^116^^^^^113^119^temp = 256 + temp;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P2_Replace_Operator]^globalCrc =  ( globalCrc  <  8 )  ^ CRC.crc32Table[temp];^118^^^^^113^119^globalCrc =  ( globalCrc << 8 )  ^ CRC.crc32Table[temp];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P3_Replace_Literal]^globalCrc =  ( globalCrc << 4 )  ^ CRC.crc32Table[temp];^118^^^^^113^119^globalCrc =  ( globalCrc << 8 )  ^ CRC.crc32Table[temp];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P5_Replace_Variable]^globalCrc =  ( newCrc << 8 )  ^ CRC.crc32Table[temp];^118^^^^^113^119^globalCrc =  ( globalCrc << 8 )  ^ CRC.crc32Table[temp];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P8_Replace_Mix]^globalCrc =  ( globalCrc << 8 - 0 )  ^ CRC.crc32Table[temp];^118^^^^^113^119^globalCrc =  ( globalCrc << 8 )  ^ CRC.crc32Table[temp];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[P1_Replace_Type]^long  globalCrcShadow = this.globalCrc;^122^^^^^121^130^int globalCrcShadow = this.globalCrc;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^int globalCrcShadow = temp;^122^^^^^121^130^int globalCrcShadow = this.globalCrc;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P2_Replace_Operator]^while  ( repeat-- >= 0 )  {^123^^^^^121^130^while  ( repeat-- > 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P3_Replace_Literal]^while  ( repeat-- > -3 )  {^123^^^^^121^130^while  ( repeat-- > 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P3_Replace_Literal]^while  ( repeat-- > -4 )  {^123^^^^^121^130^while  ( repeat-- > 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P2_Replace_Operator]^globalCrcShadow =  ( globalCrcShadow  ||  8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P2_Replace_Operator]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp == 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P2_Replace_Operator]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp  ^  256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P3_Replace_Literal]^globalCrcShadow =  ( globalCrcShadow << temp )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P3_Replace_Literal]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= -5 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P3_Replace_Literal]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp  ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^globalCrcShadow =  ( repeat << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( repeat >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^globalCrcShadow =  ( crc32Table << 8 )  ^ globalCrcShadow[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^globalCrcShadow =  ( temp << 8 )  ^ crc32Table[ ( globalCrcShadow >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P6_Replace_Expression]^globalCrcShadow  =   ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P6_Replace_Expression]^globalCrcShadow  =  temp ;^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P8_Replace_Mix]^globalCrcShadow =  ( globalCrcShadow << 8L )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P1_Replace_Type]^short  temp =  ( globalCrcShadow >> 24 )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P2_Replace_Operator]^int temp =  ( globalCrcShadow  >=  24 )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P3_Replace_Literal]^int temp =  ( globalCrcShadow >> globalCrcShadow )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^int temp =  ( repeat >> 24 )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^int temp =  ( globalCrcShadow >> 24 )  ^ repeat;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^int temp =  ( inCh >> 24 )  ^ globalCrcShadow;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P11_Insert_Donor_Statement]^int temp =  ( globalCrc >> 24 )  ^ inCh;int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P2_Replace_Operator]^globalCrcShadow =  ( globalCrcShadow  >=  8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P2_Replace_Operator]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp > 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P2_Replace_Operator]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp  &&  256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P3_Replace_Literal]^globalCrcShadow =  ( globalCrcShadow << inCh )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P3_Replace_Literal]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= repeat ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ temp[ ( crc32Table >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P8_Replace_Mix]^globalCrcShadow =  ( globalCrcShadow << 0 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P1_Replace_Type]^long  temp =  ( globalCrcShadow >> 24 )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P2_Replace_Operator]^int temp =  ( globalCrcShadow  !=  24 )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[P5_Replace_Variable]^this.globalCrc = temp;^129^^^^^121^130^this.globalCrc = globalCrcShadow;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
