[P2_Replace_Operator]^if  ( opt != null ) {^44^45^^^^29^59^if  ( opt == null ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( opt.length() == 1 ) {^44^45^^^^29^59^if  ( opt == null ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( "illegal option value '" + ch + "'" ) {^44^45^^^^29^59^if  ( opt == null ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( "illegal option value '" + ch ) {^44^45^^^^29^59^if  ( opt == null ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( i < chars.length ) {^44^45^^^^29^59^if  ( opt == null ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( "opt contains illegal character value '" +  ( chars[i] )  + "'" ) {^44^45^^^^29^59^if  ( opt == null ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( "opt contains illegal character value '" + chars[i] ) {^44^45^^^^29^59^if  ( opt == null ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P8_Replace_Mix]^if  ( opt == true ) {^44^45^^^^29^59^if  ( opt == null ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P15_Unwrap_Block]^return ;^44^45^46^47^^29^59^if  ( opt == null ) { return; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P16_Remove_Block]^^44^45^46^47^^29^59^if  ( opt == null ) { return; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^else if  ( opt.length (  )  < 1 ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^else if  ( opt.length (  )  == 0 ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^else if  ( opt.length() - 0  == 1 ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^else if  ( "illegal option value '" + ch + "'" ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^else if  ( "illegal option value '" + ch ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^else if  ( i < chars.length ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^else if  ( "opt contains illegal character value '" +  ( chars[i] )  + "'" ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^else if  ( "opt contains illegal character value '" + chars[i] ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P7_Replace_Invocation]^else if  ( opt.charAt (  )  == 1 ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P8_Replace_Mix]^else {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( "opt contains illegal character value '" + chars[i] ) {^68^69^^^^50^75^if  ( !isValidChar ( chars[i] )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P8_Replace_Mix]^if  ( isValidChar ( chars[i] )  ) {^68^69^^^^50^75^if  ( !isValidChar ( chars[i] )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P9_Replace_Statement]^if  ( !isValidOpt ( ch )  ) {^68^69^^^^50^75^if  ( !isValidChar ( chars[i] )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("opt contains illegal character value '" + (chars[i])) + "'"));^68^69^70^71^72^50^75^if  ( !isValidChar ( chars[i] )  ) { throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P16_Remove_Block]^^68^69^70^71^72^50^75^if  ( !isValidChar ( chars[i] )  ) { throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P13_Insert_Block]^if  ( ! ( isValidOpt ( ch )  )  )  {     throw new IllegalArgumentException (  (  ( "illegal option value '" + ch )  + "'" )  ) ; }^68^^^^^50^75^[Delete]^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  >  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'op" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "illegal option value '" + ch )  + "'" )  )  ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "opt contains charsllegal character value '" + i[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  <<  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 't conta" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P1_Replace_Type]^for  (  short  i = 0; i < chars.length; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  ( int i = 0; i > chars.length; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  |  ( int i = 0; i < chars.length; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  !=  ( int i = 0; i < chars.length; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^for  ( int i = ; i < chars.length; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^for  ( chars.lengthnt i = 0; i < i; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^for  ( charsnt i = 0; i < i.length; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  !=  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'va" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  >=  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "haracter v" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  ==  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'gal c" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  &  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "haracter value" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  <=  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'opt contains illegal character v" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P7_Replace_Invocation]^char[] chars = opt.charAt (  ) ;^64^^^^^50^75^char[] chars = opt.toCharArray (  ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P7_Replace_Invocation]^char[] chars = opt .charAt ( i )  ;^64^^^^^50^75^char[] chars = opt.toCharArray (  ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P11_Insert_Donor_Statement]^char ch = opt.charAt ( 0 ) ;char[] chars = opt.toCharArray (  ) ;^64^^^^^50^75^char[] chars = opt.toCharArray (  ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "s illegal charact" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P14_Delete_Statement]^^64^^^^^50^75^char[] chars = opt.toCharArray (  ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( "illegal option value '" + ch ) {^54^55^^^^50^75^if  ( !isValidOpt ( ch )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P7_Replace_Invocation]^if  ( !isValidChar ( ch )  ) {^54^55^^^^50^75^if  ( !isValidOpt ( ch )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("illegal option value '" + ch) + "'"));^54^55^56^57^58^50^75^if  ( !isValidOpt ( ch )  ) { throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P16_Remove_Block]^^54^55^56^57^58^50^75^if  ( !isValidOpt ( ch )  ) { throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ^  ch  ^  "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  <<  ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "l option valullegal option value '" + ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illegal option value '" + ch + "" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "opt contains illegal character value '" +  ( chars[i] )  )  + "'" )  )  ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  <  ch  <  "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  <=  ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "llegal optillegal option value '" + ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ==  ch  ==  "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  >>  ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "gal opti" + ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P1_Replace_Type]^int ch = opt.charAt ( 0 ) ;^52^^^^^50^75^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^char ch = opt.charAt ( 2 ) ;^52^^^^^50^75^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P7_Replace_Invocation]^char ch = opt .toCharArray (  )  ;^52^^^^^50^75^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P11_Insert_Donor_Statement]^char[] chars = opt.toCharArray (  ) ;char ch = opt.charAt ( 0 ) ;^52^^^^^50^75^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  &  ch  &  "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  >  ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "on llegal option value '" + ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^char ch = opt.charAt ( -9 ) ;^52^^^^^50^75^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P14_Delete_Statement]^^52^^^^^50^75^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( "illegal option value '" + ch ) {^54^55^^^^39^69^if  ( !isValidOpt ( ch )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P7_Replace_Invocation]^if  ( !isValidChar ( ch )  ) {^54^55^^^^39^69^if  ( !isValidOpt ( ch )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("illegal option value '" + ch) + "'"));^54^55^56^57^58^39^69^if  ( !isValidOpt ( ch )  ) { throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P16_Remove_Block]^^54^55^56^57^58^39^69^if  ( !isValidOpt ( ch )  ) { throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ==  ch  ==  "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  &&  ch + "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illegal option value 'l" + ch + "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illegal option value '" + ch + "" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "opt contains illegal character value '" +  ( chars[i] )  )  + "'" )  )  ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ^  ch  ^  "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  |  ch + "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illegal option value 'ill" + ch + "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( "opt contains illegal character value '" + chars[i] ) {^68^69^^^^53^83^if  ( !isValidChar ( chars[i] )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P9_Replace_Statement]^if  ( !isValidOpt ( ch )  ) {^68^69^^^^53^83^if  ( !isValidChar ( chars[i] )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("opt contains illegal character value '" + (chars[i])) + "'"));^68^69^70^71^72^53^83^if  ( !isValidChar ( chars[i] )  ) { throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P16_Remove_Block]^^68^69^70^71^72^53^83^if  ( !isValidChar ( chars[i] )  ) { throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P13_Insert_Block]^if  ( ! ( isValidOpt ( ch )  )  )  {     throw new IllegalArgumentException (  (  ( "illegal option value '" + ch )  + "'" )  ) ; }^68^^^^^53^83^[Delete]^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  >  chars[i] + "'" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "aractept contains illegal character value '" + chars[i] + "'" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "illegal option value '" + ch )  + "'" )  )  ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "opt contains charsllegal character value '" + i[i] + "'" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  <=  chars[i] + "'" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'ns illegal cha" + chars[i] + "'" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P1_Replace_Type]^for  (  long  i = 0; i < chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  ( int i = 0; i <= chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  |  ( int i = 0; i < chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  >=  ( int i = 0; i < chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^for  ( int i = -6; i < chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^for  ( charsnt i = 0; i < i.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^for  ( int i = 0; i < chars.length.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^for  ( int i = 0; i < chars; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P6_Replace_Expression]^if  ( "opt contains illegal character value '" + chars[i] ) {^68^69^^^^66^74^if  ( !isValidChar ( chars[i] )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P8_Replace_Mix]^if  ( isValidChar ( chars[i] )  ) {^68^69^^^^66^74^if  ( !isValidChar ( chars[i] )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P9_Replace_Statement]^if  ( !isValidOpt ( ch )  ) {^68^69^^^^66^74^if  ( !isValidChar ( chars[i] )  ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("opt contains illegal character value '" + (chars[i])) + "'"));^68^69^70^71^72^66^74^if  ( !isValidChar ( chars[i] )  ) { throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P16_Remove_Block]^^68^69^70^71^72^66^74^if  ( !isValidChar ( chars[i] )  ) { throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ; }^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P13_Insert_Block]^if  ( ! ( isValidOpt ( ch )  )  )  {     throw new IllegalArgumentException (  (  ( "illegal option value '" + ch )  + "'" )  ) ; }^68^^^^^66^74^[Delete]^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  <<  chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "l charactpt contains illegal character value '" + chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "illegal option value '" + ch )  + "'" )  )  ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "opt contains charsllegal character value '" + i[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  >>  chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ara" + chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"   instanceof   chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'pt contain" + chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  >  chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ains illept contains illegal character value '" + chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ==  ch  ==  "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  >  ch + "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illegllegal option value '" + ch + "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "opt contains illegal character value '" +  ( chars[i] )  )  + "'" )  )  ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  &&  chars[i] + "'" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'alue " + chars[i] + "'" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  (  ( "illegal option value '" + ch )  + "'" )  )  ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "opt contains charsllegal character value '" + i[i] + "'" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P1_Replace_Type]^int ch = opt.charAt ( 0 ) ;^52^^^^^37^67^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^char ch = opt.charAt (  ) ;^52^^^^^37^67^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P7_Replace_Invocation]^char ch = opt .toCharArray (  )  ;^52^^^^^37^67^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P11_Insert_Donor_Statement]^char[] chars = opt.toCharArray (  ) ;char ch = opt.charAt ( 0 ) ;^52^^^^^37^67^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P7_Replace_Invocation]^char[] chars = opt.charAt (  ) ;^64^^^^^49^79^char[] chars = opt.toCharArray (  ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P11_Insert_Donor_Statement]^char ch = opt.charAt ( 0 ) ;char[] chars = opt.toCharArray (  ) ;^64^^^^^49^79^char[] chars = opt.toCharArray (  ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P1_Replace_Type]^for  (  short  i = 0; i < chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^for  ( int i = 7; i < chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  <<  ch  <<  "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  <=  ch + "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "" + ch + "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  <  chars[i] + "'" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'pt contains illegal character val" + chars[i] + "'" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^else if  ( opt.length() + 0  == 1 ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^char ch = opt.charAt ( 3 ) ;^52^^^^^37^67^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P14_Delete_Statement]^^52^^^^^37^67^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P14_Delete_Statement]^^64^^^^^49^79^char[] chars = opt.toCharArray (  ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^else if  ( opt.length (  )  ==  ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^else if  ( opt.length() + 7  == 1 ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ntains illpt contains illegal character value '" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  |  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "s i" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  ( int i = 0; i <= chars.length; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  <<  ( int i = 0; i < chars.length; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P5_Replace_Variable]^for  ( int i = 0; i < chars; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  &&  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " cha" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 's illegal chara" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  ^  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "tains illegpt contains illegal character value '" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^for  ( int i = i; i < chars.length; i++ ) {^66^67^^^^50^75^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  ||  chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'l" + chars[i] + "'" ) ;^70^71^72^^^50^75^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ^  ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illegal option" + ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  >=  ch  >=  "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ==  ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "legal optio" + ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"   instanceof   ch   instanceof   "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ||  ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "alue" + ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^char ch = opt.charAt ( -6 ) ;^52^^^^^50^75^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  !=  ch  !=  "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ollegal option value '" + ch + "'" ) ;^56^57^^^^50^75^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^char ch = opt.charAt ( 8 ) ;^52^^^^^50^75^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"   instanceof   ch   instanceof   "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "al opt" + ch + "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ||  ch  ||  "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  !=  ch + "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illegal option value 'v" + ch + "'" ) ;^56^57^^^^54^58^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  !=  chars[i] + "'" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 't c" + chars[i] + "'" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  |  chars[i] + "'" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'o" + chars[i] + "'" ) ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; ;^70^71^72^^^68^73^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  >>  ( int i = 0; i < chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^for  <<  ( int i = 0; i < chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^for  ( int i = i; i < chars.length; i++ ) {^66^67^^^^51^81^for  ( int i = 0; i < chars.length; i++ ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value ' c" + chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  >=  chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ontainspt contains illegal character value '" + chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  <  chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'o" + chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  ==  chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 't" + chars[i] + "'" ) ;^70^71^72^^^66^74^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  >=  ch  >=  "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ||  ch + "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illlegal option value '" + ch + "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illegal option value '" + ch + "" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  <<  chars[i] + "'" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'rac" + chars[i] + "'" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^char ch = opt.charAt ( -5 ) ;^52^^^^^37^67^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P8_Replace_Mix]^char[] chars = opt .charAt ( i )  ;^64^^^^^49^79^char[] chars = opt.toCharArray (  ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  <=  ch  <=  "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "illegal option value '"  ^  ch + "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "illegal opllegal option value '" + ch + "'" ) ;^56^57^^^^41^71^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "opt contains illegal character value '"  |  chars[i] + "'" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "opt contains illegal character value 'ins illegal cha" + chars[i] + "'" ) ;^70^71^72^^^55^85^throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^else if  ( opt.length() - 7  == 1 ) {^50^51^^^^35^65^else if  ( opt.length (  )  == 1 ) {^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P3_Replace_Literal]^char ch = opt.charAt ( i ) ;^52^^^^^37^67^char ch = opt.charAt ( 0 ) ;^[CLASS] OptionValidator  [METHOD] validateOption [RETURN_TYPE] void   String opt [VARIABLES] boolean  char  ch  String  opt  int  i  char[]  chars  
[P2_Replace_Operator]^return  ( isValidChar ( c )  &&  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^87^^^^^85^88^return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^[CLASS] OptionValidator  [METHOD] isValidOpt [RETURN_TYPE] boolean   char c [VARIABLES] boolean  char  c  
[P2_Replace_Operator]^return  ( isValidChar ( c )  ||  ( c >= ' ' )  ||  ( c == '?' )  || c == '@' ) ;^87^^^^^85^88^return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^[CLASS] OptionValidator  [METHOD] isValidOpt [RETURN_TYPE] boolean   char c [VARIABLES] boolean  char  c  
[P2_Replace_Operator]^return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c >= '?' )  || c == '@' ) ;^87^^^^^85^88^return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^[CLASS] OptionValidator  [METHOD] isValidOpt [RETURN_TYPE] boolean   char c [VARIABLES] boolean  char  c  
[P2_Replace_Operator]^return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c != '@' ) ;^87^^^^^85^88^return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^[CLASS] OptionValidator  [METHOD] isValidOpt [RETURN_TYPE] boolean   char c [VARIABLES] boolean  char  c  
[P7_Replace_Invocation]^return  ( isValidOpt ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^87^^^^^85^88^return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^[CLASS] OptionValidator  [METHOD] isValidOpt [RETURN_TYPE] boolean   char c [VARIABLES] boolean  char  c  
[P14_Delete_Statement]^^87^^^^^85^88^return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^[CLASS] OptionValidator  [METHOD] isValidOpt [RETURN_TYPE] boolean   char c [VARIABLES] boolean  char  c  
[P14_Delete_Statement]^^98^99^^^^96^99^return Character.isJavaIdentifierPart ( c ) ; }^[CLASS] OptionValidator  [METHOD] isValidChar [RETURN_TYPE] boolean   char c [VARIABLES] boolean  char  c  
