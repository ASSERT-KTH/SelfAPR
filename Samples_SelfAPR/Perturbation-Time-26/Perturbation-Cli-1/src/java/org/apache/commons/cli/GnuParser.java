[P1_Replace_Type]^private  LinkedHashSet  tokens = new  LinkedHashSet  (  ) ;^31^^^^^26^36^private ArrayList tokens = new ArrayList (  ) ;^[CLASS] GnuParser   [VARIABLES] 
[P7_Replace_Invocation]^tokens.ArrayList (  ) ;^39^^^^^37^40^tokens.clear (  ) ;^[CLASS] GnuParser  [METHOD] init [RETURN_TYPE] void   [VARIABLES] ArrayList  tokens  boolean  
[P14_Delete_Statement]^^39^^^^^37^40^tokens.clear (  ) ;^[CLASS] GnuParser  [METHOD] init [RETURN_TYPE] void   [VARIABLES] ArrayList  tokens  boolean  
[P11_Insert_Donor_Statement]^tokens.add ( "--" ) ;tokens.clear (  ) ;^39^^^^^37^40^tokens.clear (  ) ;^[CLASS] GnuParser  [METHOD] init [RETURN_TYPE] void   [VARIABLES] ArrayList  tokens  boolean  
[P11_Insert_Donor_Statement]^tokens.add ( "-" ) ;tokens.clear (  ) ;^39^^^^^37^40^tokens.clear (  ) ;^[CLASS] GnuParser  [METHOD] init [RETURN_TYPE] void   [VARIABLES] ArrayList  tokens  boolean  
[P14_Delete_Statement]^^64^^^^^49^79^init (  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^boolean eatTheRest = true;^66^^^^^51^81^boolean eatTheRest = false;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^if  ( "-".equals ( arguments[i] )  ) {^71^72^^^^56^86^if  ( "--".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^if  ( "".equals ( arguments[i] )  ) {^71^72^^^^56^86^if  ( "--".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( specialOption != null ) {^71^72^^^^56^86^if  ( "--".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( specialOption != null && option == null ) {^71^72^^^^56^86^if  ( "--".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( option == null ) {^71^72^^^^56^86^if  ( "--".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( currentOption != null && currentOption.hasArg() ) {^71^72^^^^56^86^if  ( "--".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( currentOption != null ) {^71^72^^^^56^86^if  ( "--".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^eatTheRest = true; tokens.add("--");^71^72^73^74^75^56^86^if  ( "--".equals ( arguments[i] )  ) { eatTheRest = true; tokens.add ( "--" ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^71^72^73^74^75^56^86^if  ( "--".equals ( arguments[i] )  ) { eatTheRest = true; tokens.add ( "--" ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^else if  ( "".equals ( arguments[i] )  ) {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( specialOption != null ) {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( specialOption != null && option == null ) {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( option == null ) {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( currentOption != null && currentOption.hasArg() ) {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( currentOption != null ) {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^tokens.add("-");^76^77^78^79^^61^91^else if  ( "-".equals ( arguments[i] )  ) { tokens.add ( "-" ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^76^77^78^79^^61^91^else if  ( "-".equals ( arguments[i] )  ) { tokens.add ( "-" ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( specialOption != null ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( specialOption != null && option == null ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( option == null ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( currentOption != null && currentOption.hasArg() ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( currentOption != null ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^else if  ( arguments[i] .substring ( i , i )   ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^159^^^^^144^174^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^if  ( option != null ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^if  ( currentOption == null ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( specialOption != null ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( specialOption != null && option == null ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( currentOption != null && currentOption.hasArg() ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( currentOption != null ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( option == true ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^if  (  ( specialOption != null )  ||  ( option == null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^if  (  ( specialOption == null )  &&  ( option == null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^if  (  ( specialOption != null )  &&  ( option != null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^if  (  ( option != null )  &&  ( option == null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^if  (  ( specialOption != null )  &&  ( specialOption == null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^if  (  ( option != null )  &&  ( specialOption == null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  (  ( specialOption != null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  (   ( option == null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( specialOption != null ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( option == null ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( currentOption != null && currentOption.hasArg() ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^if  ( currentOption != null ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != false )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^tokens.add(arguments[i].substring(0, 2)); tokens.add(arguments[i].substring(2));^114^115^116^117^118^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^114^115^116^117^118^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^else if  (  ( currentOption != null )  || currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^else if  (  ( currentOption == null )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else if  (  ( specialOption != null )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else currentOptionf  (  ( i != null )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  (  ( currentOption != null )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  (  currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P6_Replace_Expression]^else if  ( currentOption != null ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^else if  (  ( currentOption != null )  && currentOption .hasArgs (  )   ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != false )  && currentOption .hasArgs (  )   ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^else if  ( currentOption == null ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else if  ( specialOption != null ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  ( currentOption != false ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P9_Replace_Statement]^else if  ( currentOption.hasArgs (  )  ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^tokens.add(arguments[i]);^141^142^143^144^^126^156^else if  ( currentOption != null ) { tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^141^142^143^144^^126^156^else if  ( currentOption != null ) { tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else if  ( eatTheRest ) {^145^146^^^^130^160^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( eatTheRest ) {^145^146^^^^130^160^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^eatTheRest = true; tokens.add("--"); tokens.add(arguments[i]);^145^146^147^148^149^130^160^else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^145^146^147^148^149^130^160^else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^153^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^eatTheRest = false;^147^^^^^145^154^eatTheRest = true;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "-" ) ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.toArray ( "--" ) ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( arguments[i] ) ;tokens.add ( "--" ) ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( "-" ) ;tokens.add ( "--" ) ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.clear (  ) ;tokens.add ( "--" ) ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 4 )  ;^149^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^149^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^eatTheRest = false;^147^^^^^132^162^eatTheRest = true;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "" ) ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.toArray ( "--" ) ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( arguments[i] ) ;tokens.add ( "--" ) ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( "-" ) ;tokens.add ( "--" ) ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.clear (  ) ;tokens.add ( "--" ) ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^149^^^^^134^164^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^153^^^^^138^168^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^143^^^^^141^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else {^145^146^^^^130^160^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^148^149^^^^145^154^tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^143^^^^^128^158^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^143^^^^^128^158^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^153^^^^^138^168^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^if  ( specialOption.hasArg (  )  ) {^121^122^^^^106^136^if  ( currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^tokens.add(arguments[i]); currentOption = null;^121^122^123^124^125^106^136^if  ( currentOption.hasArg (  )  ) { tokens.add ( arguments[i] ) ; currentOption = null; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^121^122^123^124^125^106^136^if  ( currentOption.hasArg (  )  ) { tokens.add ( arguments[i] ) ; currentOption = null; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else if  ( specialOption.hasArgs (  )  ) {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else currentOptionf  ( i.hasArgs (  )  ) {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( specialOption.hasArgs (  )  ) {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^tokens.add(arguments[i]);^126^127^128^129^^111^141^else if  ( currentOption.hasArgs (  )  ) { tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^126^127^128^129^^111^141^else if  ( currentOption.hasArgs (  )  ) { tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else if  ( eatTheRest ) {^130^131^^^^115^145^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( eatTheRest ) {^130^131^^^^115^145^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^eatTheRest = true; tokens.add("--"); tokens.add(arguments[i]);^130^131^132^133^134^115^145^else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^130^131^132^133^134^115^145^else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^138^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^eatTheRest = false;^132^^^^^130^139^eatTheRest = true;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.toArray ( "--" ) ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^133^134^^^^130^139^tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( arguments[i] ) ;tokens.add ( "--" ) ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( "-" ) ;tokens.add ( "--" ) ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.clear (  ) ;tokens.add ( "--" ) ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^134^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^eatTheRest = false;^132^^^^^117^147^eatTheRest = true;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "-" ) ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.toArray ( "--" ) ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^133^134^^^^118^148^tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( arguments[i] ) ;tokens.add ( "--" ) ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( "-" ) ;tokens.add ( "--" ) ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.clear (  ) ;tokens.add ( "--" ) ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^134^^^^^119^149^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^138^^^^^123^153^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^128^^^^^126^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else stopAtNonOptionf  ( i ) {^130^131^^^^115^145^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else {^130^131^^^^115^145^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^else if  ( currentOption .hasArg (  )   ) {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 4 )  ;^128^^^^^113^143^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^128^^^^^113^143^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "" ) ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^134^^^^^119^149^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^currentOption = false;^124^^^^^121^139^currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^currentOption = option;currentOption = null;^124^^^^^121^139^currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^123^124^^^^121^139^tokens.add ( arguments[i] ) ; currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "-" ) ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "---" ) ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^currentOption = this;^124^^^^^109^139^currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^currentOption = option;currentOption = null;^124^^^^^109^139^currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^123^124^^^^108^138^tokens.add ( arguments[i] ) ; currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^138^^^^^123^153^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "" ) ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  ( specialOption .hasArg (  )   ) {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^currentOption = true;^124^^^^^121^139^currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else currentOptionf  ( i != null ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else stopAtNonOptionf  ( i ) {^145^146^^^^130^160^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "-" ) ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "" ) ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^currentOption = true;^124^^^^^109^139^currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^if  ( currentOption .hasArgs (  )   ) {^121^122^^^^106^136^if  ( currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^123^^^^^108^138^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 8, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, i )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^116^117^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( i, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( i )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -2 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens.add ( arguments[i] .substring ( i , i )   ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( currentOption != this )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "---" ) ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^149^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^148^149^^^^133^163^tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( specialOption .hasArgs (  )   ) {^121^122^^^^106^136^if  ( currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "---" ) ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( stopAtNonOption ) {^130^131^^^^115^145^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^123^^^^^121^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 3 )  ;^149^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^currentOption = specialOption;^108^^^^^93^123^currentOption = option;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^currentOption = null;currentOption = option;^108^^^^^93^123^currentOption = option;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( i, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 5 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^Option specialOption = arguments.getOption ( options[i].substring ( 0, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^Option specialOption = options.getOption ( arguments[i] .substring ( i , i )   ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^Option option = options.getOption ( arguments[i] ) ;Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 3, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 5 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -3, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0,  )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 6 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0,  )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^if  ( specialOption == null ) {^91^92^^^^76^106^if  ( specialOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^if  ( option != null ) {^91^92^^^^76^106^if  ( specialOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( specialOption != this ) {^91^92^^^^76^106^if  ( specialOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^tokens.add(arguments[i].substring(0, 2)); tokens.add(arguments[i].substring(2));^91^92^93^94^95^76^106^if  ( specialOption != null ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^91^92^93^94^95^76^106^if  ( specialOption != null ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else if  ( eatTheRest ) {^96^97^^^^81^111^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^eatTheRest = true; tokens.add(arguments[i]);^96^97^98^99^100^81^111^else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^96^97^98^99^100^81^111^else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^103^^^^^96^104^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^eatTheRest = false;^98^^^^^96^104^eatTheRest = true;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^99^^^^^96^104^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^eatTheRest = false;^98^^^^^83^113^eatTheRest = true;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^99^^^^^84^114^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^103^^^^^88^118^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 1, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 9 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^93^94^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, i )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -7 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.add ( arguments[i] .substring ( i , i )   ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( i )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else stopAtNonOptionf  ( i ) {^96^97^^^^81^111^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( stopAtNonOption ) {^96^97^^^^81^111^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 2 )  ;^99^^^^^96^104^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 1 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^Option specialOption = arguments.getOption ( options[i].substring ( 0, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^Option option = options.getOption ( arguments[i] ) ;Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -4, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, i )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 0 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, i )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -2, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.add ( arguments[i] .substring ( i , i )   ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( i )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 2 )  ;^103^^^^^88^118^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -3, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 3 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens.add ( arguments[i] .substring ( i , i )   ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( i, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -6 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else {^96^97^^^^81^111^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (   ( option == true )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  ( currentOption != this ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^138^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 3 )  ;^134^^^^^119^149^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^134^^^^^119^149^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 3 )  ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^138^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^currentOption = this;^124^^^^^121^139^currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^currentOption = false;^124^^^^^109^139^currentOption = null;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 1, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.add ( arguments[i] .substring ( i , i )   ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 5 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( currentOption != true )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^138^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^138^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^138^^^^^123^153^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^128^^^^^113^143^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 1 )  ;^134^^^^^119^149^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( currentOption != this ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 4 )  ;^149^^^^^134^164^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( stopAtNonOption ) {^145^146^^^^130^160^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^Option option = arguments.getOption ( options[i] ) ;^82^^^^^67^97^Option option = options.getOption ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;Option option = options.getOption ( arguments[i] ) ;^82^^^^^67^97^Option option = options.getOption ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 4, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, i )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 2, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -6 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^82^^^^^67^97^Option option = options.getOption ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^options.getOption ( arguments[i] .substring ( i , i )   ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 3, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 9 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( i, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -9, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^93^94^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.add ( arguments[i] .substring ( i , i )   ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 8, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 0 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( i, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, i )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^options.getOption ( arguments[i] .substring ( i , i )   ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring (  )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^128^^^^^113^143^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( currentOption == true ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^if  (  ( currentOption != null )  &&  ( option == null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^if  (  ( specialOption != null )  &&  ( currentOption == null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (   ( option == this )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 3 )  ;^153^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^128^^^^^113^143^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  ( currentOption != true ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 6, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -9, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -4 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "---" ) ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^134^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, i )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -3 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 5 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( , 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -6 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -3 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( option != true ) {^91^92^^^^76^106^if  ( specialOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -2 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 3 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( -3, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 4 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 6, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( i, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0,  )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 9 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 6 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( specialOption != true ) {^91^92^^^^76^106^if  ( specialOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( eatTheRest ) {^96^97^^^^81^111^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^103^^^^^96^104^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -9, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (   ( specialOption == false )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( currentOption != this )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( currentOption != false ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^153^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^149^^^^^134^164^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 0 )  ;^128^^^^^126^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( currentOption != true ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 3 )  ;^123^^^^^108^138^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 7, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -3 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 4 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 3 )  ;^134^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^143^^^^^141^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( i, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( -2, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^else if  ( arguments[i].startsWith ( "" )  ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else argumentsf  ( i[i].startsWith ( "-" )  ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 5 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 5, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( , 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 1, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -7 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -6 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -7 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^159^^^^^144^174^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "" ) ;^78^^^^^63^93^tokens.add ( "-" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.toArray ( "-" ) ;^78^^^^^63^93^tokens.add ( "-" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^78^^^^^63^93^tokens.add ( "-" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( arguments[i] ) ;tokens.add ( "-" ) ;^78^^^^^63^93^tokens.add ( "-" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( "--" ) ;tokens.add ( "-" ) ;^78^^^^^63^93^tokens.add ( "-" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.clear (  ) ;tokens.add ( "-" ) ;^78^^^^^63^93^tokens.add ( "-" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( currentOption == this ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != true )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^143^^^^^141^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 3 )  ;^128^^^^^126^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^128^^^^^113^143^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^143^^^^^128^158^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 3 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 7 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  (  ( currentOption != false )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^138^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 2 )  ;^134^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 5, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -1, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( specialOption != false ) {^91^92^^^^76^106^if  ( specialOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 2, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 8, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -7 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^Option specialOption = options.getOption ( arguments[i] .substring ( i , i )   ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 10 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 6, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 7 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -2, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 8 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring (  )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( option != false )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^134^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 2 )  ;^138^^^^^123^153^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^134^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 1 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -4 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( specialOption != this ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^149^^^^^134^164^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 7 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 4, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -1 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -4 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 3, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 1 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 6 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 9 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^103^^^^^88^118^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( , 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -6, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 3 )  ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 9 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( option == false ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != this )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  (  ( specialOption != false )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 4 )  ;^143^^^^^128^158^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^149^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 9 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -4, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 4 )  ;^128^^^^^126^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -4 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 11 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^134^^^^^119^149^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 0 )  ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 10 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 3 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 11 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -2 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 4, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != true )  &&  ( specialOption == true )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  (  ( specialOption != true )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( specialOption != false ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^153^^^^^138^168^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 3 )  ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -1 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 10 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^else argumentsf  ( "-".equals ( i[i] )  ) {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^78^^^^^63^93^tokens.add ( "-" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^78^^^^^63^93^tokens.add ( "-" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 6 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -5, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 8 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -5, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 2 )  ;^149^^^^^134^164^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^eatTheRest = false;^73^^^^^58^88^eatTheRest = true;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "" ) ;^74^^^^^59^89^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens.toArray ( "--" ) ;^74^^^^^59^89^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^74^^^^^59^89^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^74^^^^^59^89^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( arguments[i] ) ;tokens.add ( "--" ) ;^74^^^^^59^89^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.add ( "-" ) ;tokens.add ( "--" ) ;^74^^^^^59^89^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P11_Insert_Donor_Statement]^tokens.clear (  ) ;tokens.add ( "--" ) ;^74^^^^^59^89^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( "-".equals ( arguments[i] )  ) {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^159^^^^^144^174^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( currentOption == false ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^149^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 0 )  ;^138^^^^^123^153^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 4 )  ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 4 )  ;^134^^^^^119^149^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^128^^^^^126^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 4 )  ;^138^^^^^123^153^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^149^^^^^134^164^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^128^^^^^126^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 1 )  ;^123^^^^^121^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 3 )  ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 9, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -2, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 0 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^123^^^^^108^138^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 6, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 4 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 3 )  ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 6 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 3, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -7 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 7, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( option != this ) {^91^92^^^^76^106^if  ( specialOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -4, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -3 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 0 )  ;^153^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( currentOption.hasArgs (  )  ) {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -2, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -1 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( -6, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 8 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( , 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -9, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0,  )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^99^^^^^84^114^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 6, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 7 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -5 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != false )  &&  ( option == false )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( currentOption != false )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 4, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^153^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 1 )  ;^138^^^^^123^153^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 7, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 11 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -1 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 7, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 7, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 10 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 11 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 5, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 5 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^103^^^^^88^118^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( null )  ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != this )  &&  ( option == this )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( currentOption != true )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 4 )  ;^134^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -7 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  (  ( currentOption != true )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^currentOption =  null;^108^^^^^93^123^currentOption = option;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( , 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -7 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 4 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( option == this ) {^85^86^^^^70^100^if  ( option == null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^149^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -7, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 3 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 3 )  ;^123^^^^^121^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 8 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( option != false ) {^91^92^^^^76^106^if  ( specialOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -6, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 4 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^99^^^^^96^104^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -6 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -3, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 7 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -1, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -3 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 1 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( , 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -5 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 8 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 7 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 2 )  ;^153^^^^^138^168^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^123^^^^^121^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 3 )  ;^138^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -6, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 1 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (   ( option == false )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  (  ( currentOption != this )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^134^^^^^119^149^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 2 )  ;^153^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^148^^^^^145^154^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 0 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 6 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 10 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  (  ( specialOption != null )  && currentOption .hasArgs (  )   ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^128^^^^^113^143^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -1 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( , 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -3 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 4 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^153^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^123^^^^^121^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^if  ( stopAtNonOption ) {^162^163^^^^147^177^if  ( eatTheRest ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P15_Unwrap_Block]^for (i++; i < (arguments.length); i++) {    tokens.add(arguments[i]);};^162^163^164^165^166^147^177^if  ( eatTheRest ) { for  ( i++; i < arguments.length; i++ ) { tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P16_Remove_Block]^^162^163^164^165^166^147^177^if  ( eatTheRest ) { for  ( i++; i < arguments.length; i++ ) { tokens.add ( arguments[i] ) ; }^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^for  ( i++; i == arguments.length; i++ ) {^164^165^^^^162^168^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^for  ( arguments.length++; i < i; i++ ) {^164^165^^^^162^168^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^for  ( arguments++; i < i.length; i++ ) {^164^165^^^^162^168^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^166^^^^^162^168^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < arguments.length; i++ ) {^69^70^^^^54^84^for  ( int i = 0; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= arguments.length; i++ ) {^69^70^^^^54^84^for  ( int i = 0; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < arguments.length; i++ ) {^69^70^^^^54^84^for  ( int i = 0; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^for  ( int i = 8; i < arguments.length; i++ ) {^69^70^^^^54^84^for  ( int i = 0; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^for  ( int i = 2; i < arguments.length; i++ ) {^69^70^^^^54^84^for  ( int i = 0; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^for  ( arguments.lengthnt i = 0; i < i; i++ ) {^69^70^^^^54^84^for  ( int i = 0; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < arguments.length.length; i++ ) {^69^70^^^^54^84^for  ( int i = 0; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( arguments[i] .substring ( i , i )   ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 3 )  ;^149^^^^^134^164^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^123^^^^^121^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 2 )  ;^133^^^^^130^139^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 1 )  ;^128^^^^^126^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( -1, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -5 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 7, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 7 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -5, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -4, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -6 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != false )  &&  ( currentOption == false )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  ( specialOption != false ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 6, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -1 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -2, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -7, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 6 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 4 )  ;^153^^^^^138^168^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 3, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( specialOption .hasArg (  )   ) {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( this )  ;^123^^^^^121^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^134^^^^^130^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( -7, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 11 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0,  )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 3 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -1 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 3, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -1 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( currentOption != false )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 3 )  ;^138^^^^^123^153^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -7 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 6, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -6, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 0 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -1 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -8, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -4 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 1 )  ;^123^^^^^108^138^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( arguments[i].startsWith ( "-" )  ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( currentOption .hasArg (  )   ) {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^153^^^^^138^168^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 2, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 9, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -1, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( -8, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -5, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 9, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring (  )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -7, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -8, 2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 4 )  ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 3 )  ;^128^^^^^113^143^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( -3, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 4 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^133^^^^^118^148^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != this )  &&  ( specialOption == this )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 3 )  ;^148^^^^^133^163^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 10 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -6 )  ) ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( currentOption != true )  && currentOption .hasArgs (  )   ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  ( specialOption != this ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 1, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 1 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^103^^^^^96^104^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 0 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 7 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -5 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -6 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 10 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  ( specialOption != true ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 4 )  ;^153^^^^^145^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -5 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( -8, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -4 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -3, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 5, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -1, 2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^103^^^^^96^104^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 5 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( -5, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 10 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 4 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  (  currentOption .hasArgs (  )   ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 4 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 10 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -5 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  ( specialOption != true ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, -2 )  ) ;^112^^^^^97^127^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 2, 2 )  ) ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -4 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 3 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  (  ( currentOption != this )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( this )  ;^128^^^^^126^139^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 0, 3 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 7 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 3 )  ;^117^^^^^102^132^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 4 )  ;^159^^^^^144^174^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^else if  (  ( currentOption != true )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -2 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 1, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 9, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -8, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 11 )  ) ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( null )  ;^94^^^^^91^104^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 0 )  ;^149^^^^^134^164^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^tokens .toArray ( 1 )  ;^143^^^^^141^154^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, -7 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( -1, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, 8 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -4 )  ) ;^93^^^^^91^104^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -3, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( -5 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^if  (  ( specialOption != true )  &&  ( option == true )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 0 )  ;^116^^^^^101^131^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^for  ( i++; i > arguments.length; i++ ) {^164^165^^^^149^179^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^for  ( i++; i < arguments.length.length; i++ ) {^164^165^^^^149^179^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P5_Replace_Variable]^for  ( arguments.length++; i < i; i++ ) {^164^165^^^^149^179^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^166^^^^^164^167^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 9 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 9, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( "-" ) ;^74^^^^^59^89^tokens.add ( "--" ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 0, -5 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P8_Replace_Mix]^tokens .toArray ( 0 )  ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 8 )  ) ;^94^^^^^79^109^tokens.add ( arguments[i].substring ( 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^166^^^^^151^181^tokens.add ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P2_Replace_Operator]^for  ( i++; i <= arguments.length; i++ ) {^164^165^^^^149^179^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < arguments.length; i++ ) {^69^70^^^^54^84^for  ( int i = 0; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 0 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 7 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^options.getOption ( arguments[i].substring ( 1, 2 )  ) ;^89^^^^^74^104^options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P3_Replace_Literal]^tokens.add ( arguments[i].substring ( 4, 2 )  ) ;^93^^^^^78^108^tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^return  ( String[] )  tokens.ArrayList ( new String[] {  } ) ;^171^^^^^156^186^return  ( String[] )  tokens.toArray ( new String[] {  } ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P7_Replace_Invocation]^return  ( String[] )  tokens .ArrayList (  )  ;^171^^^^^156^186^return  ( String[] )  tokens.toArray ( new String[] {  } ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[P14_Delete_Statement]^^171^^^^^156^186^return  ( String[] )  tokens.toArray ( new String[] {  } ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
