[P1_Replace_Type]^private static final  int  serialVersionUID = 71849363892710L;^31^^^^^26^36^private static final long serialVersionUID = 71849363892710L;^[CLASS] NumberRange   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 71849363892710;^31^^^^^26^36^private static final long serialVersionUID = 71849363892710L;^[CLASS] NumberRange   [VARIABLES] 
[P8_Replace_Mix]^private  Number min;^36^^^^^31^41^private final Number min;^[CLASS] NumberRange   [VARIABLES] 
[P8_Replace_Mix]^private  Number max;^40^^^^^35^45^private final Number max;^[CLASS] NumberRange   [VARIABLES] 
[P1_Replace_Type]^private transient  short  hashCode = 0;^45^^^^^40^50^private transient int hashCode = 0;^[CLASS] NumberRange   [VARIABLES] 
[P3_Replace_Literal]^private transient int hashCode = ;^45^^^^^40^50^private transient int hashCode = 0;^[CLASS] NumberRange   [VARIABLES] 
[P8_Replace_Mix]^private transient int hashCode  = null ;^45^^^^^40^50^private transient int hashCode = 0;^[CLASS] NumberRange   [VARIABLES] 
[P1_Replace_Type]^private transient char tochar = null;^49^^^^^44^54^private transient String toString = null;^[CLASS] NumberRange   [VARIABLES] 
[P8_Replace_Mix]^private transient String toString = this;^49^^^^^44^54^private transient String toString = null;^[CLASS] NumberRange   [VARIABLES] 
[P2_Replace_Operator]^if  ( num != null )  {^61^^^^^60^76^if  ( num == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P5_Replace_Variable]^if  ( min == null )  {^61^^^^^60^76^if  ( num == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P8_Replace_Mix]^if  ( num == false )  {^61^^^^^60^76^if  ( num == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P9_Replace_Statement]^if  ( toString == null )  {^61^^^^^60^76^if  ( num == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P9_Replace_Statement]^if  ( number == null )  {^61^^^^^60^76^if  ( num == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P9_Replace_Statement]^if  ( obj == this )  {^61^^^^^60^76^if  ( num == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The number must not be null");^61^62^63^^^60^76^if  ( num == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P16_Remove_Block]^^61^62^63^^^60^76^if  ( num == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^61^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^61^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^61^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Double )  &&  (  (  ( Double )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^61^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^61^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^61^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^61^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Double )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Double )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^61^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( number.getClass (  )  )  !=  ( min.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The number must be of the same type as the range numbers" ) ; }^61^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number must not be NaN" )   ;^62^^^^^60^76^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^62^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^62^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^62^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P2_Replace_Operator]^if  ( num instanceof Comparable != false )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P2_Replace_Operator]^if  ( num  &&  Comparable == false )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P3_Replace_Literal]^if  ( num instanceof Comparable == true )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P6_Replace_Expression]^if  ( num instanceof Comparable )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P9_Replace_Statement]^if  ( num1 instanceof Comparable == false )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P9_Replace_Statement]^if  ( obj instanceof NumberRange == false )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The number must implement Comparable");^64^65^66^^^60^76^if  ( num instanceof Comparable == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P16_Remove_Block]^^64^65^66^^^60^76^if  ( num instanceof Comparable == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^64^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^64^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Double )  &&  (  (  ( Double )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^64^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^64^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^64^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^64^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Double )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Double )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^64^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^64^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( number.getClass (  )  )  !=  ( min.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The number must be of the same type as the range numbers" ) ; }^64^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number must not be NaN" )   ;^65^^^^^60^76^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^65^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^65^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^65^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P2_Replace_Operator]^if  ( num instanceof Double ||  (  ( Double )  num ) .isNaN (  )  )  {^67^^^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P2_Replace_Operator]^if  ( num  &  Double &&  (  ( Double )  num ) .isNaN (  )  )  {^67^^^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P5_Replace_Variable]^if  ( min instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^67^^^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P6_Replace_Expression]^if  ( num instanceof Double ) {^67^^^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P6_Replace_Expression]^if  (   (  ( Double )  num ) .isNaN (  )  )  {^67^^^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P9_Replace_Statement]^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^67^^^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The number must not be NaN");^67^68^69^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P16_Remove_Block]^^67^68^69^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^67^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^67^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^67^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^67^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^67^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^67^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Double )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Double )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^67^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^67^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  ( num1 instanceof Float )  {     if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {         throw new IllegalArgumentException ( "The number must not be NaN" ) ;     } }^67^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number must implement Comparable" )   ;^68^^^^^60^76^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^68^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^68^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P8_Replace_Mix]^return ;^68^^^^^60^76^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^68^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P2_Replace_Operator]^if  ( num instanceof Float ||  (  ( Float )  num ) .isNaN (  )  )  {^70^^^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P2_Replace_Operator]^if  ( num  ||  Float &&  (  ( Float )  num ) .isNaN (  )  )  {^70^^^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P5_Replace_Variable]^if  ( min instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^70^^^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P6_Replace_Expression]^if  ( num instanceof Float ) {^70^^^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P6_Replace_Expression]^if  (   (  ( Float )  num ) .isNaN (  )  )  {^70^^^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P9_Replace_Statement]^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^70^^^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The number must not be NaN");^70^71^72^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P16_Remove_Block]^^70^71^72^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^70^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^70^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Double )  &&  (  (  ( Double )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^70^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^70^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^70^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^70^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Double )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Double )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^70^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^70^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  ( num1 instanceof Float )  {     if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {         throw new IllegalArgumentException ( "The number must not be NaN" ) ;     } }^70^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number must implement Comparable" )   ;^71^^^^^60^76^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^71^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^71^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^71^^^^^60^76^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P5_Replace_Variable]^this.min = min;^74^^^^^60^76^this.min = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.max = num2;this.min = num;^74^^^^^60^76^this.min = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.max = num1;this.min = num;^74^^^^^60^76^this.min = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.max = num;this.min = num;^74^^^^^60^76^this.min = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.min = num1;this.min = num;^74^^^^^60^76^this.min = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.min = num2;this.min = num;^74^^^^^60^76^this.min = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P5_Replace_Variable]^this.max = min;^75^^^^^60^76^this.max = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.min = num;this.max = num;^75^^^^^60^76^this.max = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.max = num2;this.max = num;^75^^^^^60^76^this.max = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.max = num1;this.max = num;^75^^^^^60^76^this.max = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.min = num1;this.max = num;^75^^^^^60^76^this.max = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P11_Insert_Donor_Statement]^this.min = num2;this.max = num;^75^^^^^60^76^this.max = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[P2_Replace_Operator]^if  ( num1 == null && num2 == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  ( num1 != null || num2 == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  ( num1 == null || num2 != null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num == null || num2 == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num1 == null || num == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num2 == null || num1 == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  ( num1 == null ) {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  (  num2 == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^if  ( num1 == false || num2 == false )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The numbers must not be null");^97^98^99^^^82^112^if  ( num1 == null || num2 == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P16_Remove_Block]^^97^98^99^^^82^112^if  ( num1 == null || num2 == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^97^^^^^82^112^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^97^^^^^82^112^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^97^^^^^82^112^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Double )  &&  (  (  ( Double )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^97^^^^^82^112^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^97^^^^^82^112^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^97^^^^^82^112^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Double )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Double )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^97^^^^^82^112^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^97^^^^^82^112^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( number.getClass (  )  )  !=  ( min.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The number must be of the same type as the range numbers" ) ; }^97^^^^^82^112^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number must not be NaN" )   ;^98^^^^^83^113^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^98^^^^^83^113^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^98^^^^^83^113^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^return ;^98^^^^^83^113^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^98^^^^^83^113^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  ( num1.getClass (  )  > num2.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num.getClass (  )  != num2.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num1.getClass (  )  != num.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num2.getClass (  )  != num1.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P7_Replace_Invocation]^if  ( num1.equals (  )  != num2.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^if  ( num1.equals (  )  != num.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P9_Replace_Statement]^if  ( number.getClass (  )  != min.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The numbers must be of the same type");^100^101^102^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P16_Remove_Block]^^100^101^102^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^100^^^^^85^115^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^100^^^^^85^115^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Double )  &&  (  (  ( Double )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^100^^^^^85^115^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^100^^^^^85^115^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^100^^^^^85^115^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^100^^^^^85^115^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Double )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Double )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^100^^^^^85^115^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^100^^^^^85^115^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( number.getClass (  )  )  !=  ( min.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The number must be of the same type as the range numbers" ) ; }^100^^^^^85^115^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number must not be NaN" )   ;^101^^^^^86^116^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^101^^^^^86^116^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^101^^^^^86^116^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^return ;^101^^^^^86^116^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^101^^^^^86^116^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( number.getClass (  )  )  !=  ( min.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The number must be of the same type as the range numbers" ) ; }^101^^^^^86^116^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num2.getClass (  )  != num2.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num1.getClass (  )  != num1.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  ( num1 instanceof Comparable >= false )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  ( num1  ==  Comparable == false )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P3_Replace_Literal]^if  ( num1 instanceof Comparable == true )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num instanceof Comparable == false )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  ( num1 instanceof Comparable )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P9_Replace_Statement]^if  ( num1 instanceof Double )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P9_Replace_Statement]^if  ( obj instanceof NumberRange == false )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The numbers must implement Comparable");^103^104^105^^^88^118^if  ( num1 instanceof Comparable == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P16_Remove_Block]^^103^104^105^^^88^118^if  ( num1 instanceof Comparable == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^103^^^^^88^118^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^103^^^^^88^118^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^103^^^^^88^118^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Double )  &&  (  (  ( Double )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^103^^^^^88^118^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^103^^^^^88^118^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^103^^^^^88^118^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Double )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Double )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^103^^^^^88^118^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^103^^^^^88^118^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( number.getClass (  )  )  !=  ( min.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The number must be of the same type as the range numbers" ) ; }^103^^^^^88^118^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number must not be NaN" )   ;^104^^^^^89^119^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^104^^^^^89^119^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^104^^^^^89^119^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^104^^^^^89^119^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^return ;^104^^^^^89^119^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  ( num1  &  Double )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  ( num1  >=  Double )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( num instanceof Double )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  ( Double num1)).isNaN( || Double num2)).isNaN( )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  ( num1 instanceof Float )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  ( Float num1)).isNaN( || Float num2)).isNaN( )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^if  ( num2 instanceof Double )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P9_Replace_Statement]^if  ( num1 instanceof Comparable == false )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P15_Unwrap_Block]^if ((((java.lang.Double) (num1)).isNaN()) || (((java.lang.Double) (num2)).isNaN())) {    throw new java.lang.IllegalArgumentException("The number must not be NaN");};^106^107^108^109^^91^121^if  ( num1 instanceof Double )  { if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P16_Remove_Block]^^106^107^108^109^^91^121^if  ( num1 instanceof Double )  { if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^} else if  ( num1  &&  Float )  {^110^^^^^95^125^} else if  ( num1 instanceof Float )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^} else if  ( num instanceof Float )  {^110^^^^^95^125^} else if  ( num1 instanceof Float )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^} else if  ( Float num1)).isNaN( || Float num2)).isNaN( )  {^110^^^^^95^125^} else if  ( num1 instanceof Float )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^} else {^110^^^^^95^125^} else if  ( num1 instanceof Float )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^} else if  ( num2 instanceof Float )  {^110^^^^^95^125^} else if  ( num1 instanceof Float )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P15_Unwrap_Block]^if ((((java.lang.Float) (num1)).isNaN()) || (((java.lang.Float) (num2)).isNaN())) {    throw new java.lang.IllegalArgumentException("The number must not be NaN");};^110^111^112^113^^95^125^} else if  ( num1 instanceof Float )  { if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P16_Remove_Block]^^110^111^112^113^^95^125^} else if  ( num1 instanceof Float )  { if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^110^^^^^95^125^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Double )  &&  (  (  ( Double )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^110^^^^^95^125^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^110^^^^^95^125^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Double )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Double )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^110^^^^^95^125^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  (  (  ( Float )  num1 ) .isNaN (  )  &&  (  ( Float )  num2 ) .isNaN (  )  )  {^111^^^^^96^126^if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  (  (  ( Float )  num1 ) .isNaN (  )  ) {^111^^^^^96^126^if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  (   (  ( Float )  num2 ) .isNaN (  )  )  {^111^^^^^96^126^if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P9_Replace_Statement]^if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  {^111^^^^^96^126^if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The number must not be NaN");^111^112^113^^^96^126^if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P16_Remove_Block]^^111^112^113^^^96^126^if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^111^^^^^96^126^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^111^^^^^96^126^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^111^^^^^96^126^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Double )  &&  (  (  ( Double )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^111^^^^^96^126^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^111^^^^^96^126^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^111^^^^^96^126^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Double )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Double )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^111^^^^^96^126^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^111^^^^^96^126^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num1 instanceof Float )  {     if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {         throw new IllegalArgumentException ( "The number must not be NaN" ) ;     } }^111^^^^^96^126^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number must implement Comparable" )   ;^112^^^^^97^127^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^112^^^^^97^127^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^112^^^^^97^127^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^112^^^^^97^127^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^return 0;^112^^^^^97^127^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  (  (  ( Double )  num1 ) .isNaN (  )  &&  (  ( Double )  num2 ) .isNaN (  )  )  {^107^^^^^92^122^if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  (  (  ( Double )  num1 ) .isNaN (  )  ) {^107^^^^^92^122^if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  (   (  ( Double )  num2 ) .isNaN (  )  )  {^107^^^^^92^122^if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P9_Replace_Statement]^if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  {^107^^^^^92^122^if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The number must not be NaN");^107^108^109^^^92^122^if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P16_Remove_Block]^^107^108^109^^^92^122^if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^107^^^^^92^122^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^107^^^^^92^122^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^107^^^^^92^122^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Double )  &&  (  (  ( Double )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^107^^^^^92^122^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^107^^^^^92^122^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^107^^^^^92^122^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^107^^^^^92^122^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^107^^^^^92^122^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num1 instanceof Float )  {     if  (  (  (  ( Float )   ( num1 )  ) .isNaN (  )  )  ||  (  (  ( Float )   ( num2 )  ) .isNaN (  )  )  )  {         throw new IllegalArgumentException ( "The number must not be NaN" ) ;     } }^107^^^^^92^122^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number must implement Comparable" )   ;^108^^^^^93^123^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^108^^^^^93^123^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^108^^^^^93^123^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^108^^^^^93^123^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^return true;^108^^^^^93^123^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^} else if  ( num1  ^  Float )  {^110^^^^^95^125^} else if  ( num1 instanceof Float )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^return ;^112^^^^^97^127^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P1_Replace_Type]^long  compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^116^^^^^101^131^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^int compare =  (  ( Comparable )  num1 ) .compareTo ( num1 ) ;^116^^^^^101^131^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^116^^^^^101^131^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^116^^^^^101^131^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^int compare =  (  ( Comparable )  num1 ) .compareTo ( num ) ;^116^^^^^101^131^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P14_Delete_Statement]^^116^^^^^101^131^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  ( compare != 0 )  {^117^^^^^102^132^if  ( compare == 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P3_Replace_Literal]^if  ( compare == hashCode )  {^117^^^^^102^132^if  ( compare == 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^if  ( hashCode == 0 )  {^117^^^^^102^132^if  ( compare == 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^if  ( compare > 0 )  {^117^^^^^102^132^if  ( compare == 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^if  ( compare == 0 / 1 )  {^117^^^^^102^132^if  ( compare == 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( compare > 0 )  {     this.min = num2;     this.max = num1; }else {     this.min = num1;     this.max = num2; }^117^^^^^102^132^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^} else if  ( compare >= 0 )  {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P3_Replace_Literal]^} else if  ( compare > -7 )  {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^} else if  ( hashCode > 0 )  {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P6_Replace_Expression]^} else {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^} else if  ( hashCode > 1 )  {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P13_Insert_Block]^if  ( compare == 0 )  {     this.min = num1;     this.max = num1; }else     if  ( compare > 0 )  {         this.min = num2;         this.max = num1;     }else {         this.min = num1;         this.max = num2;     }^120^^^^^105^135^[Delete]^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.min = num;^124^^^^^120^126^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^this.min =  num2;^124^^^^^120^126^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num;this.min = num1;^124^^^^^120^126^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num2;this.min = num1;^124^^^^^120^126^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num1;this.min = num1;^124^^^^^120^126^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num;this.min = num1;^124^^^^^120^126^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num2;this.min = num1;^124^^^^^120^126^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.max = num1;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num;this.max = num2;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num1;this.max = num2;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num;this.max = num2;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num1;this.max = num2;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num2;this.max = num2;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.min = num1;^121^^^^^106^136^this.min = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num;this.min = num2;^121^^^^^106^136^this.min = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num2;this.min = num2;^121^^^^^106^136^this.min = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num1;this.min = num2;^121^^^^^106^136^this.min = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num;this.min = num2;^121^^^^^106^136^this.min = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num1;this.min = num2;^121^^^^^106^136^this.min = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.max = num2;^122^^^^^107^137^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num;this.max = num1;^122^^^^^107^137^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num2;this.max = num1;^122^^^^^107^137^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num;this.max = num1;^122^^^^^107^137^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num1;this.max = num1;^122^^^^^107^137^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num2;this.max = num1;^122^^^^^107^137^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.min = num2;^124^^^^^109^139^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^this.min =  num;^124^^^^^109^139^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num;this.min = num1;^124^^^^^109^139^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num2;this.min = num1;^124^^^^^109^139^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num1;this.min = num1;^124^^^^^109^139^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num;this.min = num1;^124^^^^^109^139^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num2;this.min = num1;^124^^^^^109^139^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.max = num1;^125^^^^^110^140^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num;this.max = num2;^125^^^^^110^140^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num1;this.max = num2;^125^^^^^110^140^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num;this.max = num2;^125^^^^^110^140^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num1;this.max = num2;^125^^^^^110^140^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num2;this.max = num2;^125^^^^^110^140^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.min = num2;^118^^^^^103^133^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num;this.min = num1;^118^^^^^103^133^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num2;this.min = num1;^118^^^^^103^133^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num1;this.min = num1;^118^^^^^103^133^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num;this.min = num1;^118^^^^^103^133^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num2;this.min = num1;^118^^^^^103^133^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.max = num;^119^^^^^104^134^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num;this.max = num1;^119^^^^^104^134^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num2;this.max = num1;^119^^^^^104^134^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.max = num;this.max = num1;^119^^^^^104^134^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num1;this.max = num1;^119^^^^^104^134^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P11_Insert_Donor_Statement]^this.min = num2;this.max = num1;^119^^^^^104^134^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P3_Replace_Literal]^} else if  ( compare > compare )  {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.max = num;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^this.max =  null;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^this.min = num;^118^^^^^103^133^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^this.max =  null;^119^^^^^104^134^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^this.max =  null;^122^^^^^107^137^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P8_Replace_Mix]^this.max =  num;^125^^^^^110^140^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P5_Replace_Variable]^return num2;^147^^^^^146^148^return max;^[CLASS] NumberRange  [METHOD] getMaximumNumber [RETURN_TYPE] Number   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[P2_Replace_Operator]^if  ( number != null )  {^164^^^^^163^173^if  ( number == null )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^if  ( num2 == null )  {^164^^^^^163^173^if  ( number == null )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^if  ( num2 == false )  {^164^^^^^163^173^if  ( number == null )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P9_Replace_Statement]^if  ( toString == null )  {^164^^^^^163^173^if  ( number == null )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P9_Replace_Statement]^if  ( num == null )  {^164^^^^^163^173^if  ( number == null )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P15_Unwrap_Block]^return false;^164^165^166^^^163^173^if  ( number == null )  { return false; }^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P16_Remove_Block]^^164^165^166^^^163^173^if  ( number == null )  { return false; }^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^164^^^^^163^173^[Delete]^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^return true;^165^^^^^163^173^return false;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^if  ( number.getClass (  )  >= min.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^if  ( num2.getClass (  )  != min.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^if  ( number.getClass (  )  != num2.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^if  ( min.getClass (  )  != number.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^if  ( number.equals (  )  != min.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^if  ( number.hashCode (  )  != min.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P9_Replace_Statement]^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The number must be of the same type as the range numbers");^167^168^169^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P16_Remove_Block]^^167^168^169^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P13_Insert_Block]^if  (  ( num instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The number must implement Comparable" ) ; }^167^^^^^163^173^[Delete]^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P13_Insert_Block]^if  (  ( num1.getClass (  )  )  !=  ( num2.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The numbers must be of the same type" ) ; }^167^^^^^163^173^[Delete]^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P13_Insert_Block]^if  (  ( num1 == null )  ||  ( num2 == null )  )  {     throw new IllegalArgumentException ( "The numbers must not be null" ) ; }^167^^^^^163^173^[Delete]^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P13_Insert_Block]^if  (  ( num1 instanceof Comparable )  == false )  {     throw new IllegalArgumentException ( "The numbers must implement Comparable" ) ; }^167^^^^^163^173^[Delete]^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P13_Insert_Block]^if  ( num == null )  {     throw new IllegalArgumentException ( "The number must not be null" ) ; }^167^^^^^163^173^[Delete]^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The numbers must be of the same type" )   ;^168^^^^^163^173^throw new IllegalArgumentException  (" ")  ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P13_Insert_Block]^if  (  ( number.getClass (  )  )  !=  ( min.getClass (  )  )  )  {     throw new IllegalArgumentException ( "The number must be of the same type as the range numbers" ) ; }^168^^^^^163^173^[Delete]^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^if  ( number.getClass (  )  != number.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^if  ( number .equals ( null )   != min^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P1_Replace_Type]^long  compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^170^^^^^163^173^int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^int compareMin =  (  ( Comparable )  min ) .compareTo ( num1 ) ;^170^^^^^163^173^int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^170^^^^^163^173^int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^170^^^^^163^173^int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^170^^^^^163^173^int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P1_Replace_Type]^short  compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^171^^^^^163^173^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^int compareMax =  (  ( Comparable )  max ) .compareTo ( num2 ) ;^171^^^^^163^173^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^int compareMax =  (  ( Comparable )  max ) .compareTo ( num1 ) ;^171^^^^^163^173^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^171^^^^^163^173^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^171^^^^^163^173^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^171^172^^^^163^173^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ; return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^return compareMin <= 0 || compareMax >= 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^return compareMin < 0 && compareMax >= 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^return compareMin <= 0 && compareMax > 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^return compareMin <= -8 && compareMax >= -8;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^return compareMin <= 6 && compareMax >= 6;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return hashCode <= 0 && compareMax >= 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return compareMin <= 0 && hashCode >= 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return compareMax <= 0 && compareMin >= 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^return compareMin ;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^if  ( obj != this )  {^191^^^^^190^199^if  ( obj == this )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P9_Replace_Statement]^if  ( num == null )  {^191^^^^^190^199^if  ( obj == this )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P15_Unwrap_Block]^return true;^191^192^193^^^190^199^if  ( obj == this )  { return true; }^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P16_Remove_Block]^^191^192^193^^^190^199^if  ( obj == this )  { return true; }^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P13_Insert_Block]^if  ( number == null )  {     return false; }^191^^^^^190^199^[Delete]^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^return false;^192^^^^^190^199^return true;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^if  ( obj instanceof NumberRange != false )  {^194^^^^^190^199^if  ( obj instanceof NumberRange == false )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^if  ( obj  >=  NumberRange == false )  {^194^^^^^190^199^if  ( obj instanceof NumberRange == false )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^if  ( obj instanceof NumberRange == true )  {^194^^^^^190^199^if  ( obj instanceof NumberRange == false )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P6_Replace_Expression]^if  ( obj instanceof NumberRange )  {^194^^^^^190^199^if  ( obj instanceof NumberRange == false )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P9_Replace_Statement]^if  ( num1 instanceof Comparable == false )  {^194^^^^^190^199^if  ( obj instanceof NumberRange == false )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P9_Replace_Statement]^if  ( num instanceof Comparable == false )  {^194^^^^^190^199^if  ( obj instanceof NumberRange == false )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P15_Unwrap_Block]^return false;^194^195^196^^^190^199^if  ( obj instanceof NumberRange == false )  { return false; }^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P16_Remove_Block]^^194^195^196^^^190^199^if  ( obj instanceof NumberRange == false )  { return false; }^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^return true;^195^^^^^190^199^return false;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^return min.equals ( range.min )  || max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return number.equals ( range.min )  && max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return min.equals ( number )  && max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return min.equals ( range.min )  && number.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return min.equals ( range.min )  && max.equals ( num2 ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return min.equals ( max.min )  && range.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return range.min.equals ( min )  && max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return min.equals ( max )  && range.min.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return min.equals ( range.max )  && max.equals ( range.min ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^return min .NumberRange ( min )   && max^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return min.equals ( range.min.min )  && max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return min.equals ( range.max.min )  && max.equals ( range ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return min.equals ( range.min )  && range.max.equals ( max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^return min .NumberRange ( max )   && max^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^if  ( hashCode != 0 )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^if  ( hashCode == 9 )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P6_Replace_Expression]^if  ( 37 * hashCode + getClass().hashCode() )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P6_Replace_Expression]^if  ( 37 * hashCode )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P6_Replace_Expression]^if  ( 37 * hashCode + min.hashCode() )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P6_Replace_Expression]^if  ( 37 * hashCode + max.hashCode() )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^if  ( getClass == 0 )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^if  ( hashCode == 1 )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P9_Replace_Statement]^if  ( compare == 0 )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P15_Unwrap_Block]^hashCode = 17; hashCode = (37 * (hashCode)) + (getClass().hashCode()); hashCode = (37 * (hashCode)) + (min.hashCode()); hashCode = (37 * (hashCode)) + (max.hashCode());^207^208^209^210^211^206^214^if  ( hashCode == 0 )  { hashCode = 17; hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ; hashCode = 37 * hashCode + min.hashCode (  ) ; hashCode = 37 * hashCode + max.hashCode (  ) ; }^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P16_Remove_Block]^^207^208^209^210^211^206^214^if  ( hashCode == 0 )  { hashCode = 17; hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ; hashCode = 37 * hashCode + min.hashCode (  ) ; hashCode = 37 * hashCode + max.hashCode (  ) ; }^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^hashCode = compareMin;^208^^^^^206^214^hashCode = 17;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^hashCode = 9;^208^^^^^206^214^hashCode = 17;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 * hashCode + getClass (  ||  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 - hashCode + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^hashCode =  * hashCode + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^hashCode = 37 * compareMin + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^hashCode = 37 * hashCode + getClass (  ) .getClass (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^hashCode = 37 * hashCode + getClass (  )  .hashCode (  )  ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^hashCode = 37 * hashCode + hashCode (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^hashCode = 29 * hashCode + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^hashCode = 37 * hashCode + min.hashCode (  ) ;hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^hashCode = 37 * hashCode + max.hashCode (  ) ;hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 * hashCode + min.hashCode (  !=  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 - hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^hashCode = 31 * hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^hashCode = 37 * compareMin + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^hashCode = 37 * hashCode + number.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^hashCode = 37 * min + hashCode.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^hashCode = 37 * hashCode + min.getClass (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^hashCode = 34 * hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;hashCode = 37 * hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^hashCode = 37 * hashCode + max.hashCode (  ) ;hashCode = 37 * hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 * hashCode + max.hashCode (  ==  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 / hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^hashCode = 35 * hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^hashCode = 37 * hashCode + number.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^hashCode = 37 * max + hashCode.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^hashCode = 37 * hashCode + max.getClass (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^hashCode = 37 * hashCode + max .hashCode (  )  ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^hashCode = 37 >> 2 * hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^hashCode = 37 * hashCode + min.hashCode (  ) ;hashCode = 37 * hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;hashCode = 37 * hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^209^210^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ; hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^hashCode = 37 * hashCode + num2.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^hashCode = 37 * hashCode + min .hashCode (  )  ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^hashCode = 37 * hashCode + num2.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^hashCode = 26;^208^^^^^206^214^hashCode = 17;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^hashCode = 10;^208^^^^^206^214^hashCode = 17;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 * hashCode + getClass (  |  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^hashCode = 31 * hashCode + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^hashCode = 11 * hashCode + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 * hashCode + min.hashCode (   instanceof   ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 / hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^hashCode = compareMin * hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^hashCode = 33 * hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^hashCode = 37 - hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^hashCode = compareMin * hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^hashCode = 37 * compareMin + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^hashCode = 6 * hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^return compareMin;^213^^^^^206^214^return hashCode;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P2_Replace_Operator]^if  ( toString != null )  {^224^^^^^223^234^if  ( toString == null )  {^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^if  ( StringBuffer == null )  {^224^^^^^223^234^if  ( toString == null )  {^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^if  ( toString == this )  {^224^^^^^223^234^if  ( toString == null )  {^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P9_Replace_Statement]^if  ( num == null )  {^224^^^^^223^234^if  ( toString == null )  {^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P9_Replace_Statement]^if  ( number == null )  {^224^^^^^223^234^if  ( toString == null )  {^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P1_Replace_Type]^tochar = buf.tochar (  ) ;^231^^^^^223^234^toString = buf.toString (  ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^toString = buf.StringBuffer (  ) ;^231^^^^^223^234^toString = buf.toString (  ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^toString =  null.toString (  ) ;^231^^^^^223^234^toString = buf.toString (  ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( compareMax ) ;^225^^^^^223^234^StringBuffer buf = new StringBuffer ( 32 ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( 27 ) ;^225^^^^^223^234^StringBuffer buf = new StringBuffer ( 32 ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^226^^^^^223^234^buf.append ( "Range[" ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( ',' ) ;buf.append ( "Range[" ) ;^226^^^^^223^234^buf.append ( "Range[" ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( ']' ) ;buf.append ( "Range[" ) ;^226^^^^^223^234^buf.append ( "Range[" ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( min ) ;buf.append ( "Range[" ) ;^226^^^^^223^234^buf.append ( "Range[" ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( max ) ;buf.append ( "Range[" ) ;^226^^^^^223^234^buf.append ( "Range[" ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^buf.append ( number ) ;^227^^^^^223^234^buf.append ( min ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^buf .toString (  )  ;^227^^^^^223^234^buf.append ( min ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^227^228^^^^223^234^buf.append ( min ) ; buf.append ( ',' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( ',' ) ;buf.append ( min ) ;^227^^^^^223^234^buf.append ( min ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( ']' ) ;buf.append ( min ) ;^227^^^^^223^234^buf.append ( min ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( max ) ;buf.append ( min ) ;^227^^^^^223^234^buf.append ( min ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( "Range[" ) ;buf.append ( min ) ;^227^^^^^223^234^buf.append ( min ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^228^^^^^223^234^buf.append ( ',' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( ']' ) ;buf.append ( ',' ) ;^228^^^^^223^234^buf.append ( ',' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( min ) ;buf.append ( ',' ) ;^228^^^^^223^234^buf.append ( ',' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( max ) ;buf.append ( ',' ) ;^228^^^^^223^234^buf.append ( ',' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( "Range[" ) ;buf.append ( ',' ) ;^228^^^^^223^234^buf.append ( ',' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^buf.append ( number ) ;^229^^^^^223^234^buf.append ( max ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^buf .toString (  )  ;^229^^^^^223^234^buf.append ( max ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^229^^^^^223^234^buf.append ( max ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( ',' ) ;buf.append ( max ) ;^229^^^^^223^234^buf.append ( max ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( ']' ) ;buf.append ( max ) ;^229^^^^^223^234^buf.append ( max ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( min ) ;buf.append ( max ) ;^229^^^^^223^234^buf.append ( max ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( "Range[" ) ;buf.append ( max ) ;^229^^^^^223^234^buf.append ( max ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^buf .append ( toString )  ;^230^^^^^223^234^buf.append ( ']' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^230^^^^^223^234^buf.append ( ']' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( ',' ) ;buf.append ( ']' ) ;^230^^^^^223^234^buf.append ( ']' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( min ) ;buf.append ( ']' ) ;^230^^^^^223^234^buf.append ( ']' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( max ) ;buf.append ( ']' ) ;^230^^^^^223^234^buf.append ( ']' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P11_Insert_Donor_Statement]^buf.append ( "Range[" ) ;buf.append ( ']' ) ;^230^^^^^223^234^buf.append ( ']' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^231^^^^^223^234^toString = buf.toString (  ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^toString = buf .StringBuffer ( compareMin )  ;^231^^^^^223^234^toString = buf.toString (  ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( hashCode ) ;^225^^^^^223^234^StringBuffer buf = new StringBuffer ( 32 ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P3_Replace_Literal]^buf.append ( "Ran" ) ;^226^^^^^223^234^buf.append ( "Range[" ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P8_Replace_Mix]^buf .append ( toString )  ;^226^^^^^223^234^buf.append ( "Range[" ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P5_Replace_Variable]^buf.append ( num2 ) ;^227^^^^^223^234^buf.append ( min ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P7_Replace_Invocation]^buf .append ( toString )  ;^228^^^^^223^234^buf.append ( ',' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^229^230^^^^223^234^buf.append ( max ) ; buf.append ( ']' ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[P14_Delete_Statement]^^230^231^^^^223^234^buf.append ( ']' ) ; toString = buf.toString (  ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
